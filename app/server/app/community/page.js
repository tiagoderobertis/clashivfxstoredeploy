(()=>{var e={};e.id=28,e.ids=[28],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},9121:e=>{"use strict";e.exports=require("next/dist/server/app-render/action-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3873:e=>{"use strict";e.exports=require("path")},9693:(e,t,i)=>{"use strict";i.r(t),i.d(t,{GlobalError:()=>a.a,__next_app__:()=>d,pages:()=>c,routeModule:()=>u,tree:()=>h});var n=i(260),r=i(8203),s=i(5155),a=i.n(s),o=i(7292),l={};for(let e in o)0>["default","tree","pages","GlobalError","__next_app__","routeModule"].indexOf(e)&&(l[e]=()=>o[e]);i.d(t,l);let h=["",{children:["community",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(i.bind(i,8618)),"/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/community/page.tsx"]}]},{}]},{layout:[()=>Promise.resolve().then(i.bind(i,5885)),"/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(i.bind(i,1129)),"/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/not-found.tsx"],forbidden:[()=>Promise.resolve().then(i.t.bind(i,9116,23)),"next/dist/client/components/forbidden-error"],unauthorized:[()=>Promise.resolve().then(i.t.bind(i,1485,23)),"next/dist/client/components/unauthorized-error"]}],c=["/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/community/page.tsx"],d={require:i,loadChunk:()=>Promise.resolve()},u=new n.AppPageRouteModule({definition:{kind:r.RouteKind.APP_PAGE,page:"/community/page",pathname:"/community",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:h}})},5093:(e,t,i)=>{Promise.resolve().then(i.bind(i,5414))},8245:(e,t,i)=>{Promise.resolve().then(i.bind(i,3887))},3887:(e,t,i)=>{"use strict";let n;i.d(t,{default:()=>hk});var r=i(5512),s=i(6910),a=i(7021),o=i(1575),l=i(4309),h=i(8009),c=i.n(h),d=i(4269),u=i(1680);let p=(0,u.A)("Grid3x3",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"M3 9h18",key:"1pudct"}],["path",{d:"M3 15h18",key:"5xshup"}],["path",{d:"M9 3v18",key:"fh3hqa"}],["path",{d:"M15 3v18",key:"14nvp0"}]]),f=(0,u.A)("Sparkles",[["path",{d:"M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z",key:"4pj2yx"}],["path",{d:"M20 3v4",key:"1olli1"}],["path",{d:"M22 5h-4",key:"1gvqau"}],["path",{d:"M4 17v2",key:"vumght"}],["path",{d:"M5 18H3",key:"zchphs"}]]),m="generated",g="pointerleave",v="pointermove",y="touchend",x="tsParticles - Error";class _{constructor(e,t,i){if(this._updateFromAngle=(e,t)=>{this.x=Math.cos(e)*t,this.y=Math.sin(e)*t},!eo(e)&&e)this.x=e.x,this.y=e.y,this.z=e.z?e.z:0;else if(void 0!==e&&void 0!==t)this.x=e,this.y=t,this.z=i??0;else throw Error(`${x} Vector3d not initialized correctly`)}static get origin(){return _.create(0,0,0)}get angle(){return Math.atan2(this.y,this.x)}set angle(e){this._updateFromAngle(e,this.length)}get length(){return Math.sqrt(this.getLengthSq())}set length(e){this._updateFromAngle(this.angle,e)}static clone(e){return _.create(e.x,e.y,e.z)}static create(e,t,i){return new _(e,t,i)}add(e){return _.create(this.x+e.x,this.y+e.y,this.z+e.z)}addTo(e){this.x+=e.x,this.y+=e.y,this.z+=e.z}copy(){return _.clone(this)}distanceTo(e){return this.sub(e).length}distanceToSq(e){return this.sub(e).getLengthSq()}div(e){return _.create(this.x/e,this.y/e,this.z/e)}divTo(e){this.x/=e,this.y/=e,this.z/=e}getLengthSq(){return this.x**2+this.y**2}mult(e){return _.create(this.x*e,this.y*e,this.z*e)}multTo(e){this.x*=e,this.y*=e,this.z*=e}normalize(){let e=this.length;0!=e&&this.multTo(1/e)}rotate(e){return _.create(this.x*Math.cos(e)-this.y*Math.sin(e),this.x*Math.sin(e)+this.y*Math.cos(e),0)}setTo(e){this.x=e.x,this.y=e.y,this.z=e.z?e.z:0}sub(e){return _.create(this.x-e.x,this.y-e.y,this.z-e.z)}subFrom(e){this.x-=e.x,this.y-=e.y,this.z-=e.z}}class b extends _{constructor(e,t){super(e,t,0)}static get origin(){return b.create(0,0)}static clone(e){return b.create(e.x,e.y)}static create(e,t){return new b(e,t)}}let w=Math.random,S=new Map;function M(e,t){S.get(e)||S.set(e,t)}function C(e){return S.get(e)||(e=>e)}function T(){return A(w(),0,1-1e-16)}function A(e,t,i){return Math.min(Math.max(e,t),i)}function P(e,t,i,n){return Math.floor((e*i+t*n)/(i+n))}function E(e){let t=L(e),i=I(e);return t===i&&(i=0),T()*(t-i)+i}function z(e){return eo(e)?e:E(e)}function I(e){return eo(e)?e:e.min}function L(e){return eo(e)?e:e.max}function N(e,t){if(e===t||void 0===t&&eo(e))return e;let i=I(e),n=L(e);return void 0!==t?{min:Math.min(i,t),max:Math.max(n,t)}:N(i,n)}function D(e){let t=e.random,{enable:i,minimumValue:n}=es(t)?{enable:t,minimumValue:0}:t;return i?z(N(e.value,n)):z(e.value)}function O(e,t){let i=e.x-t.x,n=e.y-t.y;return{dx:i,dy:n,distance:Math.sqrt(i**2+n**2)}}function R(e,t){return O(e,t).distance}function k(e,t,i,n){return b.create(e.x*(i-n)/(i+n)+2*t.x*n/(i+n),e.y)}function U(e){return e?e.endsWith("%")?parseFloat(e)/100:parseFloat(e):1}let V={debug:console.debug,error:console.error,info:console.info,log:console.log,verbose:console.log,warning:console.warn};function F(e){let t={bounced:!1},{pSide:i,pOtherSide:n,rectSide:r,rectOtherSide:s,velocity:a,factor:o}=e;return n.min<s.min||n.min>s.max||n.max<s.min||n.max>s.max||(i.max>=r.min&&i.max<=(r.max+r.min)/2&&a>0||i.min<=r.max&&i.min>(r.max+r.min)/2&&a<0)&&(t.velocity=-(a*o),t.bounced=!0),t}function B(){return"undefined"==typeof window||!window||void 0===window.document||!window.document}function H(e){if(!B()&&"undefined"!=typeof matchMedia)return matchMedia(e)}function G(e,t){return e===t||ec(t)&&t.indexOf(e)>-1}async function W(e,t){try{await document.fonts.load(`${t??"400"} 36px '${e??"Verdana"}'`)}catch{}}function q(e,t,i=!0){return e[void 0!==t&&i?t%e.length:Math.floor(T()*e.length)]}function j(e,t,i,n,r){var s;let a;return s=X(e,n??0),a=!0,r&&"bottom"!==r||(a=s.top<t.height+i.x),a&&(!r||"left"===r)&&(a=s.right>i.x),a&&(!r||"right"===r)&&(a=s.left<t.width+i.y),a&&(!r||"top"===r)&&(a=s.bottom>i.y),a}function X(e,t){return{bottom:e.y+t,left:e.x-t,right:e.x+t,top:e.y-t}}function J(e,...t){for(let i of t){if(null==i)continue;if(!eh(i)){e=i;continue}let t=Array.isArray(i);for(let n in t&&(eh(e)||!e||!Array.isArray(e))?e=[]:!t&&(eh(e)||!e||Array.isArray(e))&&(e={}),i){if("__proto__"===n)continue;let t=i[n],r=e;r[n]=eh(t)&&Array.isArray(t)?t.map(e=>J(r[n],e)):J(r[n],t)}}return e}function Y(e,t){return!!ei(t,t=>t.enable&&G(e,t.mode))}function Z(e,t,i){ee(t,t=>{let n=t.mode;t.enable&&G(e,n)&&ee(t.selectors,e=>{i(e,t)})})}function $(e,t){if(t&&e)return ei(e,e=>(function(e,t){let i=ee(t,t=>e.matches(t));return ec(i)?i.some(e=>e):i})(t,e.selectors))}function Q(e){return{position:e.getPosition(),radius:e.getRadius(),mass:e.getMass(),velocity:e.velocity,factor:b.create(D(e.options.bounce.horizontal),D(e.options.bounce.vertical))}}function K(e,t){let{x:i,y:n}=e.velocity.sub(t.velocity),[r,s]=[e.position,t.position],{dx:a,dy:o}=O(s,r);if(i*a+n*o<0)return;let l=-Math.atan2(o,a),h=e.mass,c=t.mass,d=e.velocity.rotate(l),u=t.velocity.rotate(l),p=k(d,u,h,c),f=k(u,d,h,c),m=p.rotate(-l),g=f.rotate(-l);e.velocity.x=m.x*e.factor.x,e.velocity.y=m.y*e.factor.y,t.velocity.x=g.x*t.factor.x,t.velocity.y=g.y*t.factor.y}function ee(e,t){return ec(e)?e.map((e,i)=>t(e,i)):t(e,0)}function et(e,t,i){return ec(e)?q(e,t,i):e}function ei(e,t){return ec(e)?e.find((e,i)=>t(e,i)):t(e,0)?e:void 0}function en(e,t){let i=e.value,n=e.animation,r={delayTime:1e3*z(n.delay),enable:n.enable,value:z(e.value)*t,max:L(i)*t,min:I(i)*t,loops:0,maxLoops:z(n.count),time:0};if(n.enable){switch(r.decay=1-z(n.decay),n.mode){case"increase":r.status="increasing";break;case"decrease":r.status="decreasing";break;case"random":r.status=T()>=.5?"increasing":"decreasing"}let e="auto"===n.mode;switch(n.startValue){case"min":r.value=r.min,e&&(r.status="increasing");break;case"max":r.value=r.max,e&&(r.status="decreasing");break;default:r.value=E(r),e&&(r.status=T()>=.5?"increasing":"decreasing")}}return r.initialValue=r.value,r}function er(e,t){if("percent"!==e.mode){let{mode:t,...i}=e;return i}return"x"in e?{x:e.x/100*t.width,y:e.y/100*t.height}:{width:e.width/100*t.width,height:e.height/100*t.height}}function es(e){return"boolean"==typeof e}function ea(e){return"string"==typeof e}function eo(e){return"number"==typeof e}function el(e){return"function"==typeof e}function eh(e){return"object"==typeof e&&null!==e}function ec(e){return Array.isArray(e)}let ed="random",eu=new Map;function ep(e){eu.set(e.key,e)}function ef(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}function em(e,t,i=!0){if(!e)return;let n=ea(e)?{value:e}:e;if(ea(n.value))return function e(t,i,n=!0){if(!t)return;let r=ea(t)?{value:t}:t;if(ea(r.value))return r.value===ed?ex():function(e){for(let[,t]of eu)if(e.startsWith(t.stringPrefix))return t.parseString(e);let t=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,(e,t,i,n,r)=>t+t+i+i+n+n+(void 0!==r?r+r:"")),i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(t);return i?{a:void 0!==i[4]?parseInt(i[4],16)/255:1,b:parseInt(i[3],16),g:parseInt(i[2],16),r:parseInt(i[1],16)}:void 0}(r.value);if(ec(r.value))return e({value:q(r.value,i,n)});for(let[,e]of eu){let t=e.handleColor(r);if(t)return t}}(n.value,t,i);if(ec(n.value))return em({value:q(n.value,t,i)});for(let[,e]of eu){let t=e.handleRangeColor(n);if(t)return t}}function eg(e,t,i=!0){let n=em(e,t,i);return n?ev(n):void 0}function ev(e){let t=e.r/255,i=e.g/255,n=e.b/255,r=Math.max(t,i,n),s=Math.min(t,i,n),a={h:0,l:(r+s)/2,s:0};return r!==s&&(a.s=a.l<.5?(r-s)/(r+s):(r-s)/(2-r-s),a.h=t===r?(i-n)/(r-s):a.h=i===r?2+(n-t)/(r-s):4+(t-i)/(r-s)),a.l*=100,a.s*=100,a.h*=60,a.h<0&&(a.h+=360),a.h>=360&&(a.h-=360),a}function ey(e){let t={b:0,g:0,r:0},i={h:e.h/360,l:e.l/100,s:e.s/100};if(i.s){let e=i.l<.5?i.l*(1+i.s):i.l+i.s-i.l*i.s,n=2*i.l-e;t.r=ef(n,e,i.h+1/3),t.g=ef(n,e,i.h),t.b=ef(n,e,i.h-1/3)}else t.r=t.g=t.b=i.l;return t.r=Math.floor(255*t.r),t.g=Math.floor(255*t.g),t.b=Math.floor(255*t.b),t}function ex(e){let t=e??0;return{b:Math.floor(E(N(t,256))),g:Math.floor(E(N(t,256))),r:Math.floor(E(N(t,256)))}}function e_(e,t){return`rgba(${e.r}, ${e.g}, ${e.b}, ${t??1})`}function eb(e,t){return`hsla(${e.h}, ${e.s}%, ${e.l}%, ${t??1})`}function ew(e,t,i,n){let r=e,s=t;return void 0===r.r&&(r=ey(e)),void 0===s.r&&(s=ey(t)),{b:P(r.b,s.b,i,n),g:P(r.g,s.g,i,n),r:P(r.r,s.r,i,n)}}function eS(e,t,i){if(i===ed)return ex();if("mid"!==i)return i;{let i=e.getFillColor()??e.getStrokeColor(),n=t?.getFillColor()??t?.getStrokeColor();if(i&&n&&t)return ew(i,n,e.getRadius(),t.getRadius());{let e=i??n;if(e)return ey(e)}}}function eM(e,t,i){let n=ea(e)?e:e.value;return n===ed?i?em({value:n}):t?ed:"mid":"mid"===n?"mid":em({value:n})}function eC(e){return void 0!==e?{h:e.h.value,s:e.s.value,l:e.l.value}:void 0}function eT(e,t,i){let n={h:{enable:!1,value:e.h},s:{enable:!1,value:e.s},l:{enable:!1,value:e.l}};return t&&(eA(n.h,t.h,i),eA(n.s,t.s,i),eA(n.l,t.l,i)),n}function eA(e,t,i){e.enable=t.enable,e.enable?(e.velocity=z(t.speed)/100*i,e.decay=1-z(t.decay),e.status="increasing",e.loops=0,e.maxLoops=z(t.count),e.time=0,e.delayTime=1e3*z(t.delay),t.sync||(e.velocity*=T(),e.value*=T()),e.initialValue=e.value):e.velocity=0}function eP(e,t,i){e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(i.x,i.y),e.closePath()}function eE(e,t){e.clearRect(0,0,t.width,t.height)}class ez{constructor(e){this.container=e,this._applyPostDrawUpdaters=e=>{for(let t of this._postDrawUpdaters)t.afterDraw&&t.afterDraw(e)},this._applyPreDrawUpdaters=(e,t,i,n,r,s)=>{for(let a of this._preDrawUpdaters){if(a.getColorStyles){let{fill:s,stroke:o}=a.getColorStyles(t,e,i,n);s&&(r.fill=s),o&&(r.stroke=o)}if(a.getTransformValues){let e=a.getTransformValues(t);for(let t in e)!function(e,t,i){let n=t[i];void 0!==n&&(e[i]=(e[i]??1)*n)}(s,e,t)}a.beforeDraw&&a.beforeDraw(t)}},this._applyResizePlugins=()=>{for(let e of this._resizePlugins)e.resize&&e.resize()},this._getPluginParticleColors=e=>{let t,i;for(let n of this._colorPlugins)if(!t&&n.particleFillColor&&(t=eg(n.particleFillColor(e))),!i&&n.particleStrokeColor&&(i=eg(n.particleStrokeColor(e))),t&&i)break;return[t,i]},this._initCover=()=>{let e=this.container.actualOptions.backgroundMask.cover,t=em(e.color);if(t){let i={...t,a:e.opacity};this._coverColorStyle=e_(i,i.a)}},this._initStyle=()=>{let e=this.element,t=this.container.actualOptions;if(e)for(let i in this._fullScreen?(this._originalStyle=J({},e.style),this._setFullScreenStyle()):this._resetOriginalStyle(),t.style){if(!i||!t.style)continue;let n=t.style[i];n&&e.style.setProperty(i,n,"important")}},this._initTrail=async()=>{let e=this.container.actualOptions,t=e.particles.move.trail,i=t.fill;if(t.enable){if(i.color){let t=em(i.color);if(!t)return;let n=e.particles.move.trail;this._trailFill={color:{...t},opacity:1/n.length}}else await new Promise((e,n)=>{if(!i.image)return;let r=document.createElement("img");r.addEventListener("load",()=>{this._trailFill={image:r,opacity:1/t.length},e()}),r.addEventListener("error",e=>{n(e.error)}),r.src=i.image})}},this._paintBase=e=>{this.draw(t=>(function(e,t,i){e.fillStyle=i??"rgba(0,0,0,0)",e.fillRect(0,0,t.width,t.height)})(t,this.size,e))},this._paintImage=(e,t)=>{this.draw(i=>(function(e,t,i,n){i&&(e.globalAlpha=n,e.drawImage(i,0,0,t.width,t.height),e.globalAlpha=1)})(i,this.size,e,t))},this._repairStyle=()=>{let e=this.element;e&&(this._safeMutationObserver(e=>e.disconnect()),this._initStyle(),this.initBackground(),this._safeMutationObserver(t=>t.observe(e,{attributes:!0})))},this._resetOriginalStyle=()=>{let e=this.element,t=this._originalStyle;if(!(e&&t))return;let i=e.style;i.position=t.position,i.zIndex=t.zIndex,i.top=t.top,i.left=t.left,i.width=t.width,i.height=t.height},this._safeMutationObserver=e=>{this._mutationObserver&&e(this._mutationObserver)},this._setFullScreenStyle=()=>{let e=this.element;if(!e)return;let t="important",i=e.style;i.setProperty("position","fixed",t),i.setProperty("z-index",this.container.actualOptions.fullScreen.zIndex.toString(10),t),i.setProperty("top","0",t),i.setProperty("left","0",t),i.setProperty("width","100%",t),i.setProperty("height","100%",t)},this.size={height:0,width:0},this._context=null,this._generated=!1,this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[]}get _fullScreen(){return this.container.actualOptions.fullScreen.enable}clear(){let e=this.container.actualOptions,t=e.particles.move.trail,i=this._trailFill;e.backgroundMask.enable?this.paint():t.enable&&t.length>0&&i?i.color?this._paintBase(e_(i.color,i.opacity)):i.image&&this._paintImage(i.image,i.opacity):this.draw(e=>{eE(e,this.size)})}destroy(){if(this.stop(),this._generated){let e=this.element;e&&e.remove()}else this._resetOriginalStyle();this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[]}draw(e){let t=this._context;if(t)return e(t)}drawParticle(e,t){if(e.spawning||e.destroyed)return;let i=e.getRadius();if(i<=0)return;let n=e.getFillColor(),r=e.getStrokeColor()??n,[s,a]=this._getPluginParticleColors(e);s||(s=n),a||(a=r),(s||a)&&this.draw(n=>{let r=this.container,o=r.actualOptions,l=e.options.zIndex,h=(1-e.zIndexFactor)**l.opacityRate,c=e.bubble.opacity??e.opacity?.value??1,d=e.strokeOpacity??c,u=c*h,p={},f={fill:s?eb(s,u):void 0};f.stroke=a?eb(a,d*h):f.fill,this._applyPreDrawUpdaters(n,e,i,u,f,p),function(e){let{container:t,context:i,particle:n,delta:r,colorStyles:s,backgroundMask:a,composite:o,radius:l,opacity:h,shadow:c,transform:d}=e,u=n.getPosition(),p=n.rotation+(n.pathRotation?n.velocity.angle:0),f={sin:Math.sin(p),cos:Math.cos(p)},m={a:f.cos*(d.a??1),b:f.sin*(d.b??1),c:-f.sin*(d.c??1),d:f.cos*(d.d??1)};i.setTransform(m.a,m.b,m.c,m.d,u.x,u.y),i.beginPath(),a&&(i.globalCompositeOperation=o);let g=n.shadowColor;c.enable&&g&&(i.shadowBlur=c.blur,i.shadowColor=e_(g),i.shadowOffsetX=c.offset.x,i.shadowOffsetY=c.offset.y),s.fill&&(i.fillStyle=s.fill);let v=n.strokeWidth??0;i.lineWidth=v,s.stroke&&(i.strokeStyle=s.stroke),function(e,t,i,n,r,s){if(!i.shape)return;let a=e.drawers.get(i.shape);a&&a.draw(t,i,n,r,s,e.retina.pixelRatio)}(t,i,n,l,h,r),v>0&&i.stroke(),n.close&&i.closePath(),n.fill&&i.fill(),function(e,t,i,n,r,s){if(!i.shape)return;let a=e.drawers.get(i.shape);a&&a.afterEffect&&a.afterEffect(t,i,n,r,s,e.retina.pixelRatio)}(t,i,n,l,h,r),i.globalCompositeOperation="source-over",i.setTransform(1,0,0,1,0,0)}({container:r,context:n,particle:e,delta:t,colorStyles:f,backgroundMask:o.backgroundMask.enable,composite:o.backgroundMask.composite,radius:i*(1-e.zIndexFactor)**l.sizeRate,opacity:u,shadow:e.options.shadow,transform:p}),this._applyPostDrawUpdaters(e)})}drawParticlePlugin(e,t,i){this.draw(n=>{e.drawParticle&&e.drawParticle(n,t,i)})}drawPlugin(e,t){this.draw(i=>{e.draw&&e.draw(i,t)})}async init(){this._safeMutationObserver(e=>e.disconnect()),this._mutationObserver=function(e){if(!B()&&"undefined"!=typeof MutationObserver)return new MutationObserver(e)}(e=>{for(let t of e)"attributes"===t.type&&"style"===t.attributeName&&this._repairStyle()}),this.resize(),this._initStyle(),this._initCover();try{await this._initTrail()}catch(e){V.error(e)}this.initBackground(),this._safeMutationObserver(e=>{this.element&&e.observe(this.element,{attributes:!0})}),this.initUpdaters(),this.initPlugins(),this.paint()}initBackground(){let e=this.container.actualOptions.background,t=this.element;if(!t)return;let i=t.style;if(i){if(e.color){let t=em(e.color);i.backgroundColor=t?e_(t,e.opacity):""}else i.backgroundColor="";i.backgroundImage=e.image||"",i.backgroundPosition=e.position||"",i.backgroundRepeat=e.repeat||"",i.backgroundSize=e.size||""}}initPlugins(){for(let[,e]of(this._resizePlugins=[],this.container.plugins))e.resize&&this._resizePlugins.push(e),(e.particleFillColor||e.particleStrokeColor)&&this._colorPlugins.push(e)}initUpdaters(){for(let e of(this._preDrawUpdaters=[],this._postDrawUpdaters=[],this.container.particles.updaters))e.afterDraw&&this._postDrawUpdaters.push(e),(e.getColorStyles||e.getTransformValues||e.beforeDraw)&&this._preDrawUpdaters.push(e)}loadCanvas(e){this._generated&&this.element&&this.element.remove(),this._generated=e.dataset&&m in e.dataset?"true"===e.dataset[m]:this._generated,this.element=e,this.element.ariaHidden="true",this._originalStyle=J({},this.element.style),this.size.height=e.offsetHeight,this.size.width=e.offsetWidth,this._context=this.element.getContext("2d"),this._safeMutationObserver(e=>{this.element&&e.observe(this.element,{attributes:!0})}),this.container.retina.init(),this.initBackground()}paint(){let e=this.container.actualOptions;this.draw(t=>{e.backgroundMask.enable&&e.backgroundMask.cover?(eE(t,this.size),this._paintBase(this._coverColorStyle)):this._paintBase()})}resize(){if(!this.element)return!1;let e=this.container,t=e.retina.pixelRatio,i=e.canvas.size,n={width:this.element.offsetWidth*t,height:this.element.offsetHeight*t};if(n.height===i.height&&n.width===i.width&&n.height===this.element.height&&n.width===this.element.width)return!1;let r={...i};return this.element.width=i.width=this.element.offsetWidth*t,this.element.height=i.height=this.element.offsetHeight*t,this.container.started&&(this.resizeFactor={width:i.width/r.width,height:i.height/r.height}),!0}stop(){this._safeMutationObserver(e=>e.disconnect()),this._mutationObserver=void 0,this.draw(e=>eE(e,this.size))}async windowResize(){if(!this.element||!this.resize())return;let e=this.container,t=e.updateActualOptions();e.particles.setDensity(),this._applyResizePlugins(),t&&await e.refresh()}}function eI(e,t,i,n,r){if(n){let n={passive:!0};es(r)?n.capture=r:void 0!==r&&(n=r),e.addEventListener(t,i,n)}else e.removeEventListener(t,i,r)}class eL{constructor(e){this.container=e,this._doMouseTouchClick=e=>{let t=this.container,i=t.actualOptions;if(this._canPush){let e=t.interactivity.mouse,n=e.position;if(!n)return;e.clickPosition={...n},e.clickTime=new Date().getTime(),ee(i.interactivity.events.onClick.mode,e=>this.container.handleClickMode(e))}"touchend"===e.type&&setTimeout(()=>this._mouseTouchFinish(),500)},this._handleThemeChange=e=>{let t=this.container,i=t.options,n=i.defaultThemes,r=e.matches?n.dark:n.light,s=i.themes.find(e=>e.name===r);s&&s.default.auto&&t.loadTheme(r)},this._handleVisibilityChange=()=>{let e=this.container,t=e.actualOptions;this._mouseTouchFinish(),t.pauseOnBlur&&(document&&document.hidden?(e.pageHidden=!0,e.pause()):(e.pageHidden=!1,e.getAnimationStatus()?e.play(!0):e.draw(!0)))},this._handleWindowResize=async()=>{this._resizeTimeout&&(clearTimeout(this._resizeTimeout),delete this._resizeTimeout),this._resizeTimeout=setTimeout(async()=>{let e=this.container.canvas;e&&await e.windowResize()},1e3*this.container.actualOptions.interactivity.events.resize.delay)},this._manageInteractivityListeners=(e,t)=>{let i=this._handlers,n=this.container,r=n.actualOptions,s=n.interactivity.element;if(!s)return;let a=n.canvas.element;a&&(a.style.pointerEvents=s===a?"initial":"none"),(r.interactivity.events.onHover.enable||r.interactivity.events.onClick.enable)&&(eI(s,v,i.mouseMove,t),eI(s,"touchstart",i.touchStart,t),eI(s,"touchmove",i.touchMove,t),r.interactivity.events.onClick.enable?(eI(s,y,i.touchEndClick,t),eI(s,"pointerup",i.mouseUp,t),eI(s,"pointerdown",i.mouseDown,t)):eI(s,y,i.touchEnd,t),eI(s,e,i.mouseLeave,t),eI(s,"touchcancel",i.touchCancel,t))},this._manageListeners=e=>{let t=this._handlers,i=this.container,n=i.actualOptions.interactivity.detectsOn,r=i.canvas.element,s=g;"window"===n?(i.interactivity.element=window,s="pointerout"):"parent"===n&&r?i.interactivity.element=r.parentElement??r.parentNode:i.interactivity.element=r,this._manageMediaMatch(e),this._manageResize(e),this._manageInteractivityListeners(s,e),document&&eI(document,"visibilitychange",t.visibilityChange,e,!1)},this._manageMediaMatch=e=>{let t=this._handlers,i=H("(prefers-color-scheme: dark)");if(i){if(void 0!==i.addEventListener){eI(i,"change",t.themeChange,e);return}void 0!==i.addListener&&(e?i.addListener(t.oldThemeChange):i.removeListener(t.oldThemeChange))}},this._manageResize=e=>{let t=this._handlers,i=this.container;if(!i.actualOptions.interactivity.events.resize)return;if("undefined"==typeof ResizeObserver){eI(window,"resize",t.resize,e);return}let n=i.canvas.element;this._resizeObserver&&!e?(n&&this._resizeObserver.unobserve(n),this._resizeObserver.disconnect(),delete this._resizeObserver):!this._resizeObserver&&e&&n&&(this._resizeObserver=new ResizeObserver(async e=>{e.find(e=>e.target===n)&&await this._handleWindowResize()}),this._resizeObserver.observe(n))},this._mouseDown=()=>{let{interactivity:e}=this.container;if(!e)return;let{mouse:t}=e;t.clicking=!0,t.downPosition=t.position},this._mouseTouchClick=e=>{let t=this.container,i=t.actualOptions,{mouse:n}=t.interactivity;n.inside=!0;let r=!1,s=n.position;if(s&&i.interactivity.events.onClick.enable){for(let[,e]of t.plugins)if(e.clickPositionValid&&(r=e.clickPositionValid(s)))break;r||this._doMouseTouchClick(e),n.clicking=!1}},this._mouseTouchFinish=()=>{let e=this.container.interactivity;if(!e)return;let t=e.mouse;delete t.position,delete t.clickPosition,delete t.downPosition,e.status=g,t.inside=!1,t.clicking=!1},this._mouseTouchMove=e=>{let t;let i=this.container,n=i.actualOptions,r=i.interactivity,s=i.canvas.element;if(!r||!r.element)return;if(r.mouse.inside=!0,e.type.startsWith("pointer")){if(this._canPush=!0,r.element===window){if(s){let i=s.getBoundingClientRect();t={x:e.clientX-i.left,y:e.clientY-i.top}}}else if("parent"===n.interactivity.detectsOn){let i=e.target,n=e.currentTarget;if(i&&n&&s){let r=i.getBoundingClientRect(),a=n.getBoundingClientRect(),o=s.getBoundingClientRect();t={x:e.offsetX+2*r.left-(a.left+o.left),y:e.offsetY+2*r.top-(a.top+o.top)}}else t={x:e.offsetX??e.clientX,y:e.offsetY??e.clientY}}else e.target===s&&(t={x:e.offsetX??e.clientX,y:e.offsetY??e.clientY})}else if(this._canPush="touchmove"!==e.type,s){let i=e.touches[e.touches.length-1],n=s.getBoundingClientRect();t={x:i.clientX-(n.left??0),y:i.clientY-(n.top??0)}}let a=i.retina.pixelRatio;t&&(t.x*=a,t.y*=a),r.mouse.position=t,r.status=v},this._touchEnd=e=>{for(let t of Array.from(e.changedTouches))this._touches.delete(t.identifier);this._mouseTouchFinish()},this._touchEndClick=e=>{for(let t of Array.from(e.changedTouches))this._touches.delete(t.identifier);this._mouseTouchClick(e)},this._touchStart=e=>{for(let t of Array.from(e.changedTouches))this._touches.set(t.identifier,performance.now());this._mouseTouchMove(e)},this._canPush=!0,this._touches=new Map,this._handlers={mouseDown:()=>this._mouseDown(),mouseLeave:()=>this._mouseTouchFinish(),mouseMove:e=>this._mouseTouchMove(e),mouseUp:e=>this._mouseTouchClick(e),touchStart:e=>this._touchStart(e),touchMove:e=>this._mouseTouchMove(e),touchEnd:e=>this._touchEnd(e),touchCancel:e=>this._touchEnd(e),touchEndClick:e=>this._touchEndClick(e),visibilityChange:()=>this._handleVisibilityChange(),themeChange:e=>this._handleThemeChange(e),oldThemeChange:e=>this._handleThemeChange(e),resize:()=>{this._handleWindowResize()}}}addListeners(){this._manageListeners(!0)}removeListeners(){this._manageListeners(!1)}}class eN{constructor(){this.value=""}static create(e,t){let i=new eN;return i.load(e),void 0!==t&&(ea(t)||ec(t)?i.load({value:t}):i.load(t)),i}load(e){e?.value!==void 0&&(this.value=e.value)}}class eD{constructor(){this.color=new eN,this.color.value="",this.image="",this.position="",this.repeat="",this.size="",this.opacity=1}load(e){e&&(void 0!==e.color&&(this.color=eN.create(this.color,e.color)),void 0!==e.image&&(this.image=e.image),void 0!==e.position&&(this.position=e.position),void 0!==e.repeat&&(this.repeat=e.repeat),void 0!==e.size&&(this.size=e.size),void 0!==e.opacity&&(this.opacity=e.opacity))}}class eO{constructor(){this.color=new eN,this.color.value="#fff",this.opacity=1}load(e){e&&(void 0!==e.color&&(this.color=eN.create(this.color,e.color)),void 0!==e.opacity&&(this.opacity=e.opacity))}}class eR{constructor(){this.composite="destination-out",this.cover=new eO,this.enable=!1}load(e){if(e){if(void 0!==e.composite&&(this.composite=e.composite),void 0!==e.cover){let t=e.cover,i=ea(e.cover)?{color:e.cover}:e.cover;this.cover.load(void 0!==t.color?t:{color:i})}void 0!==e.enable&&(this.enable=e.enable)}}}class ek{constructor(){this.enable=!0,this.zIndex=0}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.zIndex&&(this.zIndex=e.zIndex))}}class eU{constructor(){this.enable=!1,this.mode=[]}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.mode&&(this.mode=e.mode))}}class eV{constructor(){this.selectors=[],this.enable=!1,this.mode=[],this.type="circle"}get el(){return this.elementId}set el(e){this.elementId=e}get elementId(){return this.ids}set elementId(e){this.ids=e}get ids(){return ee(this.selectors,e=>e.replace("#",""))}set ids(e){this.selectors=ee(e,e=>`#${e}`)}load(e){if(!e)return;let t=e.ids??e.elementId??e.el;void 0!==t&&(this.ids=t),void 0!==e.selectors&&(this.selectors=e.selectors),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.mode&&(this.mode=e.mode),void 0!==e.type&&(this.type=e.type)}}class eF{constructor(){this.enable=!1,this.force=2,this.smooth=10}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.force&&(this.force=e.force),void 0!==e.smooth&&(this.smooth=e.smooth))}}class eB{constructor(){this.enable=!1,this.mode=[],this.parallax=new eF}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.mode&&(this.mode=e.mode),this.parallax.load(e.parallax))}}class eH{constructor(){this.delay=.5,this.enable=!0}load(e){void 0!==e&&(void 0!==e.delay&&(this.delay=e.delay),void 0!==e.enable&&(this.enable=e.enable))}}class eG{constructor(){this.onClick=new eU,this.onDiv=new eV,this.onHover=new eB,this.resize=new eH}get onclick(){return this.onClick}set onclick(e){this.onClick=e}get ondiv(){return this.onDiv}set ondiv(e){this.onDiv=e}get onhover(){return this.onHover}set onhover(e){this.onHover=e}load(e){if(!e)return;this.onClick.load(e.onClick??e.onclick);let t=e.onDiv??e.ondiv;void 0!==t&&(this.onDiv=ee(t,e=>{let t=new eV;return t.load(e),t})),this.onHover.load(e.onHover??e.onhover),es(e.resize)?this.resize.enable=e.resize:this.resize.load(e.resize)}}class eW{constructor(e,t){this._engine=e,this._container=t}load(e){if(!e||!this._container)return;let t=this._engine.plugins.interactors.get(this._container);if(t)for(let i of t)i.loadModeOptions&&i.loadModeOptions(this,e)}}class eq{constructor(e,t){this.detectsOn="window",this.events=new eG,this.modes=new eW(e,t)}get detect_on(){return this.detectsOn}set detect_on(e){this.detectsOn=e}load(e){if(!e)return;let t=e.detectsOn??e.detect_on;void 0!==t&&(this.detectsOn=t),this.events.load(e.events),this.modes.load(e.modes)}}class ej{load(e){e&&(e.position&&(this.position={x:e.position.x??50,y:e.position.y??50,mode:e.position.mode??"percent"}),e.options&&(this.options=J({},e.options)))}}class eX{constructor(){this.maxWidth=1/0,this.options={},this.mode="canvas"}load(e){e&&(void 0!==e.maxWidth&&(this.maxWidth=e.maxWidth),void 0!==e.mode&&("screen"===e.mode?this.mode="screen":this.mode="canvas"),void 0!==e.options&&(this.options=J({},e.options)))}}class eJ{constructor(){this.auto=!1,this.mode="any",this.value=!1}load(e){e&&(void 0!==e.auto&&(this.auto=e.auto),void 0!==e.mode&&(this.mode=e.mode),void 0!==e.value&&(this.value=e.value))}}class eY{constructor(){this.name="",this.default=new eJ}load(e){e&&(void 0!==e.name&&(this.name=e.name),this.default.load(e.default),void 0!==e.options&&(this.options=J({},e.options)))}}class eZ{constructor(){this.count=0,this.enable=!1,this.offset=0,this.speed=1,this.delay=0,this.decay=0,this.sync=!0}load(e){e&&(void 0!==e.count&&(this.count=N(e.count)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.offset&&(this.offset=N(e.offset)),void 0!==e.speed&&(this.speed=N(e.speed)),void 0!==e.decay&&(this.decay=N(e.decay)),void 0!==e.delay&&(this.delay=N(e.delay)),void 0!==e.sync&&(this.sync=e.sync))}}class e${constructor(){this.h=new eZ,this.s=new eZ,this.l=new eZ}load(e){e&&(this.h.load(e.h),this.s.load(e.s),this.l.load(e.l))}}class eQ extends eN{constructor(){super(),this.animation=new e$}static create(e,t){let i=new eQ;return i.load(e),void 0!==t&&(ea(t)||ec(t)?i.load({value:t}):i.load(t)),i}load(e){if(super.load(e),!e)return;let t=e.animation;void 0!==t&&(void 0!==t.enable?this.animation.h.load(t):this.animation.load(e.animation))}}class eK{constructor(){this.speed=2}load(e){e&&void 0!==e.speed&&(this.speed=e.speed)}}class e0{constructor(){this.enable=!0,this.retries=0}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.retries&&(this.retries=e.retries))}}class e1{constructor(){this.count=0,this.enable=!1,this.speed=1,this.decay=0,this.delay=0,this.sync=!1}load(e){e&&(void 0!==e.count&&(this.count=N(e.count)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.speed&&(this.speed=N(e.speed)),void 0!==e.decay&&(this.decay=N(e.decay)),void 0!==e.delay&&(this.delay=N(e.delay)),void 0!==e.sync&&(this.sync=e.sync))}}class e2 extends e1{constructor(){super(),this.mode="auto",this.startValue="random"}load(e){super.load(e),e&&(void 0!==e.minimumValue&&(this.minimumValue=e.minimumValue),void 0!==e.mode&&(this.mode=e.mode),void 0!==e.startValue&&(this.startValue=e.startValue))}}class e3{constructor(){this.enable=!1,this.minimumValue=0}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.minimumValue&&(this.minimumValue=e.minimumValue))}}class e5{constructor(){this.random=new e3,this.value=0}load(e){e&&(es(e.random)?this.random.enable=e.random:this.random.load(e.random),void 0!==e.value&&(this.value=N(e.value,this.random.enable?this.random.minimumValue:void 0)))}}class e4 extends e5{constructor(){super(),this.random.minimumValue=.1,this.value=1}}class e6{constructor(){this.horizontal=new e4,this.vertical=new e4}load(e){e&&(this.horizontal.load(e.horizontal),this.vertical.load(e.vertical))}}class e9{constructor(){this.absorb=new eK,this.bounce=new e6,this.enable=!1,this.maxSpeed=50,this.mode="bounce",this.overlap=new e0}load(e){e&&(this.absorb.load(e.absorb),this.bounce.load(e.bounce),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.maxSpeed&&(this.maxSpeed=N(e.maxSpeed)),void 0!==e.mode&&(this.mode=e.mode),this.overlap.load(e.overlap))}}class e8{constructor(){this.offset=0,this.value=90}load(e){e&&(void 0!==e.offset&&(this.offset=N(e.offset)),void 0!==e.value&&(this.value=N(e.value)))}}class e7{constructor(){this.distance=200,this.enable=!1,this.rotate={x:3e3,y:3e3}}get rotateX(){return this.rotate.x}set rotateX(e){this.rotate.x=e}get rotateY(){return this.rotate.y}set rotateY(e){this.rotate.y=e}load(e){if(!e)return;void 0!==e.distance&&(this.distance=N(e.distance)),void 0!==e.enable&&(this.enable=e.enable);let t=e.rotate?.x??e.rotateX;void 0!==t&&(this.rotate.x=t);let i=e.rotate?.y??e.rotateY;void 0!==i&&(this.rotate.y=i)}}class te{constructor(){this.x=50,this.y=50,this.mode="percent",this.radius=0}load(e){e&&(void 0!==e.x&&(this.x=e.x),void 0!==e.y&&(this.y=e.y),void 0!==e.mode&&(this.mode=e.mode),void 0!==e.radius&&(this.radius=e.radius))}}class tt{constructor(){this.acceleration=9.81,this.enable=!1,this.inverse=!1,this.maxSpeed=50}load(e){e&&(void 0!==e.acceleration&&(this.acceleration=N(e.acceleration)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.inverse&&(this.inverse=e.inverse),void 0!==e.maxSpeed&&(this.maxSpeed=N(e.maxSpeed)))}}class ti{constructor(){this.clamp=!0,this.delay=new e5,this.enable=!1,this.options={}}load(e){e&&(void 0!==e.clamp&&(this.clamp=e.clamp),this.delay.load(e.delay),void 0!==e.enable&&(this.enable=e.enable),this.generator=e.generator,e.options&&(this.options=J(this.options,e.options)))}}class tn{load(e){e&&(void 0!==e.color&&(this.color=eN.create(this.color,e.color)),void 0!==e.image&&(this.image=e.image))}}class tr{constructor(){this.enable=!1,this.length=10,this.fill=new tn}get fillColor(){return this.fill.color}set fillColor(e){this.fill.load({color:e})}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),(void 0!==e.fill||void 0!==e.fillColor)&&this.fill.load(e.fill||{color:e.fillColor}),void 0!==e.length&&(this.length=e.length))}}class ts{constructor(){this.default="out"}load(e){e&&(void 0!==e.default&&(this.default=e.default),this.bottom=e.bottom??e.default,this.left=e.left??e.default,this.right=e.right??e.default,this.top=e.top??e.default)}}class ta{constructor(){this.acceleration=0,this.enable=!1}load(e){e&&(void 0!==e.acceleration&&(this.acceleration=N(e.acceleration)),void 0!==e.enable&&(this.enable=e.enable),e.position&&(this.position=J({},e.position)))}}class to{constructor(){this.angle=new e8,this.attract=new e7,this.center=new te,this.decay=0,this.distance={},this.direction="none",this.drift=0,this.enable=!1,this.gravity=new tt,this.path=new ti,this.outModes=new ts,this.random=!1,this.size=!1,this.speed=2,this.spin=new ta,this.straight=!1,this.trail=new tr,this.vibrate=!1,this.warp=!1}get bounce(){return this.collisions}set bounce(e){this.collisions=e}get collisions(){return!1}set collisions(e){}get noise(){return this.path}set noise(e){this.path=e}get outMode(){return this.outModes.default}set outMode(e){this.outModes.default=e}get out_mode(){return this.outMode}set out_mode(e){this.outMode=e}load(e){if(!e)return;this.angle.load(eo(e.angle)?{value:e.angle}:e.angle),this.attract.load(e.attract),this.center.load(e.center),void 0!==e.decay&&(this.decay=N(e.decay)),void 0!==e.direction&&(this.direction=e.direction),void 0!==e.distance&&(this.distance=eo(e.distance)?{horizontal:e.distance,vertical:e.distance}:{...e.distance}),void 0!==e.drift&&(this.drift=N(e.drift)),void 0!==e.enable&&(this.enable=e.enable),this.gravity.load(e.gravity);let t=e.outModes??e.outMode??e.out_mode;void 0!==t&&(eh(t)?this.outModes.load(t):this.outModes.load({default:t})),this.path.load(e.path??e.noise),void 0!==e.random&&(this.random=e.random),void 0!==e.size&&(this.size=e.size),void 0!==e.speed&&(this.speed=N(e.speed)),this.spin.load(e.spin),void 0!==e.straight&&(this.straight=e.straight),this.trail.load(e.trail),void 0!==e.vibrate&&(this.vibrate=e.vibrate),void 0!==e.warp&&(this.warp=e.warp)}}class tl extends e2{constructor(){super(),this.destroy="none",this.speed=2}get opacity_min(){return this.minimumValue}set opacity_min(e){this.minimumValue=e}load(e){e?.opacity_min!==void 0&&void 0===e.minimumValue&&(e.minimumValue=e.opacity_min),super.load(e),e&&void 0!==e.destroy&&(this.destroy=e.destroy)}}class th extends e5{constructor(){super(),this.animation=new tl,this.random.minimumValue=.1,this.value=1}get anim(){return this.animation}set anim(e){this.animation=e}load(e){if(!e)return;super.load(e);let t=e.animation??e.anim;void 0!==t&&(this.animation.load(t),this.value=N(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class tc{constructor(){this.enable=!1,this.width=1920,this.height=1080}get area(){return this.width}set area(e){this.width=e}get factor(){return this.height}set factor(e){this.height=e}get value_area(){return this.area}set value_area(e){this.area=e}load(e){if(!e)return;void 0!==e.enable&&(this.enable=e.enable);let t=e.width??e.area??e.value_area;void 0!==t&&(this.width=t);let i=e.height??e.factor;void 0!==i&&(this.height=i)}}class td{constructor(){this.density=new tc,this.limit=0,this.value=0}get max(){return this.limit}set max(e){this.limit=e}load(e){if(!e)return;this.density.load(e.density);let t=e.limit??e.max;void 0!==t&&(this.limit=t),void 0!==e.value&&(this.value=e.value)}}class tu{constructor(){this.blur=0,this.color=new eN,this.enable=!1,this.offset={x:0,y:0},this.color.value="#000"}load(e){e&&(void 0!==e.blur&&(this.blur=e.blur),this.color=eN.create(this.color,e.color),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.offset&&(void 0!==e.offset.x&&(this.offset.x=e.offset.x),void 0!==e.offset.y&&(this.offset.y=e.offset.y)))}}let tp="character",tf="char",tm="image",tg="images",tv="polygon",ty="star";class tx{constructor(){this.loadShape=(e,t,i,n)=>{if(!e)return;let r=ec(e),s=r?[]:{},a=r!==ec(this.options[t]),o=r!==ec(this.options[i]);a&&(this.options[t]=s),o&&n&&(this.options[i]=s),this.options[t]=J(this.options[t]??s,e),(!this.options[i]||n)&&(this.options[i]=J(this.options[i]??s,e))},this.close=!0,this.fill=!0,this.options={},this.type="circle"}get character(){return this.options[tp]??this.options[tf]}set character(e){this.options[tf]=this.options[tp]=e}get custom(){return this.options}set custom(e){this.options=e}get image(){return this.options[tm]??this.options[tg]}set image(e){this.options[tg]=this.options[tm]=e}get images(){return this.image}set images(e){this.image=e}get polygon(){return this.options[tv]??this.options[ty]}set polygon(e){this.options[ty]=this.options[tv]=e}get stroke(){return[]}set stroke(e){}load(e){if(!e)return;let t=e.options??e.custom;if(void 0!==t)for(let e in t){let i=t[e];i&&(this.options[e]=J(this.options[e]??{},i))}this.loadShape(e.character,tp,tf,!0),this.loadShape(e.polygon,tv,ty,!1),this.loadShape(e.image??e.images,tm,tg,!0),void 0!==e.close&&(this.close=e.close),void 0!==e.fill&&(this.fill=e.fill),void 0!==e.type&&(this.type=e.type)}}class t_ extends e2{constructor(){super(),this.destroy="none",this.speed=5}get size_min(){return this.minimumValue}set size_min(e){this.minimumValue=e}load(e){e?.size_min!==void 0&&void 0===e.minimumValue&&(e.minimumValue=e.size_min),super.load(e),e&&void 0!==e.destroy&&(this.destroy=e.destroy)}}class tb extends e5{constructor(){super(),this.animation=new t_,this.random.minimumValue=1,this.value=3}get anim(){return this.animation}set anim(e){this.animation=e}load(e){if(super.load(e),!e)return;let t=e.animation??e.anim;void 0!==t&&(this.animation.load(t),this.value=N(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class tw{constructor(){this.width=0}load(e){e&&(void 0!==e.color&&(this.color=eQ.create(this.color,e.color)),void 0!==e.width&&(this.width=N(e.width)),void 0!==e.opacity&&(this.opacity=N(e.opacity)))}}class tS extends e5{constructor(){super(),this.opacityRate=1,this.sizeRate=1,this.velocityRate=1}load(e){super.load(e),e&&(void 0!==e.opacityRate&&(this.opacityRate=e.opacityRate),void 0!==e.sizeRate&&(this.sizeRate=e.sizeRate),void 0!==e.velocityRate&&(this.velocityRate=e.velocityRate))}}class tM{constructor(e,t){this._engine=e,this._container=t,this.bounce=new e6,this.collisions=new e9,this.color=new eQ,this.color.value="#fff",this.groups={},this.move=new to,this.number=new td,this.opacity=new th,this.reduceDuplicates=!1,this.shadow=new tu,this.shape=new tx,this.size=new tb,this.stroke=new tw,this.zIndex=new tS}load(e){if(!e)return;if(this.bounce.load(e.bounce),this.color.load(eQ.create(this.color,e.color)),void 0!==e.groups)for(let t in e.groups){let i=e.groups[t];void 0!==i&&(this.groups[t]=J(this.groups[t]??{},i))}this.move.load(e.move),this.number.load(e.number),this.opacity.load(e.opacity),void 0!==e.reduceDuplicates&&(this.reduceDuplicates=e.reduceDuplicates),this.shape.load(e.shape),this.size.load(e.size),this.shadow.load(e.shadow),this.zIndex.load(e.zIndex);let t=e.move?.collisions??e.move?.bounce;void 0!==t&&(this.collisions.enable=t),this.collisions.load(e.collisions),void 0!==e.interactivity&&(this.interactivity=J({},e.interactivity));let i=e.stroke??e.shape?.stroke;if(i&&(this.stroke=ee(i,e=>{let t=new tw;return t.load(e),t})),this._container){let t=this._engine.plugins.updaters.get(this._container);if(t)for(let i of t)i.loadOptions&&i.loadOptions(this,e);let i=this._engine.plugins.interactors.get(this._container);if(i)for(let t of i)t.loadParticlesOptions&&t.loadParticlesOptions(this,e)}}}function tC(e,...t){for(let i of t)e.load(i)}function tT(e,t,...i){let n=new tM(e,t);return tC(n,...i),n}class tA{constructor(e,t){this._findDefaultTheme=e=>this.themes.find(t=>t.default.value&&t.default.mode===e)??this.themes.find(e=>e.default.value&&"any"===e.default.mode),this._importPreset=e=>{this.load(this._engine.plugins.getPreset(e))},this._engine=e,this._container=t,this.autoPlay=!0,this.background=new eD,this.backgroundMask=new eR,this.defaultThemes={},this.delay=0,this.fullScreen=new ek,this.detectRetina=!0,this.duration=0,this.fpsLimit=120,this.interactivity=new eq(e,t),this.manualParticles=[],this.particles=tT(this._engine,this._container),this.pauseOnBlur=!0,this.pauseOnOutsideViewport=!0,this.responsive=[],this.smooth=!1,this.style={},this.themes=[],this.zLayers=100}get backgroundMode(){return this.fullScreen}set backgroundMode(e){this.fullScreen.load(e)}get fps_limit(){return this.fpsLimit}set fps_limit(e){this.fpsLimit=e}get retina_detect(){return this.detectRetina}set retina_detect(e){this.detectRetina=e}load(e){if(!e)return;void 0!==e.preset&&ee(e.preset,e=>this._importPreset(e)),void 0!==e.autoPlay&&(this.autoPlay=e.autoPlay),void 0!==e.delay&&(this.delay=N(e.delay));let t=e.detectRetina??e.retina_detect;void 0!==t&&(this.detectRetina=t),void 0!==e.duration&&(this.duration=N(e.duration));let i=e.fpsLimit??e.fps_limit;void 0!==i&&(this.fpsLimit=i),void 0!==e.pauseOnBlur&&(this.pauseOnBlur=e.pauseOnBlur),void 0!==e.pauseOnOutsideViewport&&(this.pauseOnOutsideViewport=e.pauseOnOutsideViewport),void 0!==e.zLayers&&(this.zLayers=e.zLayers),this.background.load(e.background);let n=e.fullScreen??e.backgroundMode;es(n)?this.fullScreen.enable=n:this.fullScreen.load(n),this.backgroundMask.load(e.backgroundMask),this.interactivity.load(e.interactivity),e.manualParticles&&(this.manualParticles=e.manualParticles.map(e=>{let t=new ej;return t.load(e),t})),this.particles.load(e.particles),this.style=J(this.style,e.style),this._engine.plugins.loadOptions(this,e),void 0!==e.smooth&&(this.smooth=e.smooth);let r=this._engine.plugins.interactors.get(this._container);if(r)for(let t of r)t.loadOptions&&t.loadOptions(this,e);if(void 0!==e.responsive)for(let t of e.responsive){let e=new eX;e.load(t),this.responsive.push(e)}if(this.responsive.sort((e,t)=>e.maxWidth-t.maxWidth),void 0!==e.themes)for(let t of e.themes){let e=this.themes.find(e=>e.name===t.name);if(e)e.load(t);else{let e=new eY;e.load(t),this.themes.push(e)}}this.defaultThemes.dark=this._findDefaultTheme("dark")?.name,this.defaultThemes.light=this._findDefaultTheme("light")?.name}setResponsive(e,t,i){this.load(i);let n=this.responsive.find(i=>"screen"===i.mode&&screen?i.maxWidth>screen.availWidth:i.maxWidth*t>e);return this.load(n?.options),n?.maxWidth}setTheme(e){if(e){let t=this.themes.find(t=>t.name===e);t&&this.load(t.options)}else{let e=H("(prefers-color-scheme: dark)"),t=e&&e.matches,i=this._findDefaultTheme(t?"dark":"light");i&&this.load(i.options)}}}class tP{constructor(e,t){this.container=t,this._engine=e,this._interactors=e.plugins.getInteractors(this.container,!0),this._externalInteractors=[],this._particleInteractors=[]}async externalInteract(e){for(let t of this._externalInteractors)t.isEnabled()&&await t.interact(e)}handleClickMode(e){for(let t of this._externalInteractors)t.handleClickMode&&t.handleClickMode(e)}init(){for(let e of(this._externalInteractors=[],this._particleInteractors=[],this._interactors)){switch(e.type){case"external":this._externalInteractors.push(e);break;case"particles":this._particleInteractors.push(e)}e.init()}}async particlesInteract(e,t){for(let i of this._externalInteractors)i.clear(e,t);for(let i of this._particleInteractors)i.isEnabled(e)&&await i.interact(e,t)}async reset(e){for(let t of this._externalInteractors)t.isEnabled()&&t.reset(e);for(let t of this._particleInteractors)t.isEnabled(e)&&t.reset(e)}}let tE=e=>{if(!G(e.outMode,e.checkModes))return;let t=2*e.radius;e.coord>e.maxCoord-t?e.setCb(-e.radius):e.coord<t&&e.setCb(e.radius)};class tz{constructor(e,t,i,n,r,s){this.container=i,this._calcPosition=(e,t,i,n=0)=>{for(let[,n]of e.plugins){let e=void 0!==n.particlePosition?n.particlePosition(t,this):void 0;if(e)return _.create(e.x,e.y,i)}let r=function(e){return{x:e.position?.x??T()*e.size.width,y:e.position?.y??T()*e.size.height}}({size:e.canvas.size,position:t}),s=_.create(r.x,r.y,i),a=this.getRadius(),o=this.options.move.outModes,l=t=>{tE({outMode:t,checkModes:["bounce","bounce-horizontal"],coord:s.x,maxCoord:e.canvas.size.width,setCb:e=>s.x+=e,radius:a})},h=t=>{tE({outMode:t,checkModes:["bounce","bounce-vertical"],coord:s.y,maxCoord:e.canvas.size.height,setCb:e=>s.y+=e,radius:a})};return(l(o.left??o.default),l(o.right??o.default),h(o.top??o.default),h(o.bottom??o.default),this._checkOverlap(s,n))?this._calcPosition(e,void 0,i,n+1):s},this._calculateVelocity=()=>{let e=(function(e){let t=b.origin;return t.length=1,t.angle=e,t})(this.direction).copy(),t=this.options.move;if("inside"===t.direction||"outside"===t.direction)return e;let i=Math.PI/180*z(t.angle.value),n=Math.PI/180*z(t.angle.offset),r={left:n-i/2,right:n+i/2};return t.straight||(e.angle+=E(N(r.left,r.right))),t.random&&"number"==typeof t.speed&&(e.length*=T()),e},this._checkOverlap=(e,t=0)=>{let i=this.options.collisions,n=this.getRadius();if(!i.enable)return!1;let r=i.overlap;if(r.enable)return!1;let s=r.retries;if(s>=0&&t>s)throw Error(`${x} particle is overlapping and can't be placed`);return!!this.container.particles.find(t=>R(e,t.position)<n+t.getRadius())},this._getRollColor=e=>{if(!e||!this.roll||!this.backColor&&!this.roll.alter)return e;let t=this.roll.horizontal&&this.roll.vertical?2:1,i=this.roll.horizontal?Math.PI/2:0;return Math.floor(((this.roll.angle??0)+i)/(Math.PI/t))%2?this.backColor?this.backColor:this.roll.alter?function(e,t,i){return{h:e.h,s:e.s,l:e.l+("darken"===t?-1:1)*i}}(e,this.roll.alter.type,this.roll.alter.value):e:e},this._initPosition=e=>{let t=this.container,i=z(this.options.zIndex.value);this.position=this._calcPosition(t,e,A(i,0,t.zLayers)),this.initialPosition=this.position.copy();let n=t.canvas.size;switch(this.moveCenter={...er(this.options.move.center,n),radius:this.options.move.center.radius??0,mode:this.options.move.center.mode??"percent"},this.direction=function(e,t,i){if(eo(e))return e*Math.PI/180;switch(e){case"top":return-Math.PI/2;case"top-right":return-Math.PI/4;case"right":return 0;case"bottom-right":return Math.PI/4;case"bottom":return Math.PI/2;case"bottom-left":return 3*Math.PI/4;case"left":return Math.PI;case"top-left":return -3*Math.PI/4;case"inside":return Math.atan2(i.y-t.y,i.x-t.x);case"outside":return Math.atan2(t.y-i.y,t.x-i.x);default:return T()*Math.PI*2}}(this.options.move.direction,this.position,this.moveCenter),this.options.move.direction){case"inside":this.outType="inside";break;case"outside":this.outType="outside"}this.offset=b.origin},this._loadShapeData=(e,t)=>{let i=e.options[this.shape];if(i)return J({close:e.close,fill:e.fill},et(i,this.id,t))},this._engine=e,this.init(t,n,r,s)}destroy(e){if(this.unbreakable||this.destroyed)return;this.destroyed=!0,this.bubble.inRange=!1,this.slow.inRange=!1;let t=this.container,i=this.pathGenerator;for(let[,i]of t.plugins)i.particleDestroyed&&i.particleDestroyed(this,e);for(let i of t.particles.updaters)i.particleDestroyed&&i.particleDestroyed(this,e);i&&i.reset(this)}draw(e){let t=this.container;for(let[,i]of t.plugins)t.canvas.drawParticlePlugin(i,this,e);t.canvas.drawParticle(this,e)}getFillColor(){return this._getRollColor(this.bubble.color??eC(this.color))}getMass(){return this.getRadius()**2*Math.PI/2}getPosition(){return{x:this.position.x+this.offset.x,y:this.position.y+this.offset.y,z:this.position.z}}getRadius(){return this.bubble.radius??this.size.value}getStrokeColor(){return this._getRollColor(this.bubble.color??eC(this.strokeColor))}init(e,t,i,n){let r=this.container,s=this._engine;this.id=e,this.group=n,this.fill=!0,this.pathRotation=!1,this.close=!0,this.lastPathTime=0,this.destroyed=!1,this.unbreakable=!1,this.rotation=0,this.misplaced=!1,this.retina={maxDistance:{}},this.outType="normal",this.ignoresResizeRatio=!0;let a=r.retina.pixelRatio,o=r.actualOptions,l=tT(this._engine,r,o.particles),h=l.shape.type,{reduceDuplicates:c}=l;this.shape=et(h,this.id,c);let d=l.shape;if(i&&i.shape&&i.shape.type){let e=et(i.shape.type,this.id,c);e&&(this.shape=e,d.load(i.shape))}this.shapeData=this._loadShapeData(d,c),l.load(i);let u=this.shapeData;u&&l.load(u.particles);let p=new eq(s,r);p.load(r.actualOptions.interactivity),p.load(l.interactivity),this.interactivity=p,this.fill=u?.fill??l.shape.fill,this.close=u?.close??l.shape.close,this.options=l;let f=this.options.move.path;this.pathDelay=1e3*D(f.delay),f.generator&&(this.pathGenerator=this._engine.plugins.getPathGenerator(f.generator),this.pathGenerator&&r.addPath(f.generator,this.pathGenerator)&&this.pathGenerator.init(r)),r.retina.initParticle(this),this.size=en(this.options.size,a),this.bubble={inRange:!1},this.slow={inRange:!1,factor:1},this._initPosition(t),this.initialVelocity=this._calculateVelocity(),this.velocity=this.initialVelocity.copy(),this.moveDecay=1-z(this.options.move.decay);let m=r.particles;m.needsSort=m.needsSort||m.lastZIndex<this.position.z,m.lastZIndex=this.position.z,this.zIndexFactor=this.position.z/r.zLayers,this.sides=24;let g=r.drawers.get(this.shape);!g&&(g=this._engine.plugins.getShapeDrawer(this.shape))&&r.drawers.set(this.shape,g),g&&g.loadShape&&g.loadShape(this);let v=g?.getSidesCount;for(let e of(v&&(this.sides=v(this)),this.spawning=!1,this.shadowColor=em(this.options.shadow.color),r.particles.updaters))e.init(this);for(let e of r.particles.movers)e.init&&e.init(this);for(let[,e]of(g&&g.particleInit&&g.particleInit(r,this),r.plugins))e.particleCreated&&e.particleCreated(this)}isInsideCanvas(){let e=this.getRadius(),t=this.container.canvas.size,i=this.position;return i.x>=-e&&i.y>=-e&&i.y<=t.height+e&&i.x<=t.width+e}isVisible(){return!this.destroyed&&!this.spawning&&this.isInsideCanvas()}reset(){for(let e of this.container.particles.updaters)e.reset&&e.reset(this)}}class tI{constructor(e,t){this.position=e,this.particle=t}}class tL{constructor(e,t){this.position={x:e,y:t}}}class tN extends tL{constructor(e,t,i,n){super(e,t),this.size={height:n,width:i}}contains(e){let t=this.size.width,i=this.size.height,n=this.position;return e.x>=n.x&&e.x<=n.x+t&&e.y>=n.y&&e.y<=n.y+i}intersects(e){e instanceof tD&&e.intersects(this);let t=this.size.width,i=this.size.height,n=this.position,r=e.position,s=e instanceof tN?e.size:{width:0,height:0},a=s.width,o=s.height;return r.x<n.x+t&&r.x+a>n.x&&r.y<n.y+i&&r.y+o>n.y}}class tD extends tL{constructor(e,t,i){super(e,t),this.radius=i}contains(e){return R(e,this.position)<=this.radius}intersects(e){let t=this.position,i=e.position,n={x:Math.abs(i.x-t.x),y:Math.abs(i.y-t.y)},r=this.radius;if(e instanceof tD)return r+e.radius>Math.sqrt(n.x**2+n.y**2);if(e instanceof tN){let{width:t,height:i}=e.size;return Math.pow(n.x-t,2)+Math.pow(n.y-i,2)<=r**2||n.x<=r+t&&n.y<=r+i||n.x<=t||n.y<=i}return!1}}class tO{constructor(e,t){this.rectangle=e,this.capacity=t,this._subdivide=()=>{let{x:e,y:t}=this.rectangle.position,{width:i,height:n}=this.rectangle.size,{capacity:r}=this;for(let s=0;s<4;s++)this._subs.push(new tO(new tN(e+i/2*(s%2),t+n/2*(Math.round(s/2)-s%2),i/2,n/2),r));this._divided=!0},this._points=[],this._divided=!1,this._subs=[]}insert(e){return!!this.rectangle.contains(e.position)&&(this._points.length<this.capacity?(this._points.push(e),!0):(this._divided||this._subdivide(),this._subs.some(t=>t.insert(e))))}query(e,t,i){let n=i||[];if(!e.intersects(this.rectangle))return[];for(let i of this._points)!e.contains(i.position)&&R(e.position,i.position)>i.particle.getRadius()&&(!t||t(i.particle))||n.push(i.particle);if(this._divided)for(let i of this._subs)i.query(e,t,n);return n}queryCircle(e,t,i){return this.query(new tD(e.x,e.y,t),i)}queryRectangle(e,t,i){return this.query(new tN(e.x,e.y,t.width,t.height),i)}}let tR=e=>new tN(-e.width/4,-e.height/4,3*e.width/2,3*e.height/2);class tk{constructor(e,t){this._applyDensity=(e,t,i)=>{if(!e.number.density?.enable)return;let n=e.number,r=this._initDensityFactor(n.density),s=n.value,a=n.limit>0?n.limit:s,o=Math.min(s,a)*r+t,l=Math.min(this.count,this.filter(e=>e.group===i).length);this.limit=n.limit*r,l<o?this.push(Math.abs(o-l),void 0,e,i):l>o&&this.removeQuantity(l-o,i)},this._initDensityFactor=e=>{let t=this._container;if(!t.canvas.element||!e.enable)return 1;let i=t.canvas.element,n=t.retina.pixelRatio;return i.width*i.height/(e.factor*n**2*e.area)},this._pushParticle=(e,t,i,n)=>{try{let r=this.pool.pop();r?r.init(this._nextId,e,t,i):r=new tz(this._engine,this._nextId,this._container,e,t,i);let s=!0;if(n&&(s=n(r)),!s)return;return this._array.push(r),this._zArray.push(r),this._nextId++,this._engine.dispatchEvent("particleAdded",{container:this._container,data:{particle:r}}),r}catch(e){V.warning(`${x} adding particle: ${e}`);return}},this._removeParticle=(e,t,i)=>{let n=this._array[e];if(!n||n.group!==t)return!1;n.destroy(i);let r=this._zArray.indexOf(n);return this._array.splice(e,1),this._zArray.splice(r,1),this.pool.push(n),this._engine.dispatchEvent("particleRemoved",{container:this._container,data:{particle:n}}),!0},this._engine=e,this._container=t,this._nextId=0,this._array=[],this._zArray=[],this.pool=[],this.limit=0,this.needsSort=!1,this.lastZIndex=0,this._interactionManager=new tP(e,t);let i=t.canvas.size;this.quadTree=new tO(tR(i),4),this.movers=this._engine.plugins.getMovers(t,!0),this.updaters=this._engine.plugins.getUpdaters(t,!0)}get count(){return this._array.length}addManualParticles(){let e=this._container;for(let t of e.actualOptions.manualParticles)this.addParticle(t.position?er(t.position,e.canvas.size):void 0,t.options)}addParticle(e,t,i,n){let r=this._container.actualOptions.particles.number.limit;if(r>0){let e=this.count+1-r;e>0&&this.removeQuantity(e)}return this._pushParticle(e,t,i,n)}clear(){this._array=[],this._zArray=[]}destroy(){this._array=[],this._zArray=[],this.movers=[],this.updaters=[]}async draw(e){let t=this._container;for(let[,i]of(t.canvas.clear(),await this.update(e),t.plugins))t.canvas.drawPlugin(i,e);for(let t of this._zArray)t.draw(e)}filter(e){return this._array.filter(e)}find(e){return this._array.find(e)}handleClickMode(e){this._interactionManager.handleClickMode(e)}init(){let e=this._container,t=e.actualOptions;this.lastZIndex=0,this.needsSort=!1;let i=!1;for(let[,t]of(this.updaters=this._engine.plugins.getUpdaters(e,!0),this._interactionManager.init(),e.plugins))if(void 0!==t.particlesInitialization&&(i=t.particlesInitialization()),i)break;for(let[,t]of(this._interactionManager.init(),e.pathGenerators))t.init(e);if(this.addManualParticles(),!i){for(let e in t.particles.groups){let i=t.particles.groups[e];for(let n=this.count,r=0;r<i.number?.value&&n<t.particles.number.value;n++,r++)this.addParticle(void 0,i,e)}for(let e=this.count;e<t.particles.number.value;e++)this.addParticle()}}push(e,t,i,n){this.pushing=!0;for(let r=0;r<e;r++)this.addParticle(t?.position,i,n);this.pushing=!1}async redraw(){this.clear(),this.init(),await this.draw({value:0,factor:0})}remove(e,t,i){this.removeAt(this._array.indexOf(e),void 0,t,i)}removeAt(e,t=1,i,n){if(e<0||e>this.count)return;let r=0;for(let s=e;r<t&&s<this.count;s++)this._removeParticle(s--,i,n)&&r++}removeQuantity(e,t){this.removeAt(0,e,t)}setDensity(){let e=this._container.actualOptions,t=e.particles.groups;for(let e in t)this._applyDensity(t[e],0,e);this._applyDensity(e.particles,e.manualParticles.length)}async update(e){let t=this._container,i=new Set;for(let[,e]of(this.quadTree=new tO(tR(t.canvas.size),4),t.pathGenerators))e.update();for(let[,i]of t.plugins)i.update&&i.update(e);for(let n of this._array){let r=t.canvas.resizeFactor;for(let[,t]of(r&&!n.ignoresResizeRatio&&(n.position.x*=r.width,n.position.y*=r.height,n.initialPosition.x*=r.width,n.initialPosition.y*=r.height),n.ignoresResizeRatio=!1,await this._interactionManager.reset(n),this._container.plugins)){if(n.destroyed)break;t.particleUpdate&&t.particleUpdate(n,e)}for(let t of this.movers)t.isEnabled(n)&&t.move(n,e);if(n.destroyed){i.add(n);continue}this.quadTree.insert(new tI(n.getPosition(),n))}if(i.size){let e=e=>!i.has(e);this._array=this.filter(e),this._zArray=this._zArray.filter(e),this.pool.push(...i)}for(let t of(await this._interactionManager.externalInteract(e),this._array)){for(let i of this.updaters)i.update(t,e);t.destroyed||t.spawning||await this._interactionManager.particlesInteract(t,e)}if(delete t.canvas.resizeFactor,this.needsSort){let e=this._zArray;e.sort((e,t)=>t.position.z-e.position.z||e.id-t.id),this.lastZIndex=e[e.length-1].position.z,this.needsSort=!1}}}class tU{constructor(e){this.container=e,this.pixelRatio=1,this.reduceFactor=1}init(){let e=this.container,t=e.actualOptions;this.pixelRatio=!t.detectRetina||B()?1:window.devicePixelRatio,this.reduceFactor=1;let i=this.pixelRatio;if(e.canvas.element){let t=e.canvas.element;e.canvas.size.width=t.offsetWidth*i,e.canvas.size.height=t.offsetHeight*i}let n=t.particles,r=n.move;this.attractDistance=z(r.attract.distance)*i,this.maxSpeed=z(r.gravity.maxSpeed)*i,this.sizeAnimationSpeed=z(n.size.animation.speed)*i}initParticle(e){let t=e.options,i=this.pixelRatio,n=t.move,r=n.distance,s=e.retina;s.attractDistance=z(n.attract.distance)*i,s.moveDrift=z(n.drift)*i,s.moveSpeed=z(n.speed)*i,s.sizeAnimationSpeed=z(t.size.animation.speed)*i;let a=s.maxDistance;a.horizontal=void 0!==r.horizontal?r.horizontal*i:void 0,a.vertical=void 0!==r.vertical?r.vertical*i:void 0,s.maxSpeed=z(n.gravity.maxSpeed)*i}}function tV(e){return e&&!e.destroyed}function tF(e,t,...i){let n=new tA(e,t);return tC(n,...i),n}let tB={generate:e=>e.velocity,init:()=>{},update:()=>{},reset:()=>{}};class tH{constructor(e,t,i){this.id=t,this._intersectionManager=e=>{if(tV(this)&&this.actualOptions.pauseOnOutsideViewport)for(let t of e)t.target===this.interactivity.element&&(t.isIntersecting?this.play:this.pause)()},this._nextFrame=async e=>{try{if(!this.smooth&&void 0!==this.lastFrameTime&&e<this.lastFrameTime+1e3/this.fpsLimit){this.draw(!1);return}this.lastFrameTime??=e;let t=function(e,t=60,i=!1){return{value:e,factor:i?60/t:60*e/1e3}}(e-this.lastFrameTime,this.fpsLimit,this.smooth);if(this.addLifeTime(t.value),this.lastFrameTime=e,t.value>1e3){this.draw(!1);return}if(await this.particles.draw(t),!this.alive()){this.destroy();return}this.getAnimationStatus()&&this.draw(!1)}catch(e){V.error(`${x} in animation loop`,e)}},this._engine=e,this.fpsLimit=120,this.smooth=!1,this._delay=0,this._duration=0,this._lifeTime=0,this._firstStart=!0,this.started=!1,this.destroyed=!1,this._paused=!0,this.lastFrameTime=0,this.zLayers=100,this.pageHidden=!1,this._sourceOptions=i,this._initialSourceOptions=i,this.retina=new tU(this),this.canvas=new ez(this),this.particles=new tk(this._engine,this),this.pathGenerators=new Map,this.interactivity={mouse:{clicking:!1,inside:!1}},this.plugins=new Map,this.drawers=new Map,this._options=tF(this._engine,this),this.actualOptions=tF(this._engine,this),this._eventListeners=new eL(this),"undefined"!=typeof IntersectionObserver&&IntersectionObserver&&(this._intersectionObserver=new IntersectionObserver(e=>this._intersectionManager(e))),this._engine.dispatchEvent("containerBuilt",{container:this})}get options(){return this._options}get sourceOptions(){return this._sourceOptions}addClickHandler(e){if(!tV(this))return;let t=this.interactivity.element;if(!t)return;let i=(t,i,n)=>{if(!tV(this))return;let r=this.retina.pixelRatio,s={x:i.x*r,y:i.y*r};e(t,this.particles.quadTree.queryCircle(s,n*r))},n=!1,r=!1;t.addEventListener("click",e=>{if(!tV(this))return;let t={x:e.offsetX||e.clientX,y:e.offsetY||e.clientY};i(e,t,1)}),t.addEventListener("touchstart",()=>{tV(this)&&(n=!0,r=!1)}),t.addEventListener("touchmove",()=>{tV(this)&&(r=!0)}),t.addEventListener("touchend",e=>{if(tV(this)){if(n&&!r){let t=e.touches[e.touches.length-1];if(!t&&!(t=e.changedTouches[e.changedTouches.length-1]))return;let n=this.canvas.element,r=n?n.getBoundingClientRect():void 0;i(e,{x:t.clientX-(r?r.left:0),y:t.clientY-(r?r.top:0)},Math.max(t.radiusX,t.radiusY))}n=!1,r=!1}}),t.addEventListener("touchcancel",()=>{tV(this)&&(n=!1,r=!1)})}addLifeTime(e){this._lifeTime+=e}addPath(e,t,i=!1){return!(!tV(this)||!i&&this.pathGenerators.has(e))&&(this.pathGenerators.set(e,t??tB),!0)}alive(){return!this._duration||this._lifeTime<=this._duration}destroy(){if(!tV(this))return;for(let[,e]of(this.stop(),this.particles.destroy(),this.canvas.destroy(),this.drawers))e.destroy&&e.destroy(this);for(let e of this.drawers.keys())this.drawers.delete(e);this._engine.plugins.destroy(this),this.destroyed=!0;let e=this._engine.dom(),t=e.findIndex(e=>e===this);t>=0&&e.splice(t,1),this._engine.dispatchEvent("containerDestroyed",{container:this})}draw(e){if(!tV(this))return;let t=e;this._drawAnimationFrame=requestAnimationFrame(async e=>{t&&(this.lastFrameTime=void 0,t=!1),await this._nextFrame(e)})}async export(e,t={}){for(let[,i]of this.plugins){if(!i.export)continue;let n=await i.export(e,t);if(n.supported)return n.blob}V.error(`${x} - Export plugin with type ${e} not found`)}getAnimationStatus(){return!this._paused&&!this.pageHidden&&tV(this)}handleClickMode(e){if(tV(this))for(let[,t]of(this.particles.handleClickMode(e),this.plugins))t.handleClickMode&&t.handleClickMode(e)}async init(){if(tV(this)){for(let e of this._engine.plugins.getSupportedShapes()){let t=this._engine.plugins.getShapeDrawer(e);t&&this.drawers.set(e,t)}for(let[e,t]of(this._options=tF(this._engine,this,this._initialSourceOptions,this.sourceOptions),this.actualOptions=tF(this._engine,this,this._options),this._engine.plugins.getAvailablePlugins(this)))this.plugins.set(e,t);for(let[,e]of(this.retina.init(),await this.canvas.init(),this.updateActualOptions(),this.canvas.initBackground(),this.canvas.resize(),this.zLayers=this.actualOptions.zLayers,this._duration=1e3*z(this.actualOptions.duration),this._delay=1e3*z(this.actualOptions.delay),this._lifeTime=0,this.fpsLimit=this.actualOptions.fpsLimit>0?this.actualOptions.fpsLimit:120,this.smooth=this.actualOptions.smooth,this.drawers))e.init&&await e.init(this);for(let[,e]of this.plugins)e.init&&await e.init();for(let[,e]of(this._engine.dispatchEvent("containerInit",{container:this}),this.particles.init(),this.particles.setDensity(),this.plugins))e.particlesSetup&&e.particlesSetup();this._engine.dispatchEvent("particlesSetup",{container:this})}}async loadTheme(e){tV(this)&&(this._currentTheme=e,await this.refresh())}pause(){if(tV(this)&&(void 0!==this._drawAnimationFrame&&(cancelAnimationFrame(this._drawAnimationFrame),delete this._drawAnimationFrame),!this._paused)){for(let[,e]of this.plugins)e.pause&&e.pause();this.pageHidden||(this._paused=!0),this._engine.dispatchEvent("containerPaused",{container:this})}}play(e){if(!tV(this))return;let t=this._paused||e;if(this._firstStart&&!this.actualOptions.autoPlay){this._firstStart=!1;return}if(this._paused&&(this._paused=!1),t)for(let[,e]of this.plugins)e.play&&e.play();this._engine.dispatchEvent("containerPlay",{container:this}),this.draw(t||!1)}async refresh(){if(tV(this))return this.stop(),this.start()}async reset(){if(tV(this))return this._initialSourceOptions=void 0,this._options=tF(this._engine,this),this.actualOptions=tF(this._engine,this,this._options),this.refresh()}setNoise(e,t,i){tV(this)&&this.setPath(e,t,i)}setPath(e,t,i){if(!e||!tV(this))return;let n={...tB};el(e)?(n.generate=e,t&&(n.init=t),i&&(n.update=i)):(n.generate=e.generate||n.generate,n.init=e.init||n.init,n.update=e.update||n.update),this.addPath("default",n,!0)}async start(){tV(this)&&!this.started&&(await this.init(),this.started=!0,await new Promise(e=>{this._delayTimeout=setTimeout(async()=>{for(let[,e]of(this._eventListeners.addListeners(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.observe(this.interactivity.element),this.plugins))e.start&&await e.start();this._engine.dispatchEvent("containerStarted",{container:this}),this.play(),e()},this._delay)}))}stop(){if(tV(this)&&this.started){for(let[,e]of(this._delayTimeout&&(clearTimeout(this._delayTimeout),delete this._delayTimeout),this._firstStart=!0,this.started=!1,this._eventListeners.removeListeners(),this.pause(),this.particles.clear(),this.canvas.stop(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.unobserve(this.interactivity.element),this.plugins))e.stop&&e.stop();for(let e of this.plugins.keys())this.plugins.delete(e);this._sourceOptions=this._options,this._engine.dispatchEvent("containerStopped",{container:this})}}updateActualOptions(){this.actualOptions.responsive=[];let e=this.actualOptions.setResponsive(this.canvas.size.width,this.retina.pixelRatio,this._options);return this.actualOptions.setTheme(this._currentTheme),this.responsiveMaxWidth!==e&&(this.responsiveMaxWidth=e,!0)}}class tG{constructor(){this._listeners=new Map}addEventListener(e,t){this.removeEventListener(e,t);let i=this._listeners.get(e);i||(i=[],this._listeners.set(e,i)),i.push(t)}dispatchEvent(e,t){let i=this._listeners.get(e);i&&i.forEach(e=>e(t))}hasEventListener(e){return!!this._listeners.get(e)}removeAllEventListeners(e){e?this._listeners.delete(e):this._listeners=new Map}removeEventListener(e,t){let i=this._listeners.get(e);if(!i)return;let n=i.length,r=i.indexOf(t);r<0||(1===n?this._listeners.delete(e):i.splice(r,1))}}function tW(e,t,i,n=!1){let r=t.get(e);return(!r||n)&&(r=[...i.values()].map(t=>t(e)),t.set(e,r)),r}class tq{constructor(e){this._engine=e,this.plugins=[],this._initializers={interactors:new Map,movers:new Map,updaters:new Map},this.interactors=new Map,this.movers=new Map,this.updaters=new Map,this.presets=new Map,this.drawers=new Map,this.pathGenerators=new Map}addInteractor(e,t){this._initializers.interactors.set(e,t)}addParticleMover(e,t){this._initializers.movers.set(e,t)}addParticleUpdater(e,t){this._initializers.updaters.set(e,t)}addPathGenerator(e,t){this.getPathGenerator(e)||this.pathGenerators.set(e,t)}addPlugin(e){this.getPlugin(e.id)||this.plugins.push(e)}addPreset(e,t,i=!1){(i||!this.getPreset(e))&&this.presets.set(e,t)}addShapeDrawer(e,t){ee(e,e=>{this.getShapeDrawer(e)||this.drawers.set(e,t)})}destroy(e){this.updaters.delete(e),this.movers.delete(e),this.interactors.delete(e)}getAvailablePlugins(e){let t=new Map;for(let i of this.plugins)i.needsPlugin(e.actualOptions)&&t.set(i.id,i.getPlugin(e));return t}getInteractors(e,t=!1){return tW(e,this.interactors,this._initializers.interactors,t)}getMovers(e,t=!1){return tW(e,this.movers,this._initializers.movers,t)}getPathGenerator(e){return this.pathGenerators.get(e)}getPlugin(e){return this.plugins.find(t=>t.id===e)}getPreset(e){return this.presets.get(e)}getShapeDrawer(e){return this.drawers.get(e)}getSupportedShapes(){return this.drawers.keys()}getUpdaters(e,t=!1){return tW(e,this.updaters,this._initializers.updaters,t)}loadOptions(e,t){for(let i of this.plugins)i.loadOptions(e,t)}loadParticlesOptions(e,t,...i){let n=this.updaters.get(e);if(n)for(let e of n)e.loadOptions&&e.loadOptions(t,...i)}}async function tj(e){let t=et(e.url,e.index);if(!t)return e.fallback;let i=await fetch(t);return i.ok?i.json():(V.error(`${x} ${i.status} while retrieving config file`),e.fallback)}class tX{constructor(){this._configs=new Map,this._domArray=[],this._eventDispatcher=new tG,this._initialized=!1,this.plugins=new tq(this)}get configs(){let e={};for(let[t,i]of this._configs)e[t]=i;return e}get version(){return"2.12.0"}addConfig(e,t){ea(e)?t&&(t.name=e,this._configs.set(e,t)):this._configs.set(e.name??"default",e)}addEventListener(e,t){this._eventDispatcher.addEventListener(e,t)}async addInteractor(e,t,i=!0){this.plugins.addInteractor(e,t),await this.refresh(i)}async addMover(e,t,i=!0){this.plugins.addParticleMover(e,t),await this.refresh(i)}async addParticleUpdater(e,t,i=!0){this.plugins.addParticleUpdater(e,t),await this.refresh(i)}async addPathGenerator(e,t,i=!0){this.plugins.addPathGenerator(e,t),await this.refresh(i)}async addPlugin(e,t=!0){this.plugins.addPlugin(e),await this.refresh(t)}async addPreset(e,t,i=!1,n=!0){this.plugins.addPreset(e,t,i),await this.refresh(n)}async addShape(e,t,i,n,r,s=!0){let a;let o=s,l,h,c;es(i)?(o=i,l=void 0):l=i,es(n)?(o=n,h=void 0):h=n,es(r)?(o=r,c=void 0):c=r,a=el(t)?{afterEffect:h,destroy:c,draw:t,init:l}:t,this.plugins.addShapeDrawer(e,a),await this.refresh(o)}dispatchEvent(e,t){this._eventDispatcher.dispatchEvent(e,t)}dom(){return this._domArray}domItem(e){let t=this.dom(),i=t[e];if(!i||i.destroyed){t.splice(e,1);return}return i}init(){this._initialized||(this._initialized=!0)}async load(e,t){return this.loadFromArray(e,t)}async loadFromArray(e,t,i){let n;return e.id||e.element||e.url||e.options?n=e:(n={},ea(e)?n.id=e:n.options=e,eo(t)?n.index=t:n.options=t??n.options,n.index=i??n.index),this._loadParams(n)}async loadJSON(e,t,i){let n,r;return eo(t)||void 0===t?n=e:(r=e,n=t),this._loadParams({id:r,url:n,index:i})}async refresh(e=!0){e&&this.dom().forEach(e=>e.refresh())}removeEventListener(e,t){this._eventDispatcher.removeEventListener(e,t)}async set(e,t,i,n){let r={index:n};return ea(e)?r.id=e:r.element=e,t instanceof HTMLElement?r.element=t:r.options=t,eo(i)?r.index=i:r.options=i??r.options,this._loadParams(r)}async setJSON(e,t,i,n){let r={};return e instanceof HTMLElement?(r.element=e,r.url=t,r.index=i):(r.id=e,r.element=t,r.url=i,r.index=n),this._loadParams(r)}setOnClickHandler(e){let t=this.dom();if(!t.length)throw Error(`${x} can only set click handlers after calling tsParticles.load()`);for(let i of t)i.addClickHandler(e)}async _loadParams(e){let t;let i=e.id??`tsparticles${Math.floor(1e4*T())}`,{index:n,url:r}=e,s=r?await tj({fallback:e.options,url:r,index:n}):e.options,a=e.element??document.getElementById(i);a||((a=document.createElement("div")).id=i,document.body.append(a));let o=et(s,n),l=this.dom(),h=l.findIndex(e=>e.id===i);if(h>=0){let e=this.domItem(h);e&&!e.destroyed&&(e.destroy(),l.splice(h,1))}if("canvas"===a.tagName.toLowerCase())(t=a).dataset[m]="false";else{let e=a.getElementsByTagName("canvas");e.length?(t=e[0]).dataset[m]="false":((t=document.createElement("canvas")).dataset[m]="true",a.appendChild(t))}t.style.width||(t.style.width="100%"),t.style.height||(t.style.height="100%");let c=new tH(this,i,o);return h>=0?l.splice(h,0,c):l.push(c),c.canvas.loadCanvas(t),await c.start(),c}}class tJ{constructor(){this.key="hsl",this.stringPrefix="hsl"}handleColor(e){let t=e.value.hsl??e.value;if(void 0!==t.h&&void 0!==t.s&&void 0!==t.l)return ey(t)}handleRangeColor(e){let t=e.value.hsl??e.value;if(void 0!==t.h&&void 0!==t.l)return ey({h:z(t.h),l:z(t.l),s:z(t.s)})}parseString(e){if(!e.startsWith("hsl"))return;let t=/hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i.exec(e);return t?function(e){let t=ey(e);return{a:e.a,b:t.b,g:t.g,r:t.r}}({a:t.length>4?U(t[5]):1,h:parseInt(t[1],10),l:parseInt(t[3],10),s:parseInt(t[2],10)}):void 0}}class tY{constructor(){this.key="rgb",this.stringPrefix="rgb"}handleColor(e){let t=e.value.rgb??e.value;if(void 0!==t.r)return t}handleRangeColor(e){let t=e.value.rgb??e.value;if(void 0!==t.r)return{r:z(t.r),g:z(t.g),b:z(t.b)}}parseString(e){if(!e.startsWith(this.stringPrefix))return;let t=/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.%]+)\s*)?\)/i.exec(e);return t?{a:t.length>4?U(t[5]):1,b:parseInt(t[3],10),g:parseInt(t[2],10),r:parseInt(t[1],10)}:void 0}}let tZ=function(){let e=new tY,t=new tJ;ep(e),ep(t);let i=new tX;return i.init(),i}();B()||(window.tsParticles=tZ);let t$=e=>"object"==typeof e&&null!==e;function tQ(e,t,i=()=>!1){if(!t$(e)||!t$(t))return e===t;let n=Object.keys(e).filter(e=>!i(e)),r=Object.keys(t).filter(e=>!i(e));if(n.length!==r.length)return!1;for(let r of n){let n=e[r],s=t[r];if(t$(n)&&t$(s)){if(n===t&&s===e)continue;if(!tQ(n,s,i))return!1}else if(Array.isArray(n)&&Array.isArray(s)){if(!function e(t,i,n){if(t.length!==i.length)return!1;for(let r=0;r<t.length;r++){let s=t[r],a=i[r];if(Array.isArray(s)&&Array.isArray(a)){if(!e(s,a,n))return!1}else if(t$(s)&&t$(a)){if(!tQ(s,a,n))return!1}else if(s!==a)return!1}return!0}(n,s,i))return!1}else if(n!==s)return!1}return!0}let tK="tsparticles";class t0 extends h.Component{constructor(e){super(e),this.state={init:!1,library:void 0}}destroy(){this.state.library&&(this.state.library.destroy(),this.setState({library:void 0}))}shouldComponentUpdate(e){let t=e.options??e.params,i=this.props.options??this.props.params;return e.url!==this.props.url||e.id!==this.props.id||e.canvasClassName!==this.props.canvasClassName||e.className!==this.props.className||e.height!==this.props.height||e.width!==this.props.width||!tQ(e.style,this.props.style)||e.init!==this.props.init||e.loaded!==this.props.loaded||!tQ(t,i,e=>e.startsWith("_"))}componentDidUpdate(){this.refresh()}forceUpdate(){this.refresh().then(()=>{super.forceUpdate()})}componentDidMount(){(async()=>{this.props.init&&await this.props.init(tZ),this.setState({init:!0},async()=>{await this.loadParticles()})})()}componentWillUnmount(){this.destroy()}render(){let{width:e,height:t,className:i,canvasClassName:n,id:r}=this.props;return c().createElement("div",{className:i,id:r},c().createElement("canvas",{className:n,style:{...this.props.style,width:e,height:t}}))}async refresh(){this.destroy(),await this.loadParticles()}async loadParticles(){if(!this.state.init)return;let e=this.props.id??t0.defaultProps.id??tK,t=await tZ.load({url:this.props.url,id:e,options:this.props.options??this.props.params});this.props.container&&(this.props.container.current=t),this.setState({library:t}),this.props.loaded&&await this.props.loaded(t)}}t0.defaultProps={width:"100%",height:"100%",options:{},style:{},url:void 0,id:tK};class t1{static init(e){let t=new t1,i=e.selector;if(!i)throw Error("No selector provided");let n=document.querySelector(i);if(!n)throw Error("No element found for selector");return tZ.set(i.replace(".","").replace("!",""),n,{fullScreen:{enable:!1},particles:{color:{value:e.color??"!000000"},links:{color:"random",distance:e.minDistance??120,enable:e.connectParticles??!1},move:{enable:!0,speed:e.speed??.5},number:{value:e.maxParticles??100},size:{value:{min:1,max:e.sizeVariations??3}}},responsive:e.responsive?.map(t=>({maxWidth:t.breakpoint,options:{particles:{color:{value:t.options?.color},links:{distance:t.options?.minDistance,enable:t.options?.connectParticles},number:{value:e.maxParticles},move:{enable:!0,speed:t.options?.speed},size:{value:t.options?.sizeVariations}}}}))}).then(e=>{t._container=e}),t}destroy(){let e=this._container;e&&e.destroy()}pauseAnimation(){let e=this._container;e&&e.pause()}resumeAnimation(){let e=this._container;e&&e.play()}}let t2=e=>{let t=(t,i)=>e.load(t,i);return t.load=(t,i,n)=>{e.loadJSON(t,i).then(e=>{e&&n(e)}).catch(()=>{n(void 0)})},t.setOnClickHandler=t=>{e.setOnClickHandler(t)},{particlesJS:t,pJSDom:e.dom()}},t3=e=>{let{particlesJS:t,pJSDom:i}=t2(e);return window.particlesJS=t,window.pJSDom=i,window.Particles=t1,{particlesJS:t,pJSDom:i,Particles:t1}};class t5{constructor(){this._initSpin=e=>{let t=e.container,i=e.options.move.spin;if(!i.enable)return;let n=i.position??{x:50,y:50},r={x:n.x/100*t.canvas.size.width,y:n.y/100*t.canvas.size.height},s=R(e.getPosition(),r),a=z(i.acceleration);e.retina.spinAcceleration=a*t.retina.pixelRatio,e.spin={center:r,direction:e.velocity.x>=0?"clockwise":"counter-clockwise",angle:e.velocity.angle,radius:s,acceleration:e.retina.spinAcceleration}}}init(e){let t=e.options.move.gravity;e.gravity={enable:t.enable,acceleration:z(t.acceleration),inverse:t.inverse},this._initSpin(e)}isEnabled(e){return!e.destroyed&&e.options.move.enable}move(e,t){let i=e.options,n=i.move;if(!n.enable)return;let r=e.container,s=r.retina.pixelRatio,a=e.slow.inRange?e.slow.factor:1,o=(e.retina.moveSpeed??=z(n.speed)*s)*r.retina.reduceFactor,l=e.retina.moveDrift??=z(e.options.move.drift)*s,h=L(i.size.value)*s,c=o*(n.size?e.getRadius()/h:1)*a*(t.factor||1)/2,d=e.retina.maxSpeed??r.retina.maxSpeed;n.spin.enable?function(e,t){let i=e.container;if(!e.spin)return;let n={x:"clockwise"===e.spin.direction?Math.cos:Math.sin,y:"clockwise"===e.spin.direction?Math.sin:Math.cos};e.position.x=e.spin.center.x+e.spin.radius*n.x(e.spin.angle),e.position.y=e.spin.center.y+e.spin.radius*n.y(e.spin.angle),e.spin.radius+=e.spin.acceleration;let r=Math.max(i.canvas.size.width,i.canvas.size.height);e.spin.radius>r/2?(e.spin.radius=r/2,e.spin.acceleration*=-1):e.spin.radius<0&&(e.spin.radius=0,e.spin.acceleration*=-1),e.spin.angle+=t/100*(1-e.spin.radius/r)}(e,c):function(e,t,i,n,r,s){(function(e,t){let i=e.options.move.path;if(!i.enable)return;if(e.lastPathTime<=e.pathDelay){e.lastPathTime+=t.value;return}let n=e.pathGenerator?.generate(e,t);n&&e.velocity.addTo(n),i.clamp&&(e.velocity.x=A(e.velocity.x,-1,1),e.velocity.y=A(e.velocity.y,-1,1)),e.lastPathTime-=e.pathDelay})(e,s);let a=e.gravity,o=a?.enable&&a.inverse?-1:1;r&&i&&(e.velocity.x+=r*s.factor/(60*i)),a?.enable&&i&&(e.velocity.y+=o*(a.acceleration*s.factor)/(60*i));let l=e.moveDecay;e.velocity.multTo(l);let h=e.velocity.mult(i);a?.enable&&n>0&&(!a.inverse&&h.y>=0&&h.y>=n||a.inverse&&h.y<=0&&h.y<=-n)&&(h.y=o*n,i&&(e.velocity.y=h.y/i));let c=e.options.zIndex,d=(1-e.zIndexFactor)**c.velocityRate;h.multTo(d);let{position:u}=e;u.addTo(h),t.vibrate&&(u.x+=Math.sin(u.x*Math.cos(u.y)),u.y+=Math.cos(u.y*Math.sin(u.x)))}(e,n,c,d,l,t),function(e){let t=e.initialPosition,{dx:i,dy:n}=O(t,e.position),r=Math.abs(i),s=Math.abs(n),{maxDistance:a}=e.retina,o=a.horizontal,l=a.vertical;if(o||l){if((o&&r>=o||l&&s>=l)&&!e.misplaced)e.misplaced=!!o&&r>o||!!l&&s>l,o&&(e.velocity.x=e.velocity.y/2-e.velocity.x),l&&(e.velocity.y=e.velocity.x/2-e.velocity.y);else if((!o||r<o)&&(!l||s<l)&&e.misplaced)e.misplaced=!1;else if(e.misplaced){let i=e.position,n=e.velocity;o&&(i.x<t.x&&n.x<0||i.x>t.x&&n.x>0)&&(n.x*=-T()),l&&(i.y<t.y&&n.y<0||i.y>t.y&&n.y>0)&&(n.y*=-T())}}}(e)}}async function t4(e,t=!0){await e.addMover("base",()=>new t5,t)}class t6{draw(e,t,i){t.circleRange||(t.circleRange={min:0,max:2*Math.PI});let n=t.circleRange;e.arc(0,0,i,n.min,n.max,!1)}getSidesCount(){return 12}particleInit(e,t){let i=t.shapeData,n=i?.angle??{max:360,min:0};t.circleRange=eh(n)?{min:n.min*Math.PI/180,max:n.max*Math.PI/180}:{min:0,max:n*Math.PI/180}}}async function t9(e,t=!0){await e.addShape("circle",new t6,t)}function t8(e,t,i,n,r){if(!t||!i.enable||(t.maxLoops??0)>0&&(t.loops??0)>(t.maxLoops??0)||(t.time||(t.time=0),(t.delayTime??0)>0&&t.time<(t.delayTime??0)&&(t.time+=e.value),(t.delayTime??0)>0&&t.time<(t.delayTime??0)))return;let s=E(i.offset),a=(t.velocity??0)*e.factor+3.6*s,o=t.decay??1;r&&"increasing"!==t.status?(t.value-=a,t.value<0&&(t.loops||(t.loops=0),t.loops++,t.status="increasing",t.value+=t.value)):(t.value+=a,t.value>n&&(t.loops||(t.loops=0),t.loops++,r&&(t.status="decreasing",t.value-=t.value%n))),t.velocity&&1!==o&&(t.velocity*=o),t.value>n&&(t.value%=n)}class t7{constructor(e){this.container=e}init(e){let t=eg(e.options.color,e.id,e.options.reduceDuplicates);t&&(e.color=eT(t,e.options.color.animation,this.container.retina.reduceFactor))}isEnabled(e){let{h:t,s:i,l:n}=e.options.color.animation,{color:r}=e;return!e.destroyed&&!e.spawning&&(r?.h.value!==void 0&&t.enable||r?.s.value!==void 0&&i.enable||r?.l.value!==void 0&&n.enable)}update(e,t){!function(e,t){let{h:i,s:n,l:r}=e.options.color.animation,{color:s}=e;if(!s)return;let{h:a,s:o,l}=s;a&&t8(t,a,i,360,!1),o&&t8(t,o,n,100,!0),l&&t8(t,l,r,100,!0)}(e,t)}}async function ie(e,t=!0){await e.addParticleUpdater("color",e=>new t7(e),t)}class it{constructor(e){this.container=e}init(e){let t=e.options.opacity;e.opacity=en(t,1);let i=t.animation;i.enable&&(e.opacity.velocity=z(i.speed)/100*this.container.retina.reduceFactor,i.sync||(e.opacity.velocity*=T()))}isEnabled(e){return!e.destroyed&&!e.spawning&&!!e.opacity&&e.opacity.enable&&((e.opacity.maxLoops??0)<=0||(e.opacity.maxLoops??0)>0&&(e.opacity.loops??0)<(e.opacity.maxLoops??0))}reset(e){e.opacity&&(e.opacity.time=0,e.opacity.loops=0)}update(e,t){this.isEnabled(e)&&function(e,t){let i=e.opacity;if(e.destroyed||!i?.enable||(i.maxLoops??0)>0&&(i.loops??0)>(i.maxLoops??0))return;let n=i.min,r=i.max,s=i.decay??1;if(i.time||(i.time=0),(i.delayTime??0)>0&&i.time<(i.delayTime??0)&&(i.time+=t.value),!((i.delayTime??0)>0)||!(i.time<(i.delayTime??0))){switch(i.status){case"increasing":i.value>=r?(i.status="decreasing",i.loops||(i.loops=0),i.loops++):i.value+=(i.velocity??0)*t.factor;break;case"decreasing":i.value<=n?(i.status="increasing",i.loops||(i.loops=0),i.loops++):i.value-=(i.velocity??0)*t.factor}i.velocity&&1!==i.decay&&(i.velocity*=s),function(e,t,i,n){switch(e.options.opacity.animation.destroy){case"max":t>=n&&e.destroy();break;case"min":t<=i&&e.destroy()}}(e,i.value,n,r),e.destroyed||(i.value=A(i.value,n,r))}}(e,t)}}async function ii(e,t=!0){await e.addParticleUpdater("opacity",e=>new it(e),t)}class ir{constructor(e){this.container=e,this.modes=["bounce","bounce-vertical","bounce-horizontal","bounceVertical","bounceHorizontal","split"]}update(e,t,i,n){if(!this.modes.includes(n))return;let r=this.container,s=!1;for(let[,n]of r.plugins)if(void 0!==n.particleBounce&&(s=n.particleBounce(e,i,t)),s)break;if(s)return;let a=e.getPosition(),o=e.offset,l=e.getRadius(),h=X(a,l),c=r.canvas.size;(function(e){if("bounce"!==e.outMode&&"bounce-horizontal"!==e.outMode&&"bounceHorizontal"!==e.outMode&&"split"!==e.outMode||"left"!==e.direction&&"right"!==e.direction)return;e.bounds.right<0&&"left"===e.direction?e.particle.position.x=e.size+e.offset.x:e.bounds.left>e.canvasSize.width&&"right"===e.direction&&(e.particle.position.x=e.canvasSize.width-e.size-e.offset.x);let t=e.particle.velocity.x,i=!1;if("right"===e.direction&&e.bounds.right>=e.canvasSize.width&&t>0||"left"===e.direction&&e.bounds.left<=0&&t<0){let t=D(e.particle.options.bounce.horizontal);e.particle.velocity.x*=-t,i=!0}if(!i)return;let n=e.offset.x+e.size;e.bounds.right>=e.canvasSize.width&&"right"===e.direction?e.particle.position.x=e.canvasSize.width-n:e.bounds.left<=0&&"left"===e.direction&&(e.particle.position.x=n),"split"===e.outMode&&e.particle.destroy()})({particle:e,outMode:n,direction:t,bounds:h,canvasSize:c,offset:o,size:l}),function(e){if("bounce"!==e.outMode&&"bounce-vertical"!==e.outMode&&"bounceVertical"!==e.outMode&&"split"!==e.outMode||"bottom"!==e.direction&&"top"!==e.direction)return;e.bounds.bottom<0&&"top"===e.direction?e.particle.position.y=e.size+e.offset.y:e.bounds.top>e.canvasSize.height&&"bottom"===e.direction&&(e.particle.position.y=e.canvasSize.height-e.size-e.offset.y);let t=e.particle.velocity.y,i=!1;if("bottom"===e.direction&&e.bounds.bottom>=e.canvasSize.height&&t>0||"top"===e.direction&&e.bounds.top<=0&&t<0){let t=D(e.particle.options.bounce.vertical);e.particle.velocity.y*=-t,i=!0}if(!i)return;let n=e.offset.y+e.size;e.bounds.bottom>=e.canvasSize.height&&"bottom"===e.direction?e.particle.position.y=e.canvasSize.height-n:e.bounds.top<=0&&"top"===e.direction&&(e.particle.position.y=n),"split"===e.outMode&&e.particle.destroy()}({particle:e,outMode:n,direction:t,bounds:h,canvasSize:c,offset:o,size:l})}}class is{constructor(e){this.container=e,this.modes=["destroy"]}update(e,t,i,n){if(!this.modes.includes(n))return;let r=this.container;switch(e.outType){case"normal":case"outside":if(j(e.position,r.canvas.size,b.origin,e.getRadius(),t))return;break;case"inside":{let{dx:t,dy:i}=O(e.position,e.moveCenter),{x:n,y:r}=e.velocity;if(n<0&&t>e.moveCenter.radius||r<0&&i>e.moveCenter.radius||n>=0&&t<-e.moveCenter.radius||r>=0&&i<-e.moveCenter.radius)return}}r.particles.remove(e,void 0,!0)}}class ia{constructor(e){this.container=e,this.modes=["none"]}update(e,t,i,n){if(!this.modes.includes(n)||e.options.move.distance.horizontal&&("left"===t||"right"===t)||e.options.move.distance.vertical&&("top"===t||"bottom"===t))return;let r=e.options.move.gravity,s=this.container,a=s.canvas.size,o=e.getRadius();if(r.enable){let i=e.position;(!r.inverse&&i.y>a.height+o&&"bottom"===t||r.inverse&&i.y<-o&&"top"===t)&&s.particles.remove(e)}else{if(e.velocity.y>0&&e.position.y<=a.height+o||e.velocity.y<0&&e.position.y>=-o||e.velocity.x>0&&e.position.x<=a.width+o||e.velocity.x<0&&e.position.x>=-o)return;j(e.position,s.canvas.size,b.origin,o,t)||s.particles.remove(e)}}}class io{constructor(e){this.container=e,this.modes=["out"]}update(e,t,i,n){if(!this.modes.includes(n))return;let r=this.container;if("inside"===e.outType){let{x:t,y:i}=e.velocity,n=b.origin;n.length=e.moveCenter.radius,n.angle=e.velocity.angle+Math.PI,n.addTo(b.create(e.moveCenter));let{dx:s,dy:a}=O(e.position,n);if(t<=0&&s>=0||i<=0&&a>=0||t>=0&&s<=0||i>=0&&a<=0)return;e.position.x=Math.floor(E({min:0,max:r.canvas.size.width})),e.position.y=Math.floor(E({min:0,max:r.canvas.size.height}));let{dx:o,dy:l}=O(e.position,e.moveCenter);e.direction=Math.atan2(-l,-o),e.velocity.angle=e.direction}else{if(j(e.position,r.canvas.size,b.origin,e.getRadius(),t))return;switch(e.outType){case"outside":{e.position.x=Math.floor(E({min:-e.moveCenter.radius,max:e.moveCenter.radius}))+e.moveCenter.x,e.position.y=Math.floor(E({min:-e.moveCenter.radius,max:e.moveCenter.radius}))+e.moveCenter.y;let{dx:t,dy:i}=O(e.position,e.moveCenter);e.moveCenter.radius&&(e.direction=Math.atan2(i,t),e.velocity.angle=e.direction);break}case"normal":{let i=e.options.move.warp,n=r.canvas.size,s={bottom:n.height+e.getRadius()+e.offset.y,left:-e.getRadius()-e.offset.x,right:n.width+e.getRadius()+e.offset.x,top:-e.getRadius()-e.offset.y},a=e.getRadius(),o=X(e.position,a);"right"===t&&o.left>n.width+e.offset.x?(e.position.x=s.left,e.initialPosition.x=e.position.x,i||(e.position.y=T()*n.height,e.initialPosition.y=e.position.y)):"left"===t&&o.right<-e.offset.x&&(e.position.x=s.right,e.initialPosition.x=e.position.x,i||(e.position.y=T()*n.height,e.initialPosition.y=e.position.y)),"bottom"===t&&o.top>n.height+e.offset.y?(i||(e.position.x=T()*n.width,e.initialPosition.x=e.position.x),e.position.y=s.top,e.initialPosition.y=e.position.y):"top"===t&&o.bottom<-e.offset.y&&(i||(e.position.x=T()*n.width,e.initialPosition.x=e.position.x),e.position.y=s.bottom,e.initialPosition.y=e.position.y)}}}}}class il{constructor(e){this.container=e,this._updateOutMode=(e,t,i,n)=>{for(let r of this.updaters)r.update(e,n,t,i)},this.updaters=[new ir(e),new is(e),new io(e),new ia(e)]}init(){}isEnabled(e){return!e.destroyed&&!e.spawning}update(e,t){let i=e.options.move.outModes;this._updateOutMode(e,t,i.bottom??i.default,"bottom"),this._updateOutMode(e,t,i.left??i.default,"left"),this._updateOutMode(e,t,i.right??i.default,"right"),this._updateOutMode(e,t,i.top??i.default,"top")}}async function ih(e,t=!0){await e.addParticleUpdater("outModes",e=>new il(e),t)}class ic{init(e){let t=e.container,i=e.options.size.animation;i.enable&&(e.size.velocity=(e.retina.sizeAnimationSpeed??t.retina.sizeAnimationSpeed)/100*t.retina.reduceFactor,i.sync||(e.size.velocity*=T()))}isEnabled(e){return!e.destroyed&&!e.spawning&&e.size.enable&&((e.size.maxLoops??0)<=0||(e.size.maxLoops??0)>0&&(e.size.loops??0)<(e.size.maxLoops??0))}reset(e){e.size.loops=0}update(e,t){this.isEnabled(e)&&function(e,t){let i=e.size;if(e.destroyed||!i||!i.enable||(i.maxLoops??0)>0&&(i.loops??0)>(i.maxLoops??0))return;let n=(i.velocity??0)*t.factor,r=i.min,s=i.max,a=i.decay??1;if(i.time||(i.time=0),(i.delayTime??0)>0&&i.time<(i.delayTime??0)&&(i.time+=t.value),!((i.delayTime??0)>0)||!(i.time<(i.delayTime??0))){switch(i.status){case"increasing":i.value>=s?(i.status="decreasing",i.loops||(i.loops=0),i.loops++):i.value+=n;break;case"decreasing":i.value<=r?(i.status="increasing",i.loops||(i.loops=0),i.loops++):i.value-=n}i.velocity&&1!==a&&(i.velocity*=a),function(e,t,i,n){switch(e.options.size.animation.destroy){case"max":t>=n&&e.destroy();break;case"min":t<=i&&e.destroy()}}(e,i.value,r,s),e.destroyed||(i.value=A(i.value,r,s))}}(e,t)}}async function id(e,t=!0){await e.addParticleUpdater("size",()=>new ic,t)}async function iu(e,t=!0){await t4(e,!1),await t9(e,!1),await ie(e,!1),await ii(e,!1),await ih(e,!1),await id(e,!1),await e.refresh(t)}async function ip(){M("ease-in-quad",e=>e**2),M("ease-out-quad",e=>1-(1-e)**2),M("ease-in-out-quad",e=>e<.5?2*e**2:1-(-2*e+2)**2/2)}class im{constructor(e){this.container=e,this.type="external"}}class ig{constructor(){this.distance=200,this.duration=.4,this.easing="ease-out-quad",this.factor=1,this.maxSpeed=50,this.speed=1}load(e){e&&(void 0!==e.distance&&(this.distance=e.distance),void 0!==e.duration&&(this.duration=e.duration),void 0!==e.easing&&(this.easing=e.easing),void 0!==e.factor&&(this.factor=e.factor),void 0!==e.maxSpeed&&(this.maxSpeed=e.maxSpeed),void 0!==e.speed&&(this.speed=e.speed))}}class iv extends im{constructor(e,t){super(t),this._clickAttract=()=>{let e=this.container;e.attract||(e.attract={particles:[]});let{attract:t}=e;if(t.finish||(t.count||(t.count=0),t.count++,t.count!==e.particles.count||(t.finish=!0)),t.clicking){let t=e.interactivity.mouse.clickPosition,i=e.retina.attractModeDistance;if(!i||i<0||!t)return;this._processAttract(t,i,new tD(t.x,t.y,i))}else!1===t.clicking&&(t.particles=[])},this._hoverAttract=()=>{let e=this.container,t=e.interactivity.mouse.position,i=e.retina.attractModeDistance;i&&!(i<0)&&t&&this._processAttract(t,i,new tD(t.x,t.y,i))},this._processAttract=(e,t,i)=>{let n=this.container,r=n.actualOptions.interactivity.modes.attract;if(r)for(let s of n.particles.quadTree.query(i,e=>this.isEnabled(e))){let{dx:i,dy:n,distance:a}=O(s.position,e),o=r.speed*r.factor,l=A(C(r.easing)(1-a/t)*o,0,r.maxSpeed),h=b.create(0===a?o:i/a*l,0===a?o:n/a*l);s.position.subFrom(h)}},this._engine=e,t.attract||(t.attract={particles:[]}),this.handleClickMode=e=>{let i=this.container.actualOptions.interactivity.modes.attract;if(i&&"attract"===e){for(let e of(t.attract||(t.attract={particles:[]}),t.attract.clicking=!0,t.attract.count=0,t.attract.particles))this.isEnabled(e)&&e.velocity.setTo(e.initialVelocity);t.attract.particles=[],t.attract.finish=!1,setTimeout(()=>{t.destroyed||(t.attract||(t.attract={particles:[]}),t.attract.clicking=!1)},1e3*i.duration)}}}clear(){}init(){let e=this.container,t=e.actualOptions.interactivity.modes.attract;t&&(e.retina.attractModeDistance=t.distance*e.retina.pixelRatio)}async interact(){let e=this.container,t=e.actualOptions,i=e.interactivity.status===v,n=t.interactivity.events,r=n.onHover.enable,s=n.onHover.mode,a=n.onClick.enable,o=n.onClick.mode;i&&r&&G("attract",s)?this._hoverAttract():a&&G("attract",o)&&this._clickAttract()}isEnabled(e){let t=this.container,i=t.actualOptions,n=t.interactivity.mouse,r=(e?.interactivity??i.interactivity).events;if((!n.position||!r.onHover.enable)&&(!n.clickPosition||!r.onClick.enable))return!1;let s=r.onHover.mode,a=r.onClick.mode;return G("attract",s)||G("attract",a)}loadModeOptions(e,...t){for(let i of(e.attract||(e.attract=new ig),t))e.attract.load(i?.attract)}reset(){}}async function iy(e,t=!0){await e.addInteractor("externalAttract",t=>new iv(e,t),t)}class ix{constructor(){this.distance=200}load(e){e&&void 0!==e.distance&&(this.distance=e.distance)}}class i_ extends im{constructor(e){super(e),this._processBounce=(e,t,i)=>{for(let n of this.container.particles.quadTree.query(i,e=>this.isEnabled(e)))i instanceof tD?K(Q(n),{position:e,radius:t,mass:t**2*Math.PI/2,velocity:b.origin,factor:b.origin}):i instanceof tN&&function(e,t){let i=X(e.getPosition(),e.getRadius()),n=F({pSide:{min:i.left,max:i.right},pOtherSide:{min:i.top,max:i.bottom},rectSide:{min:t.left,max:t.right},rectOtherSide:{min:t.top,max:t.bottom},velocity:e.velocity.x,factor:D(e.options.bounce.horizontal)});n.bounced&&(void 0!==n.velocity&&(e.velocity.x=n.velocity),void 0!==n.position&&(e.position.x=n.position));let r=F({pSide:{min:i.top,max:i.bottom},pOtherSide:{min:i.left,max:i.right},rectSide:{min:t.top,max:t.bottom},rectOtherSide:{min:t.left,max:t.right},velocity:e.velocity.y,factor:D(e.options.bounce.vertical)});r.bounced&&(void 0!==r.velocity&&(e.velocity.y=r.velocity),void 0!==r.position&&(e.position.y=r.position))}(n,X(e,t))},this._processMouseBounce=()=>{let e=this.container,t=e.retina.pixelRatio,i=e.interactivity.mouse.position,n=e.retina.bounceModeDistance;n&&!(n<0)&&i&&this._processBounce(i,n,new tD(i.x,i.y,n+10*t))},this._singleSelectorBounce=(e,t)=>{let i=this.container,n=document.querySelectorAll(e);n.length&&n.forEach(e=>{let n=i.retina.pixelRatio,r={x:(e.offsetLeft+e.offsetWidth/2)*n,y:(e.offsetTop+e.offsetHeight/2)*n},s=e.offsetWidth/2*n,a=10*n,o="circle"===t.type?new tD(r.x,r.y,s+a):new tN(e.offsetLeft*n-a,e.offsetTop*n-a,e.offsetWidth*n+2*a,e.offsetHeight*n+2*a);this._processBounce(r,s,o)})}}clear(){}init(){let e=this.container,t=e.actualOptions.interactivity.modes.bounce;t&&(e.retina.bounceModeDistance=t.distance*e.retina.pixelRatio)}async interact(){let e=this.container,t=e.actualOptions.interactivity.events,i=e.interactivity.status===v,n=t.onHover.enable,r=t.onHover.mode,s=t.onDiv;i&&n&&G("bounce",r)?this._processMouseBounce():Z("bounce",s,(e,t)=>this._singleSelectorBounce(e,t))}isEnabled(e){let t=this.container,i=t.actualOptions,n=t.interactivity.mouse,r=(e?.interactivity??i.interactivity).events,s=r.onDiv;return n.position&&r.onHover.enable&&G("bounce",r.onHover.mode)||Y("bounce",s)}loadModeOptions(e,...t){for(let i of(e.bounce||(e.bounce=new ix),t))e.bounce.load(i?.bounce)}reset(){}}async function ib(e,t=!0){await e.addInteractor("externalBounce",e=>new i_(e),t)}class iw{constructor(){this.distance=200,this.duration=.4,this.mix=!1}load(e){if(e){if(void 0!==e.distance&&(this.distance=e.distance),void 0!==e.duration&&(this.duration=e.duration),void 0!==e.mix&&(this.mix=e.mix),void 0!==e.opacity&&(this.opacity=e.opacity),void 0!==e.color){let t=ec(this.color)?void 0:this.color;this.color=ee(e.color,e=>eN.create(t,e))}void 0!==e.size&&(this.size=e.size)}}}class iS extends iw{constructor(){super(),this.selectors=[]}get ids(){return ee(this.selectors,e=>e.replace("#",""))}set ids(e){this.selectors=ee(e,e=>`#${e}`)}load(e){super.load(e),e&&(void 0!==e.ids&&(this.ids=e.ids),void 0!==e.selectors&&(this.selectors=e.selectors))}}class iM extends iw{load(e){super.load(e),e&&(this.divs=ee(e.divs,e=>{let t=new iS;return t.load(e),t}))}}function iC(e,t,i,n){return t>=i?A(e+(t-i)*n,e,t):t<i?A(e-(i-t)*n,t,e):void 0}class iT extends im{constructor(e){super(e),this._clickBubble=()=>{let e=this.container,t=e.actualOptions,i=e.interactivity.mouse.clickPosition,n=t.interactivity.modes.bubble;if(!n||!i)return;e.bubble||(e.bubble={});let r=e.retina.bubbleModeDistance;if(!r||r<0)return;let s=e.particles.quadTree.queryCircle(i,r,e=>this.isEnabled(e)),{bubble:a}=e;for(let t of s){if(!a.clicking)continue;t.bubble.inRange=!a.durationEnd;let s=R(t.getPosition(),i),o=(new Date().getTime()-(e.interactivity.mouse.clickTime||0))/1e3;o>n.duration&&(a.durationEnd=!0),o>2*n.duration&&(a.clicking=!1,a.durationEnd=!1);let l={bubbleObj:{optValue:e.retina.bubbleModeSize,value:t.bubble.radius},particlesObj:{optValue:L(t.options.size.value)*e.retina.pixelRatio,value:t.size.value},type:"size"};this._process(t,s,o,l);let h={bubbleObj:{optValue:n.opacity,value:t.bubble.opacity},particlesObj:{optValue:L(t.options.opacity.value),value:t.opacity?.value??1},type:"opacity"};this._process(t,s,o,h),!a.durationEnd&&s<=r?this._hoverBubbleColor(t,s):delete t.bubble.color}},this._hoverBubble=()=>{let e=this.container,t=e.interactivity.mouse.position,i=e.retina.bubbleModeDistance;if(i&&!(i<0)&&void 0!==t)for(let n of e.particles.quadTree.queryCircle(t,i,e=>this.isEnabled(e))){n.bubble.inRange=!0;let r=R(n.getPosition(),t),s=1-r/i;r<=i?s>=0&&e.interactivity.status===v&&(this._hoverBubbleSize(n,s),this._hoverBubbleOpacity(n,s),this._hoverBubbleColor(n,s)):this.reset(n),e.interactivity.status===g&&this.reset(n)}},this._hoverBubbleColor=(e,t,i)=>{let n=this.container.actualOptions,r=i??n.interactivity.modes.bubble;if(r){if(!e.bubble.finalColor){let t=r.color;if(!t)return;let i=et(t);e.bubble.finalColor=eg(i)}if(e.bubble.finalColor){if(r.mix){e.bubble.color=void 0;let i=e.getFillColor();e.bubble.color=i?ev(ew(i,e.bubble.finalColor,1-t,t)):e.bubble.finalColor}else e.bubble.color=e.bubble.finalColor}}},this._hoverBubbleOpacity=(e,t,i)=>{let n=this.container.actualOptions,r=i?.opacity??n.interactivity.modes.bubble?.opacity;if(!r)return;let s=e.options.opacity.value,a=iC(e.opacity?.value??1,r,L(s),t);void 0!==a&&(e.bubble.opacity=a)},this._hoverBubbleSize=(e,t,i)=>{let n=this.container,r=i?.size?i.size*n.retina.pixelRatio:n.retina.bubbleModeSize;if(void 0===r)return;let s=L(e.options.size.value)*n.retina.pixelRatio,a=iC(e.size.value,r,s,t);void 0!==a&&(e.bubble.radius=a)},this._process=(e,t,i,n)=>{let r=this.container,s=n.bubbleObj.optValue,a=r.actualOptions.interactivity.modes.bubble;if(!a||void 0===s)return;let o=a.duration,l=r.retina.bubbleModeDistance,h=n.particlesObj.optValue,c=n.bubbleObj.value,d=n.particlesObj.value||0,u=n.type;if(l&&!(l<0)&&s!==h){if(r.bubble||(r.bubble={}),r.bubble.durationEnd)c&&("size"===u&&delete e.bubble.radius,"opacity"===u&&delete e.bubble.opacity);else if(t<=l){if((c??d)!==s){let t=d-i*(d-s)/o;"size"===u&&(e.bubble.radius=t),"opacity"===u&&(e.bubble.opacity=t)}}else"size"===u&&delete e.bubble.radius,"opacity"===u&&delete e.bubble.opacity}},this._singleSelectorHover=(e,t,i)=>{let n=this.container,r=document.querySelectorAll(t),s=n.actualOptions.interactivity.modes.bubble;s&&r.length&&r.forEach(t=>{let r=n.retina.pixelRatio,a={x:(t.offsetLeft+t.offsetWidth/2)*r,y:(t.offsetTop+t.offsetHeight/2)*r},o=t.offsetWidth/2*r,l="circle"===i.type?new tD(a.x,a.y,o):new tN(t.offsetLeft*r,t.offsetTop*r,t.offsetWidth*r,t.offsetHeight*r);for(let i of n.particles.quadTree.query(l,e=>this.isEnabled(e))){if(!l.contains(i.getPosition()))continue;i.bubble.inRange=!0;let n=$(s.divs,t);i.bubble.div&&i.bubble.div===t||(this.clear(i,e,!0),i.bubble.div=t),this._hoverBubbleSize(i,1,n),this._hoverBubbleOpacity(i,1,n),this._hoverBubbleColor(i,1,n)}})},e.bubble||(e.bubble={}),this.handleClickMode=t=>{"bubble"===t&&(e.bubble||(e.bubble={}),e.bubble.clicking=!0)}}clear(e,t,i){(!e.bubble.inRange||i)&&(delete e.bubble.div,delete e.bubble.opacity,delete e.bubble.radius,delete e.bubble.color)}init(){let e=this.container,t=e.actualOptions.interactivity.modes.bubble;t&&(e.retina.bubbleModeDistance=t.distance*e.retina.pixelRatio,void 0!==t.size&&(e.retina.bubbleModeSize=t.size*e.retina.pixelRatio))}async interact(e){let t=this.container.actualOptions.interactivity.events,i=t.onHover,n=t.onClick,r=i.enable,s=i.mode,a=n.enable,o=n.mode,l=t.onDiv;r&&G("bubble",s)?this._hoverBubble():a&&G("bubble",o)?this._clickBubble():Z("bubble",l,(t,i)=>this._singleSelectorHover(e,t,i))}isEnabled(e){let t=this.container,i=t.actualOptions,n=t.interactivity.mouse,{onClick:r,onDiv:s,onHover:a}=(e?.interactivity??i.interactivity).events,o=Y("bubble",s);return(!!o||!!a.enable&&!!n.position||!!r.enable&&!!n.clickPosition)&&(G("bubble",a.mode)||G("bubble",r.mode)||o)}loadModeOptions(e,...t){for(let i of(e.bubble||(e.bubble=new iM),t))e.bubble.load(i?.bubble)}reset(e){e.bubble.inRange=!1}}async function iA(e,t=!0){await e.addInteractor("externalBubble",e=>new iT(e),t)}class iP{constructor(){this.opacity=.5}load(e){e&&void 0!==e.opacity&&(this.opacity=e.opacity)}}class iE{constructor(){this.distance=80,this.links=new iP,this.radius=60}get lineLinked(){return this.links}set lineLinked(e){this.links=e}get line_linked(){return this.links}set line_linked(e){this.links=e}load(e){e&&(void 0!==e.distance&&(this.distance=e.distance),this.links.load(e.links??e.lineLinked??e.line_linked),void 0!==e.radius&&(this.radius=e.radius))}}class iz extends im{constructor(e){super(e)}clear(){}init(){let e=this.container,t=e.actualOptions.interactivity.modes.connect;t&&(e.retina.connectModeDistance=t.distance*e.retina.pixelRatio,e.retina.connectModeRadius=t.radius*e.retina.pixelRatio)}async interact(){let e=this.container;if(e.actualOptions.interactivity.events.onHover.enable&&"pointermove"===e.interactivity.status){let t=e.interactivity.mouse.position;if(!e.retina.connectModeDistance||e.retina.connectModeDistance<0||!e.retina.connectModeRadius||e.retina.connectModeRadius<0||!t)return;let i=Math.abs(e.retina.connectModeRadius),n=e.particles.quadTree.queryCircle(t,i,e=>this.isEnabled(e)),r=0;for(let t of n){let i=t.getPosition();for(let s of n.slice(r+1)){let n=s.getPosition(),r=Math.abs(e.retina.connectModeDistance),a=Math.abs(i.x-n.x),o=Math.abs(i.y-n.y);a<r&&o<r&&function(e,t,i){e.canvas.draw(n=>{var r;let s=function(e,t,i,n){let r=e.actualOptions.interactivity.modes.connect;if(r)return function(e,t,i,n){let r=Math.floor(i.getRadius()/t.getRadius()),s=t.getFillColor(),a=i.getFillColor();if(!s||!a)return;let o=t.getPosition(),l=i.getPosition(),h=ew(s,a,t.getRadius(),i.getRadius()),c=e.createLinearGradient(o.x,o.y,l.x,l.y);return c.addColorStop(0,eb(s,n)),c.addColorStop(r>1?1:r,e_(h,n)),c.addColorStop(1,eb(a,n)),c}(t,i,n,r.links.opacity)}(e,n,t,i);if(!s)return;let a=t.getPosition(),o=i.getPosition();r=t.retina.linksWidth??0,eP(n,a,o),n.lineWidth=r,n.strokeStyle=s,n.stroke()})}(e,t,s)}++r}}}isEnabled(e){let t=this.container,i=t.interactivity.mouse,n=(e?.interactivity??t.actualOptions.interactivity).events;return!!n.onHover.enable&&!!i.position&&G("connect",n.onHover.mode)}loadModeOptions(e,...t){for(let i of(e.connect||(e.connect=new iE),t))e.connect.load(i?.connect)}reset(){}}async function iI(e,t=!0){await e.addInteractor("externalConnect",e=>new iz(e),t)}class iL{constructor(){this.blink=!1,this.consent=!1,this.opacity=1}load(e){e&&(void 0!==e.blink&&(this.blink=e.blink),void 0!==e.color&&(this.color=eN.create(this.color,e.color)),void 0!==e.consent&&(this.consent=e.consent),void 0!==e.opacity&&(this.opacity=e.opacity))}}class iN{constructor(){this.distance=100,this.links=new iL}get lineLinked(){return this.links}set lineLinked(e){this.links=e}get line_linked(){return this.links}set line_linked(e){this.links=e}load(e){e&&(void 0!==e.distance&&(this.distance=e.distance),this.links.load(e.links??e.lineLinked??e.line_linked))}}class iD extends im{constructor(e){super(e)}clear(){}init(){let e=this.container,t=e.actualOptions.interactivity.modes.grab;t&&(e.retina.grabModeDistance=t.distance*e.retina.pixelRatio)}async interact(){let e=this.container,t=e.actualOptions.interactivity;if(!t.modes.grab||!t.events.onHover.enable||e.interactivity.status!==v)return;let i=e.interactivity.mouse.position;if(!i)return;let n=e.retina.grabModeDistance;if(n&&!(n<0))for(let r of e.particles.quadTree.queryCircle(i,n,e=>this.isEnabled(e))){let s=R(r.getPosition(),i);if(s>n)continue;let a=t.modes.grab.links,o=a.opacity,l=o-s*o/n;if(l<=0)continue;let h=a.color??r.options.links?.color;if(!e.particles.grabLineColor&&h){let i=t.modes.grab.links;e.particles.grabLineColor=eM(h,i.blink,i.consent)}let c=eS(r,void 0,e.particles.grabLineColor);c&&function(e,t,i,n,r){e.canvas.draw(e=>{var s;let a=t.getPosition();s=t.retina.linksWidth??0,eP(e,a,r),e.strokeStyle=e_(i,n),e.lineWidth=s,e.stroke()})}(e,r,c,l,i)}}isEnabled(e){let t=this.container,i=t.interactivity.mouse,n=(e?.interactivity??t.actualOptions.interactivity).events;return n.onHover.enable&&!!i.position&&G("grab",n.onHover.mode)}loadModeOptions(e,...t){for(let i of(e.grab||(e.grab=new iN),t))e.grab.load(i?.grab)}reset(){}}async function iO(e,t=!0){await e.addInteractor("externalGrab",e=>new iD(e),t)}class iR extends im{constructor(e){super(e),this.handleClickMode=e=>{if("pause"!==e)return;let t=this.container;t.getAnimationStatus()?t.pause():t.play()}}clear(){}init(){}async interact(){}isEnabled(){return!0}reset(){}}async function ik(e,t=!0){await e.addInteractor("externalPause",e=>new iR(e),t)}class iU{constructor(){this.default=!0,this.groups=[],this.quantity=4}get particles_nb(){return this.quantity}set particles_nb(e){this.quantity=N(e)}load(e){if(!e)return;void 0!==e.default&&(this.default=e.default),void 0!==e.groups&&(this.groups=e.groups.map(e=>e)),this.groups.length||(this.default=!0);let t=e.quantity??e.particles_nb;void 0!==t&&(this.quantity=N(t))}}class iV extends im{constructor(e){super(e),this.handleClickMode=e=>{if("push"!==e)return;let t=this.container,i=t.actualOptions.interactivity.modes.push;if(!i)return;let n=z(i.quantity);if(n<=0)return;let r=q([void 0,...i.groups]),s=void 0!==r?t.actualOptions.particles.groups[r]:void 0;t.particles.push(n,t.interactivity.mouse,s,r)}}clear(){}init(){}async interact(){}isEnabled(){return!0}loadModeOptions(e,...t){for(let i of(e.push||(e.push=new iU),t))e.push.load(i?.push)}reset(){}}async function iF(e,t=!0){await e.addInteractor("externalPush",e=>new iV(e),t)}class iB{constructor(){this.quantity=2}get particles_nb(){return this.quantity}set particles_nb(e){this.quantity=N(e)}load(e){if(!e)return;let t=e.quantity??e.particles_nb;void 0!==t&&(this.quantity=N(t))}}class iH extends im{constructor(e){super(e),this.handleClickMode=e=>{let t=this.container,i=t.actualOptions;if(!i.interactivity.modes.remove||"remove"!==e)return;let n=z(i.interactivity.modes.remove.quantity);t.particles.removeQuantity(n)}}clear(){}init(){}async interact(){}isEnabled(){return!0}loadModeOptions(e,...t){for(let i of(e.remove||(e.remove=new iB),t))e.remove.load(i?.remove)}reset(){}}async function iG(e,t=!0){await e.addInteractor("externalRemove",e=>new iH(e),t)}class iW{constructor(){this.distance=200,this.duration=.4,this.factor=100,this.speed=1,this.maxSpeed=50,this.easing="ease-out-quad"}load(e){e&&(void 0!==e.distance&&(this.distance=e.distance),void 0!==e.duration&&(this.duration=e.duration),void 0!==e.easing&&(this.easing=e.easing),void 0!==e.factor&&(this.factor=e.factor),void 0!==e.speed&&(this.speed=e.speed),void 0!==e.maxSpeed&&(this.maxSpeed=e.maxSpeed))}}class iq extends iW{constructor(){super(),this.selectors=[]}get ids(){return ee(this.selectors,e=>e.replace("#",""))}set ids(e){this.selectors=ee(e,e=>`#${e}`)}load(e){super.load(e),e&&(void 0!==e.ids&&(this.ids=e.ids),void 0!==e.selectors&&(this.selectors=e.selectors))}}class ij extends iW{load(e){super.load(e),e&&(this.divs=ee(e.divs,e=>{let t=new iq;return t.load(e),t}))}}class iX extends im{constructor(e,t){super(t),this._clickRepulse=()=>{let e=this.container,t=e.actualOptions.interactivity.modes.repulse;if(!t)return;let i=e.repulse||{particles:[]};if(i.finish||(i.count||(i.count=0),i.count++,i.count!==e.particles.count||(i.finish=!0)),i.clicking){let n=e.retina.repulseModeDistance;if(!n||n<0)return;let r=Math.pow(n/6,3),s=e.interactivity.mouse.clickPosition;if(void 0===s)return;let a=new tD(s.x,s.y,r);for(let n of e.particles.quadTree.query(a,e=>this.isEnabled(e))){let{dx:e,dy:a,distance:o}=O(s,n.position),l=o**2,h=-r*t.speed/l;if(l<=r){i.particles.push(n);let t=b.create(e,a);t.length=h,n.velocity.setTo(t)}}}else if(!1===i.clicking){for(let e of i.particles)e.velocity.setTo(e.initialVelocity);i.particles=[]}},this._hoverRepulse=()=>{let e=this.container,t=e.interactivity.mouse.position,i=e.retina.repulseModeDistance;i&&!(i<0)&&t&&this._processRepulse(t,i,new tD(t.x,t.y,i))},this._processRepulse=(e,t,i,n)=>{let r=this.container,s=r.particles.quadTree.query(i,e=>this.isEnabled(e)),a=r.actualOptions.interactivity.modes.repulse;if(a)for(let i of s){let{dx:r,dy:s,distance:o}=O(i.position,e),l=(n?.speed??a.speed)*a.factor,h=A(C(a.easing)(1-o/t)*l,0,a.maxSpeed),c=b.create(0===o?l:r/o*h,0===o?l:s/o*h);i.position.addTo(c)}},this._singleSelectorRepulse=(e,t)=>{let i=this.container,n=i.actualOptions.interactivity.modes.repulse;if(!n)return;let r=document.querySelectorAll(e);r.length&&r.forEach(e=>{let r=i.retina.pixelRatio,s={x:(e.offsetLeft+e.offsetWidth/2)*r,y:(e.offsetTop+e.offsetHeight/2)*r},a=e.offsetWidth/2*r,o="circle"===t.type?new tD(s.x,s.y,a):new tN(e.offsetLeft*r,e.offsetTop*r,e.offsetWidth*r,e.offsetHeight*r),l=$(n.divs,e);this._processRepulse(s,a,o,l)})},this._engine=e,t.repulse||(t.repulse={particles:[]}),this.handleClickMode=e=>{let i=this.container.actualOptions.interactivity.modes.repulse;if(!i||"repulse"!==e)return;t.repulse||(t.repulse={particles:[]});let n=t.repulse;for(let e of(n.clicking=!0,n.count=0,t.repulse.particles))this.isEnabled(e)&&e.velocity.setTo(e.initialVelocity);n.particles=[],n.finish=!1,setTimeout(()=>{t.destroyed||(n.clicking=!1)},1e3*i.duration)}}clear(){}init(){let e=this.container,t=e.actualOptions.interactivity.modes.repulse;t&&(e.retina.repulseModeDistance=t.distance*e.retina.pixelRatio)}async interact(){let e=this.container,t=e.actualOptions,i=e.interactivity.status===v,n=t.interactivity.events,r=n.onHover,s=r.enable,a=r.mode,o=n.onClick,l=o.enable,h=o.mode,c=n.onDiv;i&&s&&G("repulse",a)?this._hoverRepulse():l&&G("repulse",h)?this._clickRepulse():Z("repulse",c,(e,t)=>this._singleSelectorRepulse(e,t))}isEnabled(e){let t=this.container,i=t.actualOptions,n=t.interactivity.mouse,r=(e?.interactivity??i.interactivity).events,s=r.onDiv,a=r.onHover,o=r.onClick,l=Y("repulse",s);if(!(l||a.enable&&n.position||o.enable&&n.clickPosition))return!1;let h=a.mode,c=o.mode;return G("repulse",h)||G("repulse",c)||l}loadModeOptions(e,...t){for(let i of(e.repulse||(e.repulse=new ij),t))e.repulse.load(i?.repulse)}reset(){}}async function iJ(e,t=!0){await e.addInteractor("externalRepulse",t=>new iX(e,t),t)}class iY{constructor(){this.factor=3,this.radius=200}load(e){e&&(void 0!==e.factor&&(this.factor=e.factor),void 0!==e.radius&&(this.radius=e.radius))}}class iZ extends im{constructor(e){super(e)}clear(e,t,i){(!e.slow.inRange||i)&&(e.slow.factor=1)}init(){let e=this.container,t=e.actualOptions.interactivity.modes.slow;t&&(e.retina.slowModeRadius=t.radius*e.retina.pixelRatio)}async interact(){}isEnabled(e){let t=this.container,i=t.interactivity.mouse,n=(e?.interactivity??t.actualOptions.interactivity).events;return n.onHover.enable&&!!i.position&&G("slow",n.onHover.mode)}loadModeOptions(e,...t){for(let i of(e.slow||(e.slow=new iY),t))e.slow.load(i?.slow)}reset(e){e.slow.inRange=!1;let t=this.container,i=t.actualOptions,n=t.interactivity.mouse.position,r=t.retina.slowModeRadius,s=i.interactivity.modes.slow;if(!s||!r||r<0||!n)return;let a=R(n,e.getPosition()),o=s.factor,{slow:l}=e;a>r||(l.inRange=!0,l.factor=a/r/o)}}async function i$(e,t=!0){await e.addInteractor("externalSlow",e=>new iZ(e),t)}let iQ=[0,4,2,1],iK=[8,8,4,2];class i0{constructor(e){this.pos=0,this.data=new Uint8ClampedArray(e)}getString(e){let t=this.data.slice(this.pos,this.pos+e);return this.pos+=t.length,t.reduce((e,t)=>e+String.fromCharCode(t),"")}nextByte(){return this.data[this.pos++]}nextTwoBytes(){return this.pos+=2,this.data[this.pos-2]+(this.data[this.pos-1]<<8)}readSubBlocks(){let e="",t=0;do{t=this.data[this.pos++];for(let i=t;--i>=0;e+=String.fromCharCode(this.data[this.pos++]));}while(0!==t);return e}readSubBlocksBin(){let e=0,t=0;for(let i=0;0!==(e=this.data[this.pos+i]);i+=e+1)t+=e;let i=new Uint8Array(t);for(let t=0;0!==(e=this.data[this.pos++]);)for(let n=e;--n>=0;i[t++]=this.data[this.pos++]);return i}skipSubBlocks(){for(;0!==this.data[this.pos];this.pos+=this.data[this.pos]+1);this.pos++}}function i1(e,t){let i=[];for(let n=0;n<t;n++)i.push({r:e.data[e.pos],g:e.data[e.pos+1],b:e.data[e.pos+2]}),e.pos+=3;return i}async function i2(e,t,i,n){switch(e.nextByte()){case 249:{let r=t.frames[i(!1)];e.pos++;let s=e.nextByte();r.GCreserved=(224&s)>>>5,r.disposalMethod=(28&s)>>>2,r.userInputDelayFlag=(2&s)==2,r.delayTime=10*e.nextTwoBytes();let a=e.nextByte();(1&s)==1&&n(a),e.pos++;break}case 255:{e.pos++;let i={identifier:e.getString(8),authenticationCode:e.getString(3),data:e.readSubBlocksBin()};t.applicationExtensions.push(i);break}case 254:t.comments.push([i(!1),e.readSubBlocks()]);break;case 1:if(0===t.globalColorTable.length)throw EvalError("plain text extension without global color table");e.pos++,t.frames[i(!1)].plainTextData={left:e.nextTwoBytes(),top:e.nextTwoBytes(),width:e.nextTwoBytes(),height:e.nextTwoBytes(),charSize:{width:e.nextTwoBytes(),height:e.nextTwoBytes()},foregroundColor:e.nextByte(),backgroundColor:e.nextByte(),text:e.readSubBlocks()};break;default:e.skipSubBlocks()}}async function i3(e,t,i,n,r,s){let a=t.frames[n(!0)];a.left=e.nextTwoBytes(),a.top=e.nextTwoBytes(),a.width=e.nextTwoBytes(),a.height=e.nextTwoBytes();let o=e.nextByte(),l=(128&o)==128;a.sortFlag=(32&o)==32,a.reserved=(24&o)>>>3,l&&(a.localColorTable=i1(e,1<<(7&o)+1));let h=e=>{let{r:n,g:s,b:o}=(l?a.localColorTable:t.globalColorTable)[e];return{r:n,g:s,b:o,a:e===r(null)?i?~~((n+s+o)/3):0:255}},c=(()=>{try{return new ImageData(a.width,a.height,{colorSpace:"srgb"})}catch(e){if(e instanceof DOMException&&"IndexSizeError"===e.name)return null;throw e}})();if(null==c)throw EvalError("GIF frame size is to large");let d=e.nextByte(),u=e.readSubBlocksBin(),p=1<<d,f=(e,t)=>{let i=e>>>3,n=7&e;return(u[i]+(u[i+1]<<8)+(u[i+2]<<16)&(1<<t)-1<<n)>>>n};if((64&o)==64){for(let i=0,r=d+1,o=0,l=[[0]],u=0;u<4;u++){if(iQ[u]<a.height)for(let e=0,t=0;;){let n=i;if(i=f(o,r),o+=r+1,i===p){r=d+1,l.length=p+2;for(let e=0;e<l.length;e++)l[e]=e<p?[e]:[]}else{i>=l.length?l.push(l[n].concat(l[n][0])):n!==p&&l.push(l[n].concat(l[i][0]));for(let n=0;n<l[i].length;n++){let{r,g:s,b:o,a:d}=h(l[i][n]);c.data.set([r,s,o,d],iQ[u]*a.width+iK[u]*t+e%(4*a.width)),e+=4}l.length===1<<r&&r<12&&r++}if(e===4*a.width*(t+1)&&(t++,iQ[u]+iK[u]*t>=a.height))break}s?.(e.pos/(e.data.length-1),n(!1)+1,c,{x:a.left,y:a.top},{width:t.width,height:t.height})}a.image=c,a.bitmap=await createImageBitmap(c)}else{for(let e=0,t=d+1,i=0,n=[[0]],r=-4;;){let s=e;if(e=f(i,t),i+=t,e===p){t=d+1,n.length=p+2;for(let e=0;e<n.length;e++)n[e]=e<p?[e]:[]}else{if(e===p+1)break;e>=n.length?n.push(n[s].concat(n[s][0])):s!==p&&n.push(n[s].concat(n[e][0]));for(let t=0;t<n[e].length;t++){let{r:i,g:s,b:a,a:o}=h(n[e][t]);c.data.set([i,s,a,o],r+=4)}n.length>=1<<t&&t<12&&t++}}a.image=c,a.bitmap=await createImageBitmap(c),s?.((e.pos+1)/e.data.length,n(!1)+1,a.image,{x:a.left,y:a.top},{width:t.width,height:t.height})}}async function i5(e,t,i,n,r,s){switch(e.nextByte()){case 59:return!0;case 44:await i3(e,t,i,n,r,s);break;case 33:await i2(e,t,n,r);break;default:throw EvalError("undefined block found")}return!1}async function i4(e,t,i){i||(i=!1);let n=await fetch(e);if(!n.ok&&404===n.status)throw EvalError("file not found");let r=await n.arrayBuffer(),s={width:0,height:0,totalTime:0,colorRes:0,pixelAspectRatio:0,frames:[],sortFlag:!1,globalColorTable:[],backgroundImage:new ImageData(1,1,{colorSpace:"srgb"}),comments:[],applicationExtensions:[]},a=new i0(new Uint8ClampedArray(r));if("GIF89a"!==a.getString(6))throw Error("not a supported GIF file");s.width=a.nextTwoBytes(),s.height=a.nextTwoBytes();let o=a.nextByte(),l=(128&o)==128;s.colorRes=(112&o)>>>4,s.sortFlag=(8&o)==8;let h=a.nextByte();s.pixelAspectRatio=a.nextByte(),0!==s.pixelAspectRatio&&(s.pixelAspectRatio=(s.pixelAspectRatio+15)/64),l&&(s.globalColorTable=i1(a,1<<(7&o)+1));let c=(()=>{try{return new ImageData(s.width,s.height,{colorSpace:"srgb"})}catch(e){if(e instanceof DOMException&&"IndexSizeError"===e.name)return null;throw e}})();if(null==c)throw Error("GIF frame size is to large");let{r:d,g:u,b:p}=s.globalColorTable[h];c.data.set(l?[d,u,p,255]:[0,0,0,0]);for(let e=4;e<c.data.length;e*=2)c.data.copyWithin(e,0,e);s.backgroundImage=c;let f=-1,m=!0,g=-1,v=e=>(e&&(m=!0),f),y=e=>(null!=e&&(g=e),g);try{do m&&(s.frames.push({left:0,top:0,width:0,height:0,disposalMethod:0,image:new ImageData(1,1,{colorSpace:"srgb"}),plainTextData:null,userInputDelayFlag:!1,delayTime:0,sortFlag:!1,localColorTable:[],reserved:0,GCreserved:0}),f++,g=-1,m=!1);while(!await i5(a,s,i,v,y,t));for(let e of(s.frames.length--,s.frames)){if(e.userInputDelayFlag&&0===e.delayTime){s.totalTime=1/0;break}s.totalTime+=e.delayTime}return s}catch(e){if(e instanceof EvalError)throw Error(`error while parsing frame ${f} "${e.message}"`);throw e}}let i6=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;async function i9(e){return new Promise(t=>{e.loading=!0;let i=new Image;e.element=i,i.addEventListener("load",()=>{e.loading=!1,t()}),i.addEventListener("error",()=>{e.element=void 0,e.error=!0,e.loading=!1,V.error(`${x} loading image: ${e.source}`),t()}),i.src=e.source})}async function i8(e){if("gif"!==e.type){await i9(e);return}e.loading=!0;try{e.gifData=await i4(e.source),e.gifLoopCount=function(e){for(let t of e.applicationExtensions)if(t.identifier+t.authenticationCode==="NETSCAPE2.0")return t.data[1]+(t.data[2]<<8);return NaN}(e.gifData)??0,0===e.gifLoopCount&&(e.gifLoopCount=1/0)}catch{e.error=!0}e.loading=!1}async function i7(e){if("svg"!==e.type){await i9(e);return}e.loading=!0;let t=await fetch(e.source);t.ok?e.svgData=await t.text():(V.error(`${x} Image not found`),e.error=!0),e.loading=!1}class ne{constructor(e){this.loadImageShape=async e=>{if(!this._engine.loadImage)throw Error(`${x} image shape not initialized`);await this._engine.loadImage({gif:e.gif,name:e.name,replaceColor:e.replaceColor??e.replace_color??!1,src:e.src})},this._engine=e}addImage(e){this._engine.images||(this._engine.images=[]),this._engine.images.push(e)}draw(e,t,i,n,r){let s=t.image,a=s?.element;if(s){if(e.globalAlpha=n,s.gif&&s.gifData){let n=new OffscreenCanvas(s.gifData.width,s.gifData.height),a=n.getContext("2d");if(!a)throw Error("could not create offscreen canvas context");a.imageSmoothingQuality="low",a.imageSmoothingEnabled=!1,a.clearRect(0,0,n.width,n.height),void 0===t.gifLoopCount&&(t.gifLoopCount=s.gifLoopCount??0);let o=t.gifFrame??0,l={x:-(.5*s.gifData.width),y:-(.5*s.gifData.height)},h=s.gifData.frames[o];if(void 0===t.gifTime&&(t.gifTime=0),!h.bitmap)return;switch(e.scale(i/s.gifData.width,i/s.gifData.height),h.disposalMethod){case 4:case 5:case 6:case 7:case 0:a.drawImage(h.bitmap,h.left,h.top),e.drawImage(n,l.x,l.y),a.clearRect(0,0,n.width,n.height);break;case 1:a.drawImage(h.bitmap,h.left,h.top),e.drawImage(n,l.x,l.y);break;case 2:a.drawImage(h.bitmap,h.left,h.top),e.drawImage(n,l.x,l.y),a.clearRect(0,0,n.width,n.height),0===s.gifData.globalColorTable.length?a.putImageData(s.gifData.frames[0].image,l.x+h.left,l.y+h.top):a.putImageData(s.gifData.backgroundImage,l.x,l.y);break;case 3:{let t=a.getImageData(0,0,n.width,n.height);a.drawImage(h.bitmap,h.left,h.top),e.drawImage(n,l.x,l.y),a.clearRect(0,0,n.width,n.height),a.putImageData(t,0,0)}}if(t.gifTime+=r.value,t.gifTime>h.delayTime){if(t.gifTime-=h.delayTime,++o>=s.gifData.frames.length){if(--t.gifLoopCount<=0)return;o=0,a.clearRect(0,0,n.width,n.height)}t.gifFrame=o}e.scale(s.gifData.width/i,s.gifData.height/i)}else if(a){let t=s.ratio,n={x:-i,y:-i};e.drawImage(a,n.x,n.y,2*i,2*i/t)}e.globalAlpha=1}}getSidesCount(){return 12}async init(e){let t=e.actualOptions;if(t.preload&&this._engine.loadImage)for(let e of t.preload)await this._engine.loadImage(e)}loadShape(e){if("image"!==e.shape&&"images"!==e.shape)return;this._engine.images||(this._engine.images=[]);let t=e.shapeData;this._engine.images.find(e=>e.name===t.name||e.source===t.src)||this.loadImageShape(t).then(()=>{this.loadShape(e)})}particleInit(e,t){if("image"!==t.shape&&"images"!==t.shape)return;this._engine.images||(this._engine.images=[]);let i=this._engine.images,n=t.shapeData,r=t.getFillColor(),s=i.find(e=>e.name===n.name||e.source===n.src);if(!s)return;let a=n.replaceColor??n.replace_color??s.replaceColor;if(s.loading){setTimeout(()=>{this.particleInit(e,t)});return}(async()=>{let e;(e=s.svgData&&r?await function(e,t,i,n){let r=function(e,t,i){let{svgData:n}=e;if(!n)return"";let r=eb(t,i);if(n.includes("fill"))return n.replace(i6,()=>r);let s=n.indexOf(">");return`${n.substring(0,s)} fill="${r}"${n.substring(s)}`}(e,i,n.opacity?.value??1),s={color:i,gif:t.gif,data:{...e,svgData:r},loaded:!1,ratio:t.width/t.height,replaceColor:t.replaceColor??t.replace_color,source:t.src};return new Promise(t=>{let i=new Blob([r],{type:"image/svg+xml"}),n=URL||window.URL||window.webkitURL||window,a=n.createObjectURL(i),o=new Image;o.addEventListener("load",()=>{s.loaded=!0,s.element=o,t(s),n.revokeObjectURL(a)}),o.addEventListener("error",async()=>{n.revokeObjectURL(a);let i={...e,error:!1,loading:!0};await i9(i),s.loaded=!0,s.element=i.element,t(s)}),o.src=a})}(s,n,r,t):{color:r,data:s,element:s.element,gif:s.gif,gifData:s.gifData,gifLoopCount:s.gifLoopCount,loaded:!0,ratio:n.width&&n.height?n.width/n.height:s.ratio??1,replaceColor:a,source:n.src}).ratio||(e.ratio=1);let i=n.fill??t.fill,o=n.close??t.close;t.image=e,t.fill=i,t.close=o})()}}class nt{constructor(){this.src="",this.gif=!1}load(e){e&&(void 0!==e.gif&&(this.gif=e.gif),void 0!==e.height&&(this.height=e.height),void 0!==e.name&&(this.name=e.name),void 0!==e.replaceColor&&(this.replaceColor=e.replaceColor),void 0!==e.src&&(this.src=e.src),void 0!==e.width&&(this.width=e.width))}}class ni{constructor(e){this.id="imagePreloader",this._engine=e}getPlugin(){return{}}loadOptions(e,t){if(!t||!t.preload)return;e.preload||(e.preload=[]);let i=e.preload;for(let e of t.preload){let t=i.find(t=>t.name===e.name||t.src===e.src);if(t)t.load(e);else{let t=new nt;t.load(e),i.push(t)}}}needsPlugin(){return!0}}async function nn(e,t=!0){e.loadImage||(e.loadImage=async t=>{if(!t.name&&!t.src)throw Error(`${x} no image source provided`);if(e.images||(e.images=[]),!e.images.find(e=>e.name===t.name||e.source===t.src))try{let i={gif:t.gif??!1,name:t.name??t.src,source:t.src,type:t.src.substring(t.src.length-3),error:!1,loading:!0,replaceColor:t.replaceColor,ratio:t.width&&t.height?t.width/t.height:void 0};e.images.push(i);let n=t.gif?i8:t.replaceColor?i7:i9;await n(i)}catch{throw Error(`${x} ${t.name??t.src} not found`)}});let i=new ni(e);await e.addPlugin(i,t),await e.addShape(["image","images"],new ne(e),t)}class nr extends e5{constructor(){super(),this.sync=!1}load(e){e&&(super.load(e),void 0!==e.sync&&(this.sync=e.sync))}}class ns extends e5{constructor(){super(),this.random.minimumValue=1e-4,this.sync=!1}load(e){e&&(super.load(e),void 0!==e.sync&&(this.sync=e.sync))}}class na{constructor(){this.count=0,this.delay=new nr,this.duration=new ns}load(e){e&&(void 0!==e.count&&(this.count=e.count),this.delay.load(e.delay),this.duration.load(e.duration))}}class no{constructor(e){this.container=e}init(e){let t=this.container,i=e.options.life;i&&(e.life={delay:t.retina.reduceFactor?z(i.delay.value)*(i.delay.sync?1:T())/t.retina.reduceFactor*1e3:0,delayTime:0,duration:t.retina.reduceFactor?z(i.duration.value)*(i.duration.sync?1:T())/t.retina.reduceFactor*1e3:0,time:0,count:i.count},e.life.duration<=0&&(e.life.duration=-1),e.life.count<=0&&(e.life.count=-1),e.life&&(e.spawning=e.life.delay>0))}isEnabled(e){return!e.destroyed}loadOptions(e,...t){for(let i of(e.life||(e.life=new na),t))e.life.load(i?.life)}update(e,t){if(!this.isEnabled(e)||!e.life)return;let i=e.life,n=!1;if(e.spawning){if(i.delayTime+=t.value,!(i.delayTime>=e.life.delay))return;n=!0,e.spawning=!1,i.delayTime=0,i.time=0}if(-1===i.duration||e.spawning||(n?i.time=0:i.time+=t.value,i.time<i.duration))return;if(i.time=0,e.life.count>0&&e.life.count--,0===e.life.count){e.destroy();return}let r=this.container.canvas.size,s=N(0,r.width),a=N(0,r.width);e.position.x=E(s),e.position.y=E(a),e.spawning=!0,i.delayTime=0,i.time=0,e.reset();let o=e.options.life;o&&(i.delay=1e3*z(o.delay.value),i.duration=1e3*z(o.duration.value))}}async function nl(e,t=!0){await e.addParticleUpdater("life",e=>new no(e),t)}class nh{draw(e,t,i){let n=t.shapeData;e.moveTo(-i/2,0),e.lineTo(i/2,0),e.lineCap=n?.cap??"butt"}getSidesCount(){return 1}}async function nc(e,t=!0){await e.addShape("line",new nh,t)}class nd{init(){}isEnabled(e){return!B()&&!e.destroyed&&e.container.actualOptions.interactivity.events.onHover.parallax.enable}move(e){let t=e.container,i=t.actualOptions.interactivity.events.onHover.parallax;if(B()||!i.enable)return;let n=i.force,r=t.interactivity.mouse.position;if(!r)return;let s=t.canvas.size,a={x:s.width/2,y:s.height/2},o=i.smooth,l=e.getRadius()/n,h={x:(r.x-a.x)*l,y:(r.y-a.y)*l},{offset:c}=e;c.x+=(h.x-c.x)/o,c.y+=(h.y-c.y)/o}}async function nu(e,t=!0){await e.addMover("parallax",()=>new nd,t)}class np{constructor(e){this.container=e,this.type="particles"}}class nf extends np{constructor(e){super(e)}clear(){}init(){}async interact(e){let t=this.container,i=e.retina.attractDistance??t.retina.attractDistance,n=e.getPosition();for(let r of t.particles.quadTree.queryCircle(n,i)){if(e===r||!r.options.move.attract.enable||r.destroyed||r.spawning)continue;let{dx:t,dy:i}=O(n,r.getPosition()),s=e.options.move.attract.rotate,a=t/(1e3*s.x),o=i/(1e3*s.y),l=r.size.value/e.size.value,h=1/l;e.velocity.x-=a*l,e.velocity.y-=o*l,r.velocity.x+=a*h,r.velocity.y+=o*h}}isEnabled(e){return e.options.move.attract.enable}reset(){}}async function nm(e,t=!0){await e.addInteractor("particlesAttract",e=>new nf(e),t)}function ng(e,t,i,n,r,s){let a=A(e.options.collisions.absorb.speed*r.factor/10,0,n);e.size.value+=a/2,i.size.value-=a,n<=s&&(i.size.value=0,i.destroy())}let nv=e=>{void 0===e.collisionMaxSpeed&&(e.collisionMaxSpeed=z(e.options.collisions.maxSpeed)),e.velocity.length>e.collisionMaxSpeed&&(e.velocity.length=e.collisionMaxSpeed)};function ny(e,t){K(Q(e),Q(t)),nv(e),nv(t)}class nx extends np{constructor(e){super(e)}clear(){}init(){}async interact(e,t){if(e.destroyed||e.spawning)return;let i=this.container,n=e.getPosition(),r=e.getRadius();for(let s of i.particles.quadTree.queryCircle(n,2*r)){if(e===s||!s.options.collisions.enable||e.options.collisions.mode!==s.options.collisions.mode||s.destroyed||s.spawning)continue;let a=s.getPosition(),o=s.getRadius();!(Math.abs(Math.round(n.z)-Math.round(a.z))>r+o)&&(R(n,a)>r+o||function(e,t,i,n){switch(e.options.collisions.mode){case"absorb":!function(e,t,i,n){let r=e.getRadius(),s=t.getRadius();void 0===r&&void 0!==s?e.destroy():void 0!==r&&void 0===s?t.destroy():void 0!==r&&void 0!==s&&(r>=s?ng(e,r,t,s,i,n):ng(t,s,e,r,i,n))}(e,t,i,n);break;case"bounce":ny(e,t);break;case"destroy":e.unbreakable||t.unbreakable||ny(e,t),void 0===e.getRadius()&&void 0!==t.getRadius()?e.destroy():void 0!==e.getRadius()&&void 0===t.getRadius()?t.destroy():void 0!==e.getRadius()&&void 0!==t.getRadius()&&(e.getRadius()>=t.getRadius()?t:e).destroy()}}(e,s,t,i.retina.pixelRatio))}}isEnabled(e){return e.options.collisions.enable}reset(){}}async function n_(e,t=!0){await e.addInteractor("particlesCollisions",e=>new nx(e),t)}class nb extends tD{constructor(e,t,i,n){super(e,t,i),this.canvasSize=n,this.canvasSize={...n}}contains(e){let{width:t,height:i}=this.canvasSize,{x:n,y:r}=e;return super.contains(e)||super.contains({x:n-t,y:r})||super.contains({x:n-t,y:r-i})||super.contains({x:n,y:r-i})}intersects(e){if(super.intersects(e))return!0;let t={x:e.position.x-this.canvasSize.width,y:e.position.y-this.canvasSize.height};if(void 0!==e.radius){let i=new tD(t.x,t.y,2*e.radius);return super.intersects(i)}if(void 0!==e.size){let i=new tN(t.x,t.y,2*e.size.width,2*e.size.height);return super.intersects(i)}return!1}}class nw{constructor(){this.blur=5,this.color=new eN,this.color.value="#000",this.enable=!1}load(e){e&&(void 0!==e.blur&&(this.blur=e.blur),this.color=eN.create(this.color,e.color),void 0!==e.enable&&(this.enable=e.enable))}}class nS{constructor(){this.enable=!1,this.frequency=1}load(e){e&&(void 0!==e.color&&(this.color=eN.create(this.color,e.color)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.frequency&&(this.frequency=e.frequency),void 0!==e.opacity&&(this.opacity=e.opacity))}}class nM{constructor(){this.blink=!1,this.color=new eN,this.color.value="#fff",this.consent=!1,this.distance=100,this.enable=!1,this.frequency=1,this.opacity=1,this.shadow=new nw,this.triangles=new nS,this.width=1,this.warp=!1}load(e){e&&(void 0!==e.id&&(this.id=e.id),void 0!==e.blink&&(this.blink=e.blink),this.color=eN.create(this.color,e.color),void 0!==e.consent&&(this.consent=e.consent),void 0!==e.distance&&(this.distance=e.distance),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.frequency&&(this.frequency=e.frequency),void 0!==e.opacity&&(this.opacity=e.opacity),this.shadow.load(e.shadow),this.triangles.load(e.triangles),void 0!==e.width&&(this.width=e.width),void 0!==e.warp&&(this.warp=e.warp))}}class nC extends np{constructor(e){super(e),this._setColor=e=>{if(!e.options.links)return;let t=this.linkContainer,i=e.options.links,n=void 0===i.id?t.particles.linksColor:t.particles.linksColors.get(i.id);n||(n=eM(i.color,i.blink,i.consent),void 0===i.id?t.particles.linksColor=n:t.particles.linksColors.set(i.id,n))},this.linkContainer=e}clear(){}init(){this.linkContainer.particles.linksColor=void 0,this.linkContainer.particles.linksColors=new Map}async interact(e){if(!e.options.links)return;e.links=[];let t=e.getPosition(),i=this.container,n=i.canvas.size;if(t.x<0||t.y<0||t.x>n.width||t.y>n.height)return;let r=e.options.links,s=r.opacity,a=e.retina.linksDistance??0,o=r.warp,l=o?new nb(t.x,t.y,a,n):new tD(t.x,t.y,a);for(let h of i.particles.quadTree.query(l)){let i=h.options.links;if(e===h||!i?.enable||r.id!==i.id||h.spawning||h.destroyed||!h.links||e.links.some(e=>e.destination===h)||h.links.some(t=>t.destination===e))continue;let l=h.getPosition();if(l.x<0||l.y<0||l.x>n.width||l.y>n.height)continue;let c=function(e,t,i,n,r){let{dx:s,dy:a,distance:o}=O(e,t);if(!r||o<=i)return o;let l={x:Math.abs(s),y:Math.abs(a)},h={x:Math.min(l.x,n.width-l.x),y:Math.min(l.y,n.height-l.y)};return Math.sqrt(h.x**2+h.y**2)}(t,l,a,n,o&&i.warp);if(c>a)continue;let d=(1-c/a)*s;this._setColor(e),e.links.push({destination:h,opacity:d})}}isEnabled(e){return!!e.options.links?.enable}loadParticlesOptions(e,...t){for(let i of(e.links||(e.links=new nM),t))e.links.load(i?.links??i?.lineLinked??i?.line_linked)}reset(){}}async function nT(e,t=!0){await e.addInteractor("particlesLinks",e=>new nC(e),t)}function nA(e,t){var i;let n=((i=e.map(e=>e.id)).sort((e,t)=>e-t),i.join("_")),r=t.get(n);return void 0===r&&(r=T(),t.set(n,r)),r}class nP{constructor(e){this.container=e,this._drawLinkLine=(e,t)=>{let i=e.options.links;if(!i?.enable)return;let n=this.container,r=n.actualOptions,s=t.destination,a=e.getPosition(),o=s.getPosition(),l=t.opacity;n.canvas.draw(t=>{let h;let c=e.options.twinkle?.lines;if(c?.enable){let e=c.frequency,t=em(c.color);T()<e&&t&&(h=t,l=z(c.opacity))}if(h||(h=eS(e,s,void 0!==i.id?n.particles.linksColors.get(i.id):n.particles.linksColor)),!h)return;let d=e.retina.linksWidth??0,u=e.retina.linksDistance??0,{backgroundMask:p}=r;!function(e){let t=!1,{begin:i,end:n,maxDistance:r,context:s,canvasSize:a,width:o,backgroundMask:l,colorLine:h,opacity:c,links:d}=e;if(R(i,n)<=r)eP(s,i,n),t=!0;else if(d.warp){let e,o;let l=O(i,{x:n.x-a.width,y:n.y});if(l.distance<=r){let t=i.y-l.dy/l.dx*i.x;e={x:0,y:t},o={x:a.width,y:t}}else{let t=O(i,{x:n.x,y:n.y-a.height});if(t.distance<=r){let n=-(i.y-t.dy/t.dx*i.x)/(t.dy/t.dx);e={x:n,y:0},o={x:n,y:a.height}}else{let t=O(i,{x:n.x-a.width,y:n.y-a.height});if(t.distance<=r){let n=i.y-t.dy/t.dx*i.x;o={x:(e={x:-n/(t.dy/t.dx),y:n}).x+a.width,y:e.y+a.height}}}}e&&o&&(eP(s,i,e),eP(s,n,o),t=!0)}if(!t)return;s.lineWidth=o,l.enable&&(s.globalCompositeOperation=l.composite),s.strokeStyle=e_(h,c);let{shadow:u}=d;if(u.enable){let e=em(u.color);e&&(s.shadowBlur=u.blur,s.shadowColor=e_(e))}s.stroke()}({context:t,width:d,begin:a,end:o,maxDistance:u,canvasSize:n.canvas.size,links:i,backgroundMask:p,colorLine:h,opacity:l})})},this._drawLinkTriangle=(e,t,i)=>{let n=e.options.links;if(!n?.enable)return;let r=n.triangles;if(!r.enable)return;let s=this.container,a=s.actualOptions,o=t.destination,l=i.destination,h=r.opacity??(t.opacity+i.opacity)/2;h<=0||s.canvas.draw(t=>{let i=e.getPosition(),c=o.getPosition(),d=l.getPosition(),u=e.retina.linksDistance??0;if(R(i,c)>u||R(d,c)>u||R(d,i)>u)return;let p=em(r.color);p||(p=eS(e,o,void 0!==n.id?s.particles.linksColors.get(n.id):s.particles.linksColor)),p&&function(e){let{context:t,pos1:i,pos2:n,pos3:r,backgroundMask:s,colorTriangle:a,opacityTriangle:o}=e;t.beginPath(),t.moveTo(i.x,i.y),t.lineTo(n.x,n.y),t.lineTo(r.x,r.y),t.closePath(),s.enable&&(t.globalCompositeOperation=s.composite),t.fillStyle=e_(a,o),t.fill()}({context:t,pos1:i,pos2:c,pos3:d,backgroundMask:a.backgroundMask,colorTriangle:p,opacityTriangle:h})})},this._drawTriangles=(e,t,i,n)=>{let r=i.destination;if(!(e.links?.triangles.enable&&r.options.links?.triangles.enable))return;let s=r.links?.filter(e=>{let t=this._getLinkFrequency(r,e.destination);return r.options.links&&t<=r.options.links.frequency&&n.findIndex(t=>t.destination===e.destination)>=0});if(s?.length)for(let n of s){let s=n.destination;this._getTriangleFrequency(t,r,s)>e.links.triangles.frequency||this._drawLinkTriangle(t,i,n)}},this._getLinkFrequency=(e,t)=>nA([e,t],this._freqs.links),this._getTriangleFrequency=(e,t,i)=>nA([e,t,i],this._freqs.triangles),this._freqs={links:new Map,triangles:new Map}}drawParticle(e,t){let{links:i,options:n}=t;if(!i||i.length<=0)return;let r=i.filter(e=>n.links&&this._getLinkFrequency(t,e.destination)<=n.links.frequency);for(let e of r)this._drawTriangles(n,t,e,r),e.opacity>0&&(t.retina.linksWidth??0)>0&&this._drawLinkLine(t,e)}async init(){this._freqs.links=new Map,this._freqs.triangles=new Map}particleCreated(e){if(e.links=[],!e.options.links)return;let t=this.container.retina.pixelRatio,{retina:i}=e,{distance:n,width:r}=e.options.links;i.linksDistance=n*t,i.linksWidth=r*t}particleDestroyed(e){e.links=[]}}class nE{constructor(){this.id="links"}getPlugin(e){return new nP(e)}loadOptions(){}needsPlugin(){return!0}}async function nz(e,t=!0){let i=new nE;await e.addPlugin(i,t)}async function nI(e,t=!0){await nT(e,t),await nz(e,t)}class nL{draw(e,t,i){let n=this.getCenter(t,i),r=this.getSidesData(t,i),s=r.count.numerator*r.count.denominator,a=r.count.numerator/r.count.denominator,o=Math.PI-180*(a-2)/a*Math.PI/180;if(e){e.beginPath(),e.translate(n.x,n.y),e.moveTo(0,0);for(let t=0;t<s;t++)e.lineTo(r.length,0),e.translate(r.length,0),e.rotate(o)}}getSidesCount(e){let t=e.shapeData;return Math.round(z(t?.sides??t?.nb_sides??5))}}class nN extends nL{getCenter(e,t){return{x:-t/(e.sides/3.5),y:-t/.76}}getSidesData(e,t){let i=e.sides;return{count:{denominator:1,numerator:i},length:2.66*t/(i/3)}}}class nD extends nL{getCenter(e,t){return{x:-t,y:t/1.66}}getSidesCount(){return 3}getSidesData(e,t){return{count:{denominator:2,numerator:3},length:2*t}}}async function nO(e,t=!0){await e.addShape("polygon",new nN,t)}async function nR(e,t=!0){await e.addShape("triangle",new nD,t)}async function nk(e,t=!0){await nO(e,t),await nR(e,t)}class nU{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.speed&&(this.speed=N(e.speed)),void 0!==e.decay&&(this.decay=N(e.decay)),void 0!==e.sync&&(this.sync=e.sync))}}class nV extends e5{constructor(){super(),this.animation=new nU,this.direction="clockwise",this.path=!1,this.value=0}load(e){e&&(super.load(e),void 0!==e.direction&&(this.direction=e.direction),this.animation.load(e.animation),void 0!==e.path&&(this.path=e.path))}}class nF{constructor(e){this.container=e}init(e){let t=e.options.rotate;if(!t)return;e.rotate={enable:t.animation.enable,value:z(t.value)*Math.PI/180},e.pathRotation=t.path;let i=t.direction;switch("random"===i&&(i=Math.floor(2*T())>0?"counter-clockwise":"clockwise"),i){case"counter-clockwise":case"counterClockwise":e.rotate.status="decreasing";break;case"clockwise":e.rotate.status="increasing"}let n=t.animation;n.enable&&(e.rotate.decay=1-z(n.decay),e.rotate.velocity=z(n.speed)/360*this.container.retina.reduceFactor,n.sync||(e.rotate.velocity*=T())),e.rotation=e.rotate.value}isEnabled(e){let t=e.options.rotate;return!!t&&!e.destroyed&&!e.spawning&&t.animation.enable&&!t.path}loadOptions(e,...t){for(let i of(e.rotate||(e.rotate=new nV),t))e.rotate.load(i?.rotate)}update(e,t){this.isEnabled(e)&&(function(e,t){let i=e.rotate,n=e.options.rotate;if(!i||!n)return;let r=n.animation,s=(i.velocity??0)*t.factor,a=2*Math.PI,o=i.decay??1;r.enable&&("increasing"===i.status?(i.value+=s,i.value>a&&(i.value-=a)):(i.value-=s,i.value<0&&(i.value+=a)),i.velocity&&1!==o&&(i.velocity*=o))}(e,t),e.rotation=e.rotate?.value??0)}}async function nB(e,t=!0){await e.addParticleUpdater("rotate",e=>new nF(e),t)}let nH=Math.sqrt(2);class nG{draw(e,t,i){let n=i/nH,r=2*n;e.rect(-n,-n,r,r)}getSidesCount(){return 4}}async function nW(e,t=!0){await e.addShape(["edge","square"],new nG,t)}class nq{draw(e,t,i){let n=t.sides,r=t.starInset??2;e.moveTo(0,0-i);for(let t=0;t<n;t++)e.rotate(Math.PI/n),e.lineTo(0,0-i*r),e.rotate(Math.PI/n),e.lineTo(0,0-i)}getSidesCount(e){let t=e.shapeData;return Math.round(z(t?.sides??t?.nb_sides??5))}particleInit(e,t){let i=t.shapeData,n=z(i?.inset??2);t.starInset=n}}async function nj(e,t=!0){await e.addShape("star",new nq,t)}function nX(e,t,i,n,r){if(!t||!i.enable||(t.maxLoops??0)>0&&(t.loops??0)>(t.maxLoops??0)||(t.time||(t.time=0),(t.delayTime??0)>0&&t.time<(t.delayTime??0)&&(t.time+=e.value),(t.delayTime??0)>0&&t.time<(t.delayTime??0)))return;let s=E(i.offset),a=(t.velocity??0)*e.factor+3.6*s,o=t.decay??1;r&&"increasing"!==t.status?(t.value-=a,t.value<0&&(t.loops||(t.loops=0),t.loops++,t.status="increasing",t.value+=t.value)):(t.value+=a,t.value>n&&(t.loops||(t.loops=0),t.loops++,r&&(t.status="decreasing",t.value-=t.value%n))),t.velocity&&1!==o&&(t.velocity*=o),t.value>n&&(t.value%=n)}class nJ{constructor(e){this.container=e}init(e){let t=this.container,i=e.options,n=et(i.stroke,e.id,i.reduceDuplicates);e.strokeWidth=z(n.width)*t.retina.pixelRatio,e.strokeOpacity=z(n.opacity??1),e.strokeAnimation=n.color?.animation;let r=eg(n.color)??e.getFillColor();r&&(e.strokeColor=eT(r,e.strokeAnimation,t.retina.reduceFactor))}isEnabled(e){let t=e.strokeAnimation,{strokeColor:i}=e;return!e.destroyed&&!e.spawning&&!!t&&(i?.h.value!==void 0&&i.h.enable||i?.s.value!==void 0&&i.s.enable||i?.l.value!==void 0&&i.l.enable)}update(e,t){this.isEnabled(e)&&function(e,t){if(!e.strokeColor||!e.strokeAnimation)return;let{h:i,s:n,l:r}=e.strokeColor,{h:s,s:a,l:o}=e.strokeAnimation;i&&nX(t,i,s,360,!1),n&&nX(t,n,a,100,!0),r&&nX(t,r,o,100,!0)}(e,t)}}async function nY(e,t=!0){await e.addParticleUpdater("strokeColor",e=>new nJ(e),t)}let nZ=["text","character","char"];class n${draw(e,t,i,n){let r=t.shapeData;if(void 0===r)return;let s=r.value;if(void 0===s)return;void 0===t.text&&(t.text=et(s,t.randomIndexData));let a=t.text,o=r.style??"",l=r.weight??"400",h=2*Math.round(i),c=r.font??"Verdana",d=t.fill,u=a.length*i/2;e.font=`${o} ${l} ${h}px "${c}"`;let p={x:-u,y:i/2};e.globalAlpha=n,d?e.fillText(a,p.x,p.y):e.strokeText(a,p.x,p.y),e.globalAlpha=1}getSidesCount(){return 12}async init(e){let t=e.actualOptions;if(nZ.find(e=>G(e,t.particles.shape.type))){let e=nZ.map(e=>t.particles.shape.options[e]).find(e=>!!e),i=[];ee(e,e=>{i.push(W(e.font,e.weight))}),await Promise.all(i)}}particleInit(e,t){if(!t.shape||!nZ.includes(t.shape))return;let i=t.shapeData;if(void 0===i)return;let n=i.value;void 0!==n&&(t.text=et(n,t.randomIndexData))}}async function nQ(e,t=!0){await e.addShape(nZ,new n$,t)}async function nK(e,t=!0){t3(e),await nu(e,!1),await iy(e,!1),await ib(e,!1),await iA(e,!1),await iI(e,!1),await iO(e,!1),await ik(e,!1),await iF(e,!1),await iG(e,!1),await iJ(e,!1),await i$(e,!1),await nm(e,!1),await n_(e,!1),await nI(e,!1),await ip(),await nn(e,!1),await nc(e,!1),await nk(e,!1),await nW(e,!1),await nj(e,!1),await nQ(e,!1),await nl(e,!1),await nB(e,!1),await nY(e,!1),await iu(e,t)}function n0(){let e=(0,h.useCallback)(async e=>{await nK(e)},[]);return(0,r.jsx)("div",{className:"fixed inset-0 z-0 pointer-events-none",children:(0,r.jsx)(t0,{id:"tsparticles-editing",init:e,options:{fullScreen:!1,background:{color:{value:"transparent"}},fpsLimit:60,interactivity:{events:{onHover:{enable:!0,mode:"grab"},resize:!0},modes:{grab:{distance:140,links:{opacity:.5}}}},particles:{color:{value:["#5865F2","#7289DA","#99AAB5","#FFFFFF"]},links:{color:"#5865F2",distance:150,enable:!0,opacity:.3,width:1},move:{direction:"none",enable:!0,outModes:{default:"bounce"},random:!0,speed:1,straight:!1},number:{density:{enable:!0,area:800},value:40},opacity:{value:.5},shape:{type:["circle","triangle","square"]},size:{value:{min:2,max:5}}},detectRetina:!0},className:"h-full w-full"})})}function n1(){let e=(0,h.useRef)(null);return(0,h.useRef)([]),(0,h.useRef)({x:0,y:0}),(0,h.useRef)(),(0,r.jsx)("canvas",{ref:e,className:"fixed inset-0 z-0 pointer-events-none"})}let n2=(0,u.A)("Heart",[["path",{d:"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",key:"c3ymky"}]]),n3=(0,u.A)("ThumbsUp",[["path",{d:"M7 10v12",key:"1qc93n"}],["path",{d:"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z",key:"emmmcr"}]]);var n5=i(617);let n4=(0,u.A)("Smile",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 14s1.5 2 4 2 4-2 4-2",key:"1y1vjs"}],["line",{x1:"9",x2:"9.01",y1:"9",y2:"9",key:"yxxnd0"}],["line",{x1:"15",x2:"15.01",y1:"9",y2:"9",key:"1p4y9e"}]]);function n6(){let[e,t]=(0,h.useState)([]),i=(e,t)=>{let i={size:t,className:"text-discord-primary"};switch(e){case"message":default:return(0,r.jsx)(o.A,{...i});case"heart":return(0,r.jsx)(n2,{...i});case"thumbsup":return(0,r.jsx)(n3,{...i});case"star":return(0,r.jsx)(n5.A,{...i});case"smile":return(0,r.jsx)(n4,{...i})}};return(0,r.jsx)("div",{className:"fixed inset-0 z-0 overflow-hidden pointer-events-none",children:e.map(e=>(0,r.jsx)("div",{className:"absolute rounded-full bg-white/5 flex items-center justify-center",style:{left:`${e.x}%`,top:`${e.y}%`,width:`${e.size}px`,height:`${e.size}px`,opacity:e.opacity,transition:"top 0.5s linear, left 0.5s ease-in-out"},children:i(e.icon,.6*e.size)},e.id))})}let n9="srgb",n8="srgb-linear",n7="linear",re="srgb",rt="300 es";class ri{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){let i=this._listeners;return void 0!==i&&void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){let i=this._listeners;if(void 0===i)return;let n=i[e];if(void 0!==n){let e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){let t=this._listeners;if(void 0===t)return;let i=t[e.type];if(void 0!==i){e.target=this;let t=i.slice(0);for(let i=0,n=t.length;i<n;i++)t[i].call(this,e);e.target=null}}}let rn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],rr=Math.PI/180,rs=180/Math.PI;function ra(){let e=0xffffffff*Math.random()|0,t=0xffffffff*Math.random()|0,i=0xffffffff*Math.random()|0,n=0xffffffff*Math.random()|0;return(rn[255&e]+rn[e>>8&255]+rn[e>>16&255]+rn[e>>24&255]+"-"+rn[255&t]+rn[t>>8&255]+"-"+rn[t>>16&15|64]+rn[t>>24&255]+"-"+rn[63&i|128]+rn[i>>8&255]+"-"+rn[i>>16&255]+rn[i>>24&255]+rn[255&n]+rn[n>>8&255]+rn[n>>16&255]+rn[n>>24&255]).toLowerCase()}function ro(e,t,i){return Math.max(t,Math.min(i,e))}function rl(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/0xffffffff;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/0x7fffffff,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function rh(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(0xffffffff*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(0x7fffffff*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}class rc{constructor(e=0,t=0){rc.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=ro(this.x,e.x,t.x),this.y=ro(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=ro(this.x,e,t),this.y=ro(this.y,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(ro(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(ro(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class rd{constructor(e,t,i,n,r,s,a,o,l){rd.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l)}set(e,t,i,n,r,s,a,o,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=o,h[6]=i,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],h=i[4],c=i[7],d=i[2],u=i[5],p=i[8],f=n[0],m=n[3],g=n[6],v=n[1],y=n[4],x=n[7],_=n[2],b=n[5],w=n[8];return r[0]=s*f+a*v+o*_,r[3]=s*m+a*y+o*b,r[6]=s*g+a*x+o*w,r[1]=l*f+h*v+c*_,r[4]=l*m+h*y+c*b,r[7]=l*g+h*x+c*w,r[2]=d*f+u*v+p*_,r[5]=d*m+u*y+p*b,r[8]=d*g+u*x+p*w,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8];return t*s*h-t*a*l-i*r*h+i*a*o+n*r*l-n*s*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8],c=h*s-a*l,d=a*o-h*r,u=l*r-s*o,p=t*c+i*d+n*u;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=c*f,e[1]=(n*l-h*i)*f,e[2]=(a*i-n*s)*f,e[3]=d*f,e[4]=(h*t-n*o)*f,e[5]=(n*r-a*t)*f,e[6]=u*f,e[7]=(i*o-l*t)*f,e[8]=(s*t-i*r)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,s,a){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+e,-n*l,n*o,-n*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(ru.makeScale(e,t)),this}rotate(e){return this.premultiply(ru.makeRotation(-e)),this}translate(e,t){return this.premultiply(ru.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}let ru=new rd;function rp(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let rf=new rd().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),rm=new rd().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715),rg=function(){let e={enabled:!0,workingColorSpace:n8,spaces:{},convert:function(e,t,i){return!1!==this.enabled&&t!==i&&t&&i&&(this.spaces[t].transfer===re&&(e.r=rv(e.r),e.g=rv(e.g),e.b=rv(e.b)),this.spaces[t].primaries!==this.spaces[i].primaries&&(e.applyMatrix3(this.spaces[t].toXYZ),e.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===re&&(e.r=ry(e.r),e.g=ry(e.g),e.b=ry(e.b))),e},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)},getPrimaries:function(e){return this.spaces[e].primaries},getTransfer:function(e){return""===e?n7:this.spaces[e].transfer},getLuminanceCoefficients:function(e,t=this.workingColorSpace){return e.fromArray(this.spaces[t].luminanceCoefficients)},define:function(e){Object.assign(this.spaces,e)},_getMatrix:function(e,t,i){return e.copy(this.spaces[t].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(e){return this.spaces[e].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(e=this.workingColorSpace){return this.spaces[e].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],i=[.2126,.7152,.0722],n=[.3127,.329];return e.define({[n8]:{primaries:t,whitePoint:n,transfer:n7,toXYZ:rf,fromXYZ:rm,luminanceCoefficients:i,workingColorSpaceConfig:{unpackColorSpace:n9},outputColorSpaceConfig:{drawingBufferColorSpace:n9}},[n9]:{primaries:t,whitePoint:n,transfer:re,toXYZ:rf,fromXYZ:rm,luminanceCoefficients:i,outputColorSpaceConfig:{drawingBufferColorSpace:n9}}}),e}();function rv(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function ry(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class rx{static getDataURL(e){let t;if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===n&&(n=rp("canvas")),n.width=e.width,n.height=e.height;let i=n.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=n}return t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=rp("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let e=0;e<r.length;e++)r[e]=255*rv(r[e]/255);return i.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*rv(t[e]/255)):t[e]=rv(t[e]);return{data:t,width:e.width,height:e.height}}}}let r_=0;class rb{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:r_++}),this.uuid=ra(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let e;if(Array.isArray(n)){e=[];for(let t=0,i=n.length;t<i;t++)n[t].isDataTexture?e.push(rw(n[t].image)):e.push(rw(n[t]))}else e=rw(n);i.url=e}return t||(e.images[this.uuid]=i),i}}function rw(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?rx.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let rS=0;class rM extends ri{constructor(e=rM.DEFAULT_IMAGE,t=rM.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=1023,o=1009,l=rM.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:rS++}),this.uuid=ra(),this.name="",this.source=new rb(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new rc(0,0),this.repeat=new rc(1,1),this.center=new rc(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new rd,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}rM.DEFAULT_IMAGE=null,rM.DEFAULT_MAPPING=300,rM.DEFAULT_ANISOTROPY=1;class rC{constructor(e=0,t=0,i=0,n=1){rC.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;let s=e.elements,a=s[0],o=s[4],l=s[8],h=s[1],c=s[5],d=s[9],u=s[2],p=s[6],f=s[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-u)&&.01>Math.abs(d-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+u)&&.1>Math.abs(d+p)&&.1>Math.abs(a+c+f-3))return this.set(1,0,0,0),this;t=Math.PI;let e=(a+1)/2,s=(c+1)/2,m=(f+1)/2,g=(o+h)/4,v=(l+u)/4,y=(d+p)/4;return e>s&&e>m?e<.01?(i=0,n=.707106781,r=.707106781):(n=g/(i=Math.sqrt(e)),r=v/i):s>m?s<.01?(i=.707106781,n=0,r=.707106781):(i=g/(n=Math.sqrt(s)),r=y/n):m<.01?(i=.707106781,n=.707106781,r=0):(i=v/(r=Math.sqrt(m)),n=y/r),this.set(i,n,r,t),this}let m=Math.sqrt((p-d)*(p-d)+(l-u)*(l-u)+(h-o)*(h-o));return .001>Math.abs(m)&&(m=1),this.x=(p-d)/m,this.y=(l-u)/m,this.z=(h-o)/m,this.w=Math.acos((a+c+f-1)/2),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=ro(this.x,e.x,t.x),this.y=ro(this.y,e.y,t.y),this.z=ro(this.z,e.z,t.z),this.w=ro(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=ro(this.x,e,t),this.y=ro(this.y,e,t),this.z=ro(this.z,e,t),this.w=ro(this.w,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(ro(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class rT extends ri{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new rC(0,0,e,t),this.scissorTest=!1,this.viewport=new rC(0,0,e,t);let n=new rM({width:e,height:t,depth:1},(i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i)).mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);n.flipY=!1,n.generateMipmaps=i.generateMipmaps,n.internalFormat=i.internalFormat,this.textures=[];let r=i.count;for(let e=0;e<r;e++)this.textures[e]=n.clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==e&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;let i=Object.assign({},e.textures[t].image);this.textures[t].source=new rb(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class rA extends rT{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class rP extends rM{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class rE extends rM{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class rz{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,s,a){let o=i[n+0],l=i[n+1],h=i[n+2],c=i[n+3],d=r[s+0],u=r[s+1],p=r[s+2],f=r[s+3];if(0===a){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c;return}if(1===a){e[t+0]=d,e[t+1]=u,e[t+2]=p,e[t+3]=f;return}if(c!==f||o!==d||l!==u||h!==p){let e=1-a,t=o*d+l*u+h*p+c*f,i=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){let r=Math.sqrt(n),s=Math.atan2(r,t*i);e=Math.sin(e*s)/r,a=Math.sin(a*s)/r}let r=a*i;if(o=o*e+d*r,l=l*e+u*r,h=h*e+p*r,c=c*e+f*r,e===1-a){let e=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=e,l*=e,h*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,i,n,r,s){let a=i[n],o=i[n+1],l=i[n+2],h=i[n+3],c=r[s],d=r[s+1],u=r[s+2],p=r[s+3];return e[t]=a*p+h*c+o*u-l*d,e[t+1]=o*p+h*d+l*c-a*u,e[t+2]=l*p+h*u+a*d-o*c,e[t+3]=h*p-a*c-o*d-l*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let i=e._x,n=e._y,r=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(i/2),h=a(n/2),c=a(r/2),d=o(i/2),u=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=d*h*c+l*u*p,this._y=l*u*c-d*h*p,this._z=l*h*p+d*u*c,this._w=l*h*c-d*u*p;break;case"YXZ":this._x=d*h*c+l*u*p,this._y=l*u*c-d*h*p,this._z=l*h*p-d*u*c,this._w=l*h*c+d*u*p;break;case"ZXY":this._x=d*h*c-l*u*p,this._y=l*u*c+d*h*p,this._z=l*h*p+d*u*c,this._w=l*h*c-d*u*p;break;case"ZYX":this._x=d*h*c-l*u*p,this._y=l*u*c+d*h*p,this._z=l*h*p-d*u*c,this._w=l*h*c+d*u*p;break;case"YZX":this._x=d*h*c+l*u*p,this._y=l*u*c+d*h*p,this._z=l*h*p-d*u*c,this._w=l*h*c-d*u*p;break;case"XZY":this._x=d*h*c-l*u*p,this._y=l*u*c-d*h*p,this._z=l*h*p+d*u*c,this._w=l*h*c+d*u*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],h=t[6],c=t[10],d=i+a+c;if(d>0){let e=.5/Math.sqrt(d+1);this._w=.25/e,this._x=(h-o)*e,this._y=(r-l)*e,this._z=(s-n)*e}else if(i>a&&i>c){let e=2*Math.sqrt(1+i-a-c);this._w=(h-o)/e,this._x=.25*e,this._y=(n+s)/e,this._z=(r+l)/e}else if(a>c){let e=2*Math.sqrt(1+a-i-c);this._w=(r-l)/e,this._x=(n+s)/e,this._y=.25*e,this._z=(o+h)/e}else{let e=2*Math.sqrt(1+c-i-a);this._w=(s-n)/e,this._x=(r+l)/e,this._y=(o+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=i,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ro(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);if(0===i)return this;let n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,s=e._w,a=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+s*a+n*l-r*o,this._y=n*h+s*o+r*a-i*l,this._z=r*h+s*l+i*o-n*a,this._w=s*h-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,s=this._w,a=s*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;let o=1-a*a;if(o<=Number.EPSILON){let e=1-t;return this._w=e*s+t*this._w,this._x=e*i+t*this._x,this._y=e*n+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}let l=Math.sqrt(o),h=Math.atan2(l,a),c=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=s*c+this._w*d,this._x=i*c+this._x*d,this._y=n*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class rI{constructor(e=0,t=0,i=0){rI.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(rN.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rN.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,a=e.z,o=e.w,l=2*(s*n-a*i),h=2*(a*t-r*n),c=2*(r*i-s*t);return this.x=t+o*l+s*c-a*h,this.y=i+o*h+a*l-r*c,this.z=n+o*c+r*h-s*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=ro(this.x,e.x,t.x),this.y=ro(this.y,e.y,t.y),this.z=ro(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=ro(this.x,e,t),this.y=ro(this.y,e,t),this.z=ro(this.z,e,t),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(ro(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,s=t.x,a=t.y,o=t.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return rL.copy(this).projectOnVector(e),this.sub(rL)}reflect(e){return this.sub(rL.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(ro(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=2*Math.random()-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let rL=new rI,rN=new rz;class rD{constructor(e=new rI(Infinity,Infinity,Infinity),t=new rI(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(rR.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(rR.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=rR.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let i=e.geometry;if(void 0!==i){let n=i.getAttribute("position");if(!0===t&&void 0!==n&&!0!==e.isInstancedMesh)for(let t=0,i=n.count;t<i;t++)!0===e.isMesh?e.getVertexPosition(t,rR):rR.fromBufferAttribute(n,t),rR.applyMatrix4(e.matrixWorld),this.expandByPoint(rR);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),rk.copy(e.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),rk.copy(i.boundingBox)),rk.applyMatrix4(e.matrixWorld),this.union(rk)}let n=e.children;for(let e=0,i=n.length;e<i;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,rR),rR.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(rW),rq.subVectors(this.max,rW),rU.subVectors(e.a,rW),rV.subVectors(e.b,rW),rF.subVectors(e.c,rW),rB.subVectors(rV,rU),rH.subVectors(rF,rV),rG.subVectors(rU,rF);let t=[0,-rB.z,rB.y,0,-rH.z,rH.y,0,-rG.z,rG.y,rB.z,0,-rB.x,rH.z,0,-rH.x,rG.z,0,-rG.x,-rB.y,rB.x,0,-rH.y,rH.x,0,-rG.y,rG.x,0];return!!(rJ(t,rU,rV,rF,rq)&&rJ(t=[1,0,0,0,1,0,0,0,1],rU,rV,rF,rq))&&(rj.crossVectors(rB,rH),rJ(t=[rj.x,rj.y,rj.z],rU,rV,rF,rq))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,rR).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(rR).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(rO[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),rO[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),rO[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),rO[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),rO[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),rO[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),rO[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),rO[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(rO)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let rO=[new rI,new rI,new rI,new rI,new rI,new rI,new rI,new rI],rR=new rI,rk=new rD,rU=new rI,rV=new rI,rF=new rI,rB=new rI,rH=new rI,rG=new rI,rW=new rI,rq=new rI,rj=new rI,rX=new rI;function rJ(e,t,i,n,r){for(let s=0,a=e.length-3;s<=a;s+=3){rX.fromArray(e,s);let a=r.x*Math.abs(rX.x)+r.y*Math.abs(rX.y)+r.z*Math.abs(rX.z),o=t.dot(rX),l=i.dot(rX),h=n.dot(rX);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>a)return!1}return!0}let rY=new rD,rZ=new rI,r$=new rI;class rQ{constructor(e=new rI,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):rY.setFromPoints(e).getCenter(i);let n=0;for(let t=0,r=e.length;t<r;t++)n=Math.max(n,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;rZ.subVectors(e,this.center);let t=rZ.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),i=(e-this.radius)*.5;this.center.addScaledVector(rZ,i/e),this.radius+=i}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(r$.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(rZ.copy(e.center).add(r$)),this.expandByPoint(rZ.copy(e.center).sub(r$)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let rK=new rI,r0=new rI,r1=new rI,r2=new rI,r3=new rI,r5=new rI,r4=new rI;class r6{constructor(e=new rI,t=new rI(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rK)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=rK.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rK.copy(this.origin).addScaledVector(this.direction,t),rK.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){let r,s,a,o;r0.copy(e).add(t).multiplyScalar(.5),r1.copy(t).sub(e).normalize(),r2.copy(this.origin).sub(r0);let l=.5*e.distanceTo(t),h=-this.direction.dot(r1),c=r2.dot(this.direction),d=-r2.dot(r1),u=r2.lengthSq(),p=Math.abs(1-h*h);if(p>0){if(r=h*d-c,s=h*c-d,o=l*p,r>=0){if(s>=-o){if(s<=o){let e=1/p;r*=e,s*=e,a=r*(r+h*s+2*c)+s*(h*r+s+2*d)+u}else a=-(r=Math.max(0,-(h*(s=l)+c)))*r+s*(s+2*d)+u}else a=-(r=Math.max(0,-(h*(s=-l)+c)))*r+s*(s+2*d)+u}else s<=-o?(s=(r=Math.max(0,-(-h*l+c)))>0?-l:Math.min(Math.max(-l,-d),l),a=-r*r+s*(s+2*d)+u):s<=o?(r=0,a=(s=Math.min(Math.max(-l,-d),l))*(s+2*d)+u):(s=(r=Math.max(0,-(h*l+c)))>0?l:Math.min(Math.max(-l,-d),l),a=-r*r+s*(s+2*d)+u)}else s=h>0?-l:l,a=-(r=Math.max(0,-(h*s+c)))*r+s*(s+2*d)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,r),n&&n.copy(r0).addScaledVector(r1,s),a}intersectSphere(e,t){rK.subVectors(e.center,this.origin);let i=rK.dot(this.direction),n=rK.dot(rK)-i*i,r=e.radius*e.radius;if(n>r)return null;let s=Math.sqrt(r-n),a=i-s,o=i+s;return o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let i,n,r,s,a,o;let l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,d=this.origin;return(l>=0?(i=(e.min.x-d.x)*l,n=(e.max.x-d.x)*l):(i=(e.max.x-d.x)*l,n=(e.min.x-d.x)*l),h>=0?(r=(e.min.y-d.y)*h,s=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,s=(e.min.y-d.y)*h),i>s||r>n)?null:((r>i||isNaN(i))&&(i=r),(s<n||isNaN(n))&&(n=s),c>=0?(a=(e.min.z-d.z)*c,o=(e.max.z-d.z)*c):(a=(e.max.z-d.z)*c,o=(e.min.z-d.z)*c),i>o||a>n)?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,rK)}intersectTriangle(e,t,i,n,r){let s;r3.subVectors(t,e),r5.subVectors(i,e),r4.crossVectors(r3,r5);let a=this.direction.dot(r4);if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}r2.subVectors(this.origin,e);let o=s*this.direction.dot(r5.crossVectors(r2,r5));if(o<0)return null;let l=s*this.direction.dot(r3.cross(r2));if(l<0||o+l>a)return null;let h=-s*r2.dot(r4);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class r9{constructor(e,t,i,n,r,s,a,o,l,h,c,d,u,p,f,m){r9.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l,h,c,d,u,p,f,m)}set(e,t,i,n,r,s,a,o,l,h,c,d,u,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=d,g[3]=u,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new r9().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/r8.setFromMatrixColumn(e,0).length(),r=1/r8.setFromMatrixColumn(e,1).length(),s=1/r8.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){let e=s*h,i=s*c,n=a*h,r=a*c;t[0]=o*h,t[4]=-o*c,t[8]=l,t[1]=i+n*l,t[5]=e-r*l,t[9]=-a*o,t[2]=r-e*l,t[6]=n+i*l,t[10]=s*o}else if("YXZ"===e.order){let e=o*h,i=o*c,n=l*h,r=l*c;t[0]=e+r*a,t[4]=n*a-i,t[8]=s*l,t[1]=s*c,t[5]=s*h,t[9]=-a,t[2]=i*a-n,t[6]=r+e*a,t[10]=s*o}else if("ZXY"===e.order){let e=o*h,i=o*c,n=l*h,r=l*c;t[0]=e-r*a,t[4]=-s*c,t[8]=n+i*a,t[1]=i+n*a,t[5]=s*h,t[9]=r-e*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){let e=s*h,i=s*c,n=a*h,r=a*c;t[0]=o*h,t[4]=n*l-i,t[8]=e*l+r,t[1]=o*c,t[5]=r*l+e,t[9]=i*l-n,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){let e=s*o,i=s*l,n=a*o,r=a*l;t[0]=o*h,t[4]=r-e*c,t[8]=n*c+i,t[1]=c,t[5]=s*h,t[9]=-a*h,t[2]=-l*h,t[6]=i*c+n,t[10]=e-r*c}else if("XZY"===e.order){let e=s*o,i=s*l,n=a*o,r=a*l;t[0]=o*h,t[4]=-c,t[8]=l*h,t[1]=e*c+r,t[5]=s*h,t[9]=i*c-n,t[2]=n*c-i,t[6]=a*h,t[10]=r*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(se,e,st)}lookAt(e,t,i){let n=this.elements;return sr.subVectors(e,t),0===sr.lengthSq()&&(sr.z=1),sr.normalize(),si.crossVectors(i,sr),0===si.lengthSq()&&(1===Math.abs(i.z)?sr.x+=1e-4:sr.z+=1e-4,sr.normalize(),si.crossVectors(i,sr)),si.normalize(),sn.crossVectors(sr,si),n[0]=si.x,n[4]=sn.x,n[8]=sr.x,n[1]=si.y,n[5]=sn.y,n[9]=sr.y,n[2]=si.z,n[6]=sn.z,n[10]=sr.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],h=i[1],c=i[5],d=i[9],u=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],b=n[0],w=n[4],S=n[8],M=n[12],C=n[1],T=n[5],A=n[9],P=n[13],E=n[2],z=n[6],I=n[10],L=n[14],N=n[3],D=n[7],O=n[11],R=n[15];return r[0]=s*b+a*C+o*E+l*N,r[4]=s*w+a*T+o*z+l*D,r[8]=s*S+a*A+o*I+l*O,r[12]=s*M+a*P+o*L+l*R,r[1]=h*b+c*C+d*E+u*N,r[5]=h*w+c*T+d*z+u*D,r[9]=h*S+c*A+d*I+u*O,r[13]=h*M+c*P+d*L+u*R,r[2]=p*b+f*C+m*E+g*N,r[6]=p*w+f*T+m*z+g*D,r[10]=p*S+f*A+m*I+g*O,r[14]=p*M+f*P+m*L+g*R,r[3]=v*b+y*C+x*E+_*N,r[7]=v*w+y*T+x*z+_*D,r[11]=v*S+y*A+x*I+_*O,r[15]=v*M+y*P+x*L+_*R,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],a=e[5],o=e[9],l=e[13],h=e[2],c=e[6],d=e[10],u=e[14],p=e[3];return p*(+r*o*c-n*l*c-r*a*d+i*l*d+n*a*u-i*o*u)+e[7]*(+t*o*u-t*l*d+r*s*d-n*s*u+n*l*h-r*o*h)+e[11]*(+t*l*c-t*a*u-r*s*c+i*s*u+r*a*h-i*l*h)+e[15]*(-n*a*h-t*o*c+t*a*d+n*s*c-i*s*d+i*o*h)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8],c=e[9],d=e[10],u=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=c*m*l-f*d*l+f*o*u-a*m*u-c*o*g+a*d*g,y=p*d*l-h*m*l-p*o*u+s*m*u+h*o*g-s*d*g,x=h*f*l-p*c*l+p*a*u-s*f*u-h*a*g+s*c*g,_=p*c*o-h*f*o-p*a*d+s*f*d+h*a*m-s*c*m,b=t*v+i*y+n*x+r*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return e[0]=v*w,e[1]=(f*d*r-c*m*r-f*n*u+i*m*u+c*n*g-i*d*g)*w,e[2]=(a*m*r-f*o*r+f*n*l-i*m*l-a*n*g+i*o*g)*w,e[3]=(c*o*r-a*d*r-c*n*l+i*d*l+a*n*u-i*o*u)*w,e[4]=y*w,e[5]=(h*m*r-p*d*r+p*n*u-t*m*u-h*n*g+t*d*g)*w,e[6]=(p*o*r-s*m*r-p*n*l+t*m*l+s*n*g-t*o*g)*w,e[7]=(s*d*r-h*o*r+h*n*l-t*d*l-s*n*u+t*o*u)*w,e[8]=x*w,e[9]=(p*c*r-h*f*r-p*i*u+t*f*u+h*i*g-t*c*g)*w,e[10]=(s*f*r-p*a*r+p*i*l-t*f*l-s*i*g+t*a*g)*w,e[11]=(h*a*r-s*c*r-h*i*l+t*c*l+s*i*u-t*a*u)*w,e[12]=_*w,e[13]=(h*f*n-p*c*n+p*i*d-t*f*d-h*i*m+t*c*m)*w,e[14]=(p*a*n-s*f*n-p*i*o+t*f*o+s*i*m-t*a*m)*w,e[15]=(s*c*n-h*a*n+h*i*o-t*c*o-s*i*d+t*a*d)*w,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,a=e.y,o=e.z,l=r*s,h=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,h*a+i,h*o-n*s,0,l*o-n*a,h*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,s){return this.set(1,i,r,0,e,1,s,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,s=t._y,a=t._z,o=t._w,l=r+r,h=s+s,c=a+a,d=r*l,u=r*h,p=r*c,f=s*h,m=s*c,g=a*c,v=o*l,y=o*h,x=o*c,_=i.x,b=i.y,w=i.z;return n[0]=(1-(f+g))*_,n[1]=(u+x)*_,n[2]=(p-y)*_,n[3]=0,n[4]=(u-x)*b,n[5]=(1-(d+g))*b,n[6]=(m+v)*b,n[7]=0,n[8]=(p+y)*w,n[9]=(m-v)*w,n[10]=(1-(d+f))*w,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=r8.set(n[0],n[1],n[2]).length(),s=r8.set(n[4],n[5],n[6]).length(),a=r8.set(n[8],n[9],n[10]).length();0>this.determinant()&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],r7.copy(this);let o=1/r,l=1/s,h=1/a;return r7.elements[0]*=o,r7.elements[1]*=o,r7.elements[2]*=o,r7.elements[4]*=l,r7.elements[5]*=l,r7.elements[6]*=l,r7.elements[8]*=h,r7.elements[9]*=h,r7.elements[10]*=h,t.setFromRotationMatrix(r7),i.x=r,i.y=s,i.z=a,this}makePerspective(e,t,i,n,r,s,a=2e3){let o,l;let h=this.elements;if(2e3===a)o=-(s+r)/(s-r),l=-2*s*r/(s-r);else if(2001===a)o=-s/(s-r),l=-s*r/(s-r);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=2*r/(t-e),h[4]=0,h[8]=(t+e)/(t-e),h[12]=0,h[1]=0,h[5]=2*r/(i-n),h[9]=(i+n)/(i-n),h[13]=0,h[2]=0,h[6]=0,h[10]=o,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,i,n,r,s,a=2e3){let o,l;let h=this.elements,c=1/(t-e),d=1/(i-n),u=1/(s-r);if(2e3===a)o=(s+r)*u,l=-2*u;else if(2001===a)o=r*u,l=-1*u;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*c,h[4]=0,h[8]=0,h[12]=-((t+e)*c),h[1]=0,h[5]=2*d,h[9]=0,h[13]=-((i+n)*d),h[2]=0,h[6]=0,h[10]=l,h[14]=-o,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}let r8=new rI,r7=new r9,se=new rI(0,0,0),st=new rI(1,1,1),si=new rI,sn=new rI,sr=new rI,ss=new r9,sa=new rz;class so{constructor(e=0,t=0,i=0,n=so.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],h=n[9],c=n[2],d=n[6],u=n[10];switch(t){case"XYZ":this._y=Math.asin(ro(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(-h,u),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ro(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(a,u),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(ro(d,-1,1)),.9999999>Math.abs(d)?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-ro(c,-1,1)),.9999999>Math.abs(c)?(this._x=Math.atan2(d,u),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(ro(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-ro(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return ss.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ss,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return sa.setFromEuler(this),this.setFromQuaternion(sa,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}so.DEFAULT_ORDER="XYZ";class sl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let sh=0,sc=new rI,sd=new rz,su=new r9,sp=new rI,sf=new rI,sm=new rI,sg=new rz,sv=new rI(1,0,0),sy=new rI(0,1,0),sx=new rI(0,0,1),s_={type:"added"},sb={type:"removed"},sw={type:"childadded",child:null},sS={type:"childremoved",child:null};class sM extends ri{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:sh++}),this.uuid=ra(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=sM.DEFAULT_UP.clone();let e=new rI,t=new so,i=new rz,n=new rI(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new r9},normalMatrix:{value:new rd}}),this.matrix=new r9,this.matrixWorld=new r9,this.matrixAutoUpdate=sM.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=sM.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new sl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return sd.setFromAxisAngle(e,t),this.quaternion.multiply(sd),this}rotateOnWorldAxis(e,t){return sd.setFromAxisAngle(e,t),this.quaternion.premultiply(sd),this}rotateX(e){return this.rotateOnAxis(sv,e)}rotateY(e){return this.rotateOnAxis(sy,e)}rotateZ(e){return this.rotateOnAxis(sx,e)}translateOnAxis(e,t){return sc.copy(e).applyQuaternion(this.quaternion),this.position.add(sc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(sv,e)}translateY(e){return this.translateOnAxis(sy,e)}translateZ(e){return this.translateOnAxis(sx,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(su.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?sp.copy(e):sp.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),sf.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?su.lookAt(sf,sp,this.up):su.lookAt(sp,sf,this.up),this.quaternion.setFromRotationMatrix(su),n&&(su.extractRotation(n.matrixWorld),sd.setFromRotationMatrix(su),this.quaternion.premultiply(sd.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(s_),sw.child=e,this.dispatchEvent(sw),sw.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(sb),sS.child=e,this.dispatchEvent(sS),sS.child=null),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),su.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),su.multiply(e.parent.matrixWorld)),e.applyMatrix4(su),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(s_),sw.child=e,this.dispatchEvent(sw),sw.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);let n=this.children;for(let r=0,s=n.length;r<s;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sf,e,sm),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sf,sg,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){let e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),null!==this._colorsTexture&&(n.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let i=t.shapes;if(Array.isArray(i))for(let t=0,n=i.length;t<n;t++){let n=i[t];r(e.shapes,n)}else r(e.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(r(e.materials,this.material[i]));n.material=t}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){let i=this.animations[t];n.animations.push(r(e.animations,i))}}if(t){let t=s(e.geometries),n=s(e.materials),r=s(e.textures),a=s(e.images),o=s(e.shapes),l=s(e.skeletons),h=s(e.animations),c=s(e.nodes);t.length>0&&(i.geometries=t),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h),c.length>0&&(i.nodes=c)}return i.object=n,i;function s(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let i=e.children[t];this.add(i.clone())}return this}}sM.DEFAULT_UP=new rI(0,1,0),sM.DEFAULT_MATRIX_AUTO_UPDATE=!0,sM.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let sC=new rI,sT=new rI,sA=new rI,sP=new rI,sE=new rI,sz=new rI,sI=new rI,sL=new rI,sN=new rI,sD=new rI,sO=new rC,sR=new rC,sk=new rC;class sU{constructor(e=new rI,t=new rI,i=new rI){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),sC.subVectors(e,t),n.cross(sC);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){sC.subVectors(n,t),sT.subVectors(i,t),sA.subVectors(e,t);let s=sC.dot(sC),a=sC.dot(sT),o=sC.dot(sA),l=sT.dot(sT),h=sT.dot(sA),c=s*l-a*a;if(0===c)return r.set(0,0,0),null;let d=1/c,u=(l*o-a*h)*d,p=(s*h-a*o)*d;return r.set(1-u-p,p,u)}static containsPoint(e,t,i,n){return null!==this.getBarycoord(e,t,i,n,sP)&&sP.x>=0&&sP.y>=0&&sP.x+sP.y<=1}static getInterpolation(e,t,i,n,r,s,a,o){return null===this.getBarycoord(e,t,i,n,sP)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,sP.x),o.addScaledVector(s,sP.y),o.addScaledVector(a,sP.z),o)}static getInterpolatedAttribute(e,t,i,n,r,s){return sO.setScalar(0),sR.setScalar(0),sk.setScalar(0),sO.fromBufferAttribute(e,t),sR.fromBufferAttribute(e,i),sk.fromBufferAttribute(e,n),s.setScalar(0),s.addScaledVector(sO,r.x),s.addScaledVector(sR,r.y),s.addScaledVector(sk,r.z),s}static isFrontFacing(e,t,i,n){return sC.subVectors(i,t),sT.subVectors(e,t),0>sC.cross(sT).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return sC.subVectors(this.c,this.b),sT.subVectors(this.a,this.b),.5*sC.cross(sT).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return sU.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return sU.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return sU.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return sU.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return sU.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i,n;let r=this.a,s=this.b,a=this.c;sE.subVectors(s,r),sz.subVectors(a,r),sL.subVectors(e,r);let o=sE.dot(sL),l=sz.dot(sL);if(o<=0&&l<=0)return t.copy(r);sN.subVectors(e,s);let h=sE.dot(sN),c=sz.dot(sN);if(h>=0&&c<=h)return t.copy(s);let d=o*c-h*l;if(d<=0&&o>=0&&h<=0)return i=o/(o-h),t.copy(r).addScaledVector(sE,i);sD.subVectors(e,a);let u=sE.dot(sD),p=sz.dot(sD);if(p>=0&&u<=p)return t.copy(a);let f=u*l-o*p;if(f<=0&&l>=0&&p<=0)return n=l/(l-p),t.copy(r).addScaledVector(sz,n);let m=h*p-u*c;if(m<=0&&c-h>=0&&u-p>=0)return sI.subVectors(a,s),n=(c-h)/(c-h+(u-p)),t.copy(s).addScaledVector(sI,n);let g=1/(m+f+d);return i=f*g,n=d*g,t.copy(r).addScaledVector(sE,i).addScaledVector(sz,n)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let sV={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:65535,aquamarine:8388564,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0,blanchedalmond:0xffebcd,blue:255,blueviolet:9055202,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:6266528,chartreuse:8388352,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:6591981,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:25600,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:9109643,darkolivegreen:5597999,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:9109504,darksalmon:0xe9967a,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:0xff1493,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:2263842,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:8421504,green:32768,greenyellow:0xadff2f,grey:8421504,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:4915330,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:8190976,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:9498256,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:65280,limegreen:3329330,linen:0xfaf0e6,magenta:0xff00ff,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:0xba55d3,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:0xc71585,midnightblue:1644912,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:128,oldlace:0xfdf5e6,olive:8421376,olivedrab:7048739,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:8388736,rebeccapurple:6697881,red:0xff0000,rosybrown:0xbc8f8f,royalblue:4286945,saddlebrown:9127187,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:3050327,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:0xfffafa,springgreen:65407,steelblue:4620980,tan:0xd2b48c,teal:32896,thistle:0xd8bfd8,tomato:0xff6347,turquoise:4251856,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32},sF={h:0,s:0,l:0},sB={h:0,s:0,l:0};function sH(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}class sG{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){return void 0===t&&void 0===i?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,i),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=n9){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,rg.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=rg.workingColorSpace){return this.r=e,this.g=t,this.b=i,rg.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=rg.workingColorSpace){if(e=(e%1+1)%1,t=ro(t,0,1),i=ro(i,0,1),0===t)this.r=this.g=this.b=i;else{let n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=sH(r,n,e+1/3),this.g=sH(r,n,e),this.b=sH(r,n,e-1/3)}return rg.toWorkingColorSpace(this,n),this}setStyle(e,t=n9){let i;function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;let s=i[1],a=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=n9){let i=sV[e.toLowerCase()];return void 0!==i?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=rv(e.r),this.g=rv(e.g),this.b=rv(e.b),this}copyLinearToSRGB(e){return this.r=ry(e.r),this.g=ry(e.g),this.b=ry(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=n9){return rg.fromWorkingColorSpace(sW.copy(this),e),65536*Math.round(ro(255*sW.r,0,255))+256*Math.round(ro(255*sW.g,0,255))+Math.round(ro(255*sW.b,0,255))}getHexString(e=n9){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=rg.workingColorSpace){let i,n;rg.fromWorkingColorSpace(sW.copy(this),t);let r=sW.r,s=sW.g,a=sW.b,o=Math.max(r,s,a),l=Math.min(r,s,a),h=(l+o)/2;if(l===o)i=0,n=0;else{let e=o-l;switch(n=h<=.5?e/(o+l):e/(2-o-l),o){case r:i=(s-a)/e+(s<a?6:0);break;case s:i=(a-r)/e+2;break;case a:i=(r-s)/e+4}i/=6}return e.h=i,e.s=n,e.l=h,e}getRGB(e,t=rg.workingColorSpace){return rg.fromWorkingColorSpace(sW.copy(this),t),e.r=sW.r,e.g=sW.g,e.b=sW.b,e}getStyle(e=n9){rg.fromWorkingColorSpace(sW.copy(this),e);let t=sW.r,i=sW.g,n=sW.b;return e!==n9?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(e,t,i){return this.getHSL(sF),this.setHSL(sF.h+e,sF.s+t,sF.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(sF),e.getHSL(sB);let i=(1-t)*sF.h+t*sB.h,n=(1-t)*sF.s+t*sB.s,r=(1-t)*sF.l+t*sB.l;return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let sW=new sG;sG.NAMES=sV;let sq=0;class sj extends ri{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:sq++}),this.uuid=ra(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new sG(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let n=this[t];if(void 0===n){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),204!==this.blendSrc&&(i.blendSrc=this.blendSrc),205!==this.blendDst&&(i.blendDst=this.blendDst),100!==this.blendEquation&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(i.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(i.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){let t=n(e.textures),r=n(e.images);t.length>0&&(i.textures=t),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let e=t.length;i=Array(e);for(let n=0;n!==e;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class sX extends sj{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new sG(0xffffff),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new so,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let sJ=new rI,sY=new rc,sZ=0;class s${constructor(e,t,i=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:sZ++}),this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)sY.fromBufferAttribute(this,t),sY.applyMatrix3(e),this.setXY(t,sY.x,sY.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)sJ.fromBufferAttribute(this,t),sJ.applyMatrix3(e),this.setXYZ(t,sJ.x,sJ.y,sJ.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)sJ.fromBufferAttribute(this,t),sJ.applyMatrix4(e),this.setXYZ(t,sJ.x,sJ.y,sJ.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)sJ.fromBufferAttribute(this,t),sJ.applyNormalMatrix(e),this.setXYZ(t,sJ.x,sJ.y,sJ.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)sJ.fromBufferAttribute(this,t),sJ.transformDirection(e),this.setXYZ(t,sJ.x,sJ.y,sJ.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=rl(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=rh(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=rl(t,this.array)),t}setX(e,t){return this.normalized&&(t=rh(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=rl(t,this.array)),t}setY(e,t){return this.normalized&&(t=rh(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=rl(t,this.array)),t}setZ(e,t){return this.normalized&&(t=rh(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=rl(t,this.array)),t}setW(e,t){return this.normalized&&(t=rh(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=rh(t,this.array),i=rh(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=rh(t,this.array),i=rh(i,this.array),n=rh(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=rh(t,this.array),i=rh(i,this.array),n=rh(n,this.array),r=rh(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class sQ extends s${constructor(e,t,i){super(new Uint16Array(e),t,i)}}class sK extends s${constructor(e,t,i){super(new Uint32Array(e),t,i)}}class s0 extends s${constructor(e,t,i){super(new Float32Array(e),t,i)}}let s1=0,s2=new r9,s3=new sM,s5=new rI,s4=new rD,s6=new rD,s9=new rI;class s8 extends ri{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:s1++}),this.uuid=ra(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(!function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(e)?sQ:sK)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let t=new rd().getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}let n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return s2.makeRotationFromQuaternion(e),this.applyMatrix4(s2),this}rotateX(e){return s2.makeRotationX(e),this.applyMatrix4(s2),this}rotateY(e){return s2.makeRotationY(e),this.applyMatrix4(s2),this}rotateZ(e){return s2.makeRotationZ(e),this.applyMatrix4(s2),this}translate(e,t,i){return s2.makeTranslation(e,t,i),this.applyMatrix4(s2),this}scale(e,t,i){return s2.makeScale(e,t,i),this.applyMatrix4(s2),this}lookAt(e){return s3.lookAt(e),s3.updateMatrix(),this.applyMatrix4(s3.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(s5).negate(),this.translate(s5.x,s5.y,s5.z),this}setFromPoints(e){let t=this.getAttribute("position");if(void 0===t){let t=[];for(let i=0,n=e.length;i<n;i++){let n=e[i];t.push(n.x,n.y,n.z||0)}this.setAttribute("position",new s0(t,3))}else{let i=Math.min(e.length,t.count);for(let n=0;n<i;n++){let i=e[n];t.setXYZ(n,i.x,i.y,i.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new rD);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new rI(-1/0,-1/0,-1/0),new rI(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];s4.setFromBufferAttribute(i),this.morphTargetsRelative?(s9.addVectors(this.boundingBox.min,s4.min),this.boundingBox.expandByPoint(s9),s9.addVectors(this.boundingBox.max,s4.max),this.boundingBox.expandByPoint(s9)):(this.boundingBox.expandByPoint(s4.min),this.boundingBox.expandByPoint(s4.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new rQ);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new rI,1/0);return}if(e){let i=this.boundingSphere.center;if(s4.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){let i=t[e];s6.setFromBufferAttribute(i),this.morphTargetsRelative?(s9.addVectors(s4.min,s6.min),s4.expandByPoint(s9),s9.addVectors(s4.max,s6.max),s4.expandByPoint(s9)):(s4.expandByPoint(s6.min),s4.expandByPoint(s6.max))}s4.getCenter(i);let n=0;for(let t=0,r=e.count;t<r;t++)s9.fromBufferAttribute(e,t),n=Math.max(n,i.distanceToSquared(s9));if(t)for(let r=0,s=t.length;r<s;r++){let s=t[r],a=this.morphTargetsRelative;for(let t=0,r=s.count;t<r;t++)s9.fromBufferAttribute(s,t),a&&(s5.fromBufferAttribute(e,t),s9.add(s5)),n=Math.max(n,i.distanceToSquared(s9))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=t.position,n=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new s$(new Float32Array(4*i.count),4));let s=this.getAttribute("tangent"),a=[],o=[];for(let e=0;e<i.count;e++)a[e]=new rI,o[e]=new rI;let l=new rI,h=new rI,c=new rI,d=new rc,u=new rc,p=new rc,f=new rI,m=new rI,g=this.groups;0===g.length&&(g=[{start:0,count:e.count}]);for(let t=0,n=g.length;t<n;++t){let n=g[t],s=n.start,v=n.count;for(let t=s,n=s+v;t<n;t+=3)!function(e,t,n){l.fromBufferAttribute(i,e),h.fromBufferAttribute(i,t),c.fromBufferAttribute(i,n),d.fromBufferAttribute(r,e),u.fromBufferAttribute(r,t),p.fromBufferAttribute(r,n),h.sub(l),c.sub(l),u.sub(d),p.sub(d);let s=1/(u.x*p.y-p.x*u.y);isFinite(s)&&(f.copy(h).multiplyScalar(p.y).addScaledVector(c,-u.y).multiplyScalar(s),m.copy(c).multiplyScalar(u.x).addScaledVector(h,-p.x).multiplyScalar(s),a[e].add(f),a[t].add(f),a[n].add(f),o[e].add(m),o[t].add(m),o[n].add(m))}(e.getX(t+0),e.getX(t+1),e.getX(t+2))}let v=new rI,y=new rI,x=new rI,_=new rI;function b(e){x.fromBufferAttribute(n,e),_.copy(x);let t=a[e];v.copy(t),v.sub(x.multiplyScalar(x.dot(t))).normalize(),y.crossVectors(_,t);let i=y.dot(o[e]);s.setXYZW(e,v.x,v.y,v.z,i<0?-1:1)}for(let t=0,i=g.length;t<i;++t){let i=g[t],n=i.start,r=i.count;for(let t=n,i=n+r;t<i;t+=3)b(e.getX(t+0)),b(e.getX(t+1)),b(e.getX(t+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new s$(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);let n=new rI,r=new rI,s=new rI,a=new rI,o=new rI,l=new rI,h=new rI,c=new rI;if(e)for(let d=0,u=e.count;d<u;d+=3){let u=e.getX(d+0),p=e.getX(d+1),f=e.getX(d+2);n.fromBufferAttribute(t,u),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,f),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),a.fromBufferAttribute(i,u),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,f),a.add(h),o.add(h),l.add(h),i.setXYZ(u,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)n.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),h.subVectors(s,r),c.subVectors(n,r),h.cross(c),i.setXYZ(e+0,h.x,h.y,h.z),i.setXYZ(e+1,h.x,h.y,h.z),i.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)s9.fromBufferAttribute(e,t),s9.normalize(),e.setXYZ(t,s9.x,s9.y,s9.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n),a=0,o=0;for(let r=0,l=t.length;r<l;r++){a=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*n;for(let e=0;e<n;e++)s[o++]=i[a++]}return new s$(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new s8,i=this.index.array,n=this.attributes;for(let r in n){let s=e(n[r],i);t.setAttribute(r,s)}let r=this.morphAttributes;for(let n in r){let s=[],a=r[n];for(let t=0,n=a.length;t<n;t++){let n=e(a[t],i);s.push(n)}t.morphAttributes[n]=s}t.morphTargetsRelative=this.morphTargetsRelative;let s=this.groups;for(let e=0,i=s.length;e<i;e++){let i=s[e];t.addGroup(i.start,i.count,i.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let i=this.attributes;for(let t in i){let n=i[t];e.data.attributes[t]=n.toJSON(e.data)}let n={},r=!1;for(let t in this.morphAttributes){let i=this.morphAttributes[t],s=[];for(let t=0,n=i.length;t<n;t++){let n=i[t];s.push(n.toJSON(e.data))}s.length>0&&(n[t]=s,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);let s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));let a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let e in n){let i=n[e];this.setAttribute(e,i.clone(t))}let r=e.morphAttributes;for(let e in r){let i=[],n=r[e];for(let e=0,r=n.length;e<r;e++)i.push(n[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;let s=e.groups;for(let e=0,t=s.length;e<t;e++){let t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}let a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());let o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}let s7=new r9,ae=new r6,at=new rQ,ai=new rI,an=new rI,ar=new rI,as=new rI,aa=new rI,ao=new rI,al=new rI,ah=new rI;class ac extends sM{constructor(e=new s8,t=new sX){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){let t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){let i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,s=i.morphTargetsRelative;t.fromBufferAttribute(n,e);let a=this.morphTargetInfluences;if(r&&a){ao.set(0,0,0);for(let i=0,n=r.length;i<n;i++){let n=a[i],o=r[i];0!==n&&(aa.fromBufferAttribute(o,e),s?ao.addScaledVector(aa,n):ao.addScaledVector(aa.sub(t),n))}t.add(ao)}return t}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),at.copy(i.boundingSphere),at.applyMatrix4(r),ae.copy(e.ray).recast(e.near),!1===at.containsPoint(ae.origin)&&(null===ae.intersectSphere(at,ai)||ae.origin.distanceToSquared(ai)>(e.far-e.near)**2)||(s7.copy(r).invert(),ae.copy(e.ray).applyMatrix4(s7),null!==i.boundingBox&&!1===ae.intersectsBox(i.boundingBox)))return;this._computeIntersections(e,t,ae)}}_computeIntersections(e,t,i){let n;let r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,c=r.attributes.normal,d=r.groups,u=r.drawRange;if(null!==a){if(Array.isArray(s))for(let r=0,o=d.length;r<o;r++){let o=d[r],p=s[o.materialIndex],f=Math.max(o.start,u.start),m=Math.min(a.count,Math.min(o.start+o.count,u.start+u.count));for(let r=f;r<m;r+=3)(n=ad(this,p,e,i,l,h,c,a.getX(r),a.getX(r+1),a.getX(r+2)))&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=o.materialIndex,t.push(n))}else{let r=Math.max(0,u.start),o=Math.min(a.count,u.start+u.count);for(let d=r;d<o;d+=3)(n=ad(this,s,e,i,l,h,c,a.getX(d),a.getX(d+1),a.getX(d+2)))&&(n.faceIndex=Math.floor(d/3),t.push(n))}}else if(void 0!==o){if(Array.isArray(s))for(let r=0,a=d.length;r<a;r++){let a=d[r],p=s[a.materialIndex],f=Math.max(a.start,u.start),m=Math.min(o.count,Math.min(a.start+a.count,u.start+u.count));for(let r=f;r<m;r+=3)(n=ad(this,p,e,i,l,h,c,r,r+1,r+2))&&(n.faceIndex=Math.floor(r/3),n.face.materialIndex=a.materialIndex,t.push(n))}else{let r=Math.max(0,u.start),a=Math.min(o.count,u.start+u.count);for(let o=r;o<a;o+=3)(n=ad(this,s,e,i,l,h,c,o,o+1,o+2))&&(n.faceIndex=Math.floor(o/3),t.push(n))}}}}function ad(e,t,i,n,r,s,a,o,l,h){e.getVertexPosition(o,an),e.getVertexPosition(l,ar),e.getVertexPosition(h,as);let c=function(e,t,i,n,r,s,a,o){if(null===(1===t.side?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,0===t.side,o)))return null;ah.copy(o),ah.applyMatrix4(e.matrixWorld);let l=i.ray.origin.distanceTo(ah);return l<i.near||l>i.far?null:{distance:l,point:ah.clone(),object:e}}(e,t,i,n,an,ar,as,al);if(c){let e=new rI;sU.getBarycoord(al,an,ar,as,e),r&&(c.uv=sU.getInterpolatedAttribute(r,o,l,h,e,new rc)),s&&(c.uv1=sU.getInterpolatedAttribute(s,o,l,h,e,new rc)),a&&(c.normal=sU.getInterpolatedAttribute(a,o,l,h,e,new rI),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));let t={a:o,b:l,c:h,normal:new rI,materialIndex:0};sU.getNormal(an,ar,as,t.normal),c.face=t,c.barycoord=e}return c}class au extends s8{constructor(e=1,t=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};let a=this;n=Math.floor(n),r=Math.floor(r);let o=[],l=[],h=[],c=[],d=0,u=0;function p(e,t,i,n,r,s,p,f,m,g,v){let y=s/m,x=p/g,_=s/2,b=p/2,w=f/2,S=m+1,M=g+1,C=0,T=0,A=new rI;for(let s=0;s<M;s++){let a=s*x-b;for(let o=0;o<S;o++){let d=o*y-_;A[e]=d*n,A[t]=a*r,A[i]=w,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=f>0?1:-1,h.push(A.x,A.y,A.z),c.push(o/m),c.push(1-s/g),C+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){let i=d+t+S*e,n=d+t+S*(e+1),r=d+(t+1)+S*(e+1),s=d+(t+1)+S*e;o.push(i,n,s),o.push(n,r,s),T+=6}a.addGroup(u,T,v),u+=T,d+=C}p("z","y","x",-1,-1,i,t,e,s=Math.floor(s),r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new s0(l,3)),this.setAttribute("normal",new s0(h,3)),this.setAttribute("uv",new s0(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new au(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ap(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[i][n]=null):t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function af(e){let t={};for(let i=0;i<e.length;i++){let n=ap(e[i]);for(let e in n)t[e]=n[e]}return t}class am extends sj{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ap(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let i={};for(let e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class ag extends sM{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new r9,this.projectionMatrix=new r9,this.projectionMatrixInverse=new r9,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}let av=new rI,ay=new rc,ax=new rc;class a_ extends ag{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*rs*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*rr*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*rs*Math.atan(Math.tan(.5*rr*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){av.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(av.x,av.y).multiplyScalar(-e/av.z),av.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(av.x,av.y).multiplyScalar(-e/av.z)}getViewSize(e,t){return this.getViewBounds(e,ay,ax),t.subVectors(ax,ay)}setViewOffset(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*rr*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,s=this.view;if(null!==this.view&&this.view.enabled){let e=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/e,t-=s.offsetY*i/a,n*=s.width/e,i*=s.height/a}let a=this.filmOffset;0!==a&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class ab extends sM{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;let n=new a_(-90,1,e,t);n.layers=this.layers,this.add(n);let r=new a_(-90,1,e,t);r.layers=this.layers,this.add(r);let s=new a_(-90,1,e,t);s.layers=this.layers,this.add(s);let a=new a_(-90,1,e,t);a.layers=this.layers,this.add(a);let o=new a_(-90,1,e,t);o.layers=this.layers,this.add(o);let l=new a_(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[i,n,r,s,a,o]=t;for(let e of t)this.remove(e);if(2e3===e)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else if(2001===e)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[r,s,a,o,l,h]=this.children,c=e.getRenderTarget(),d=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;let f=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,s),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,o),e.setRenderTarget(i,4,n),e.render(t,l),i.texture.generateMipmaps=f,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(c,d,u),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class aw extends rM{constructor(e,t,i,n,r,s,a,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,i,n,r,s,a,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class aS extends sM{constructor(){super(),this.isGroup=!0,this.type="Group"}}let aM={type:"move"},aC=new rI,aT=new rI,aA=new rd;class aP{constructor(e=new rI(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=aC.subVectors(i,t).cross(aT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let i=e.delta(aC),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||aA.getNormalMatrix(e),n=this.coplanarPoint(aC).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let aE=new rQ,az=new rI,aI=new rI,aL=new rI,aN=new rI,aD=new rI;class aO extends rM{constructor(e,t,i,n,r,s,a,o,l,h=1026){if(1026!==h&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&1026===h&&(i=1014),void 0===i&&1027===h&&(i=1020),super(null,n,r,s,a,o,h,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new rb(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class aR{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)t.push(r+=(i=this.getPoint(s/e)).distanceTo(n)),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){let i;let n=this.getLengths(),r=0,s=n.length;i=t||e*n[s-1];let a=0,o=s-1,l;for(;a<=o;)if((l=n[r=Math.floor(a+(o-a)/2)]-i)<0)a=r+1;else if(l>0)o=r-1;else{o=r;break}if(n[r=o]===i)return r/(s-1);let h=n[r],c=n[r+1];return(r+(i-h)/(c-h))/(s-1)}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),s=this.getPoint(n),a=t||(r.isVector2?new rc:new rI);return a.copy(s).sub(r).normalize(),a}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){let i=new rI,n=[],r=[],s=[],a=new rI,o=new r9;for(let t=0;t<=e;t++){let i=t/e;n[t]=this.getTangentAt(i,new rI)}r[0]=new rI,s[0]=new rI;let l=Number.MAX_VALUE,h=Math.abs(n[0].x),c=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=l&&(l=h,i.set(1,0,0)),c<=l&&(l=c,i.set(0,1,0)),d<=l&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let t=1;t<=e;t++){if(r[t]=r[t-1].clone(),s[t]=s[t-1].clone(),a.crossVectors(n[t-1],n[t]),a.length()>Number.EPSILON){a.normalize();let e=Math.acos(ro(n[t-1].dot(n[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(a,e))}s[t].crossVectors(n[t],r[t])}if(!0===t){let t=Math.acos(ro(r[0].dot(r[e]),-1,1));t/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(t=-t);for(let i=1;i<=e;i++)r[i].applyMatrix4(o.makeRotationAxis(n[i],t*i)),s[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ak extends aR{constructor(e=0,t=0,i=1,n=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(e,t=new rc){let i=2*Math.PI,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=i;for(;n>i;)n-=i;n<Number.EPSILON&&(n=r?0:i),!0!==this.aClockwise||r||(n===i?n=-i:n-=i);let s=this.aStartAngle+e*n,a=this.aX+this.xRadius*Math.cos(s),o=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=a-this.aX,n=o-this.aY;a=i*e-n*t+this.aX,o=i*t+n*e+this.aY}return t.set(a,o)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class aU extends ak{constructor(e,t,i,n,r,s){super(e,t,i,i,n,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function aV(){let e=0,t=0,i=0,n=0;function r(r,s,a,o){e=r,t=a,i=-3*r+3*s-2*a-o,n=2*r-2*s+a+o}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,a,o){let l=(t-e)/s-(i-e)/(s+a)+(i-t)/a,h=(i-t)/a-(n-t)/(a+o)+(n-i)/o;r(t,i,l*=a,h*=a)},calc:function(r){let s=r*r;return e+t*r+i*s+s*r*n}}}let aF=new rI,aB=new aV,aH=new aV,aG=new aV;class aW extends aR{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new rI){let i,n;let r=this.points,s=r.length,a=(s-(this.closed?0:1))*e,o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:0===l&&o===s-1&&(o=s-2,l=1),this.closed||o>0?i=r[(o-1)%s]:(aF.subVectors(r[0],r[1]).add(r[0]),i=aF);let h=r[o%s],c=r[(o+1)%s];if(this.closed||o+2<s?n=r[(o+2)%s]:(aF.subVectors(r[s-1],r[s-2]).add(r[s-1]),n=aF),"centripetal"===this.curveType||"chordal"===this.curveType){let e="chordal"===this.curveType?.5:.25,t=Math.pow(i.distanceToSquared(h),e),r=Math.pow(h.distanceToSquared(c),e),s=Math.pow(c.distanceToSquared(n),e);r<1e-4&&(r=1),t<1e-4&&(t=r),s<1e-4&&(s=r),aB.initNonuniformCatmullRom(i.x,h.x,c.x,n.x,t,r,s),aH.initNonuniformCatmullRom(i.y,h.y,c.y,n.y,t,r,s),aG.initNonuniformCatmullRom(i.z,h.z,c.z,n.z,t,r,s)}else"catmullrom"===this.curveType&&(aB.initCatmullRom(i.x,h.x,c.x,n.x,this.tension),aH.initCatmullRom(i.y,h.y,c.y,n.y,this.tension),aG.initCatmullRom(i.z,h.z,c.z,n.z,this.tension));return t.set(aB.calc(l),aH.calc(l),aG.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new rI().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function aq(e,t,i,n,r){let s=(n-t)*.5,a=(r-i)*.5,o=e*e;return e*o*(2*i-2*n+s+a)+(-3*i+3*n-2*s-a)*o+s*e+i}function aj(e,t,i,n){return function(e,t){let i=1-e;return i*i*t}(e,t)+2*(1-e)*e*i+e*e*n}function aX(e,t,i,n,r){return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+3*(1-e)*e*e*n+e*e*e*r}class aJ extends aR{constructor(e=new rc,t=new rc,i=new rc,n=new rc){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new rc){let i=this.v0,n=this.v1,r=this.v2,s=this.v3;return t.set(aX(e,i.x,n.x,r.x,s.x),aX(e,i.y,n.y,r.y,s.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class aY extends aR{constructor(e=new rI,t=new rI,i=new rI,n=new rI){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new rI){let i=this.v0,n=this.v1,r=this.v2,s=this.v3;return t.set(aX(e,i.x,n.x,r.x,s.x),aX(e,i.y,n.y,r.y,s.y),aX(e,i.z,n.z,r.z,s.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class aZ extends aR{constructor(e=new rc,t=new rc){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new rc){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new rc){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class a$ extends aR{constructor(e=new rI,t=new rI){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new rI){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new rI){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class aQ extends aR{constructor(e=new rc,t=new rc,i=new rc){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new rc){let i=this.v0,n=this.v1,r=this.v2;return t.set(aj(e,i.x,n.x,r.x),aj(e,i.y,n.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class aK extends aR{constructor(e=new rI,t=new rI,i=new rI){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new rI){let i=this.v0,n=this.v1,r=this.v2;return t.set(aj(e,i.x,n.x,r.x),aj(e,i.y,n.y,r.y),aj(e,i.z,n.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class a0 extends aR{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new rc){let i=this.points,n=(i.length-1)*e,r=Math.floor(n),s=n-r,a=i[0===r?r:r-1],o=i[r],l=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return t.set(aq(s,a.x,o.x,l.x,h.x),aq(s,a.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let i=e.points[t];this.points.push(new rc().fromArray(i))}return this}}var a1=Object.freeze({__proto__:null,ArcCurve:aU,CatmullRomCurve3:aW,CubicBezierCurve:aJ,CubicBezierCurve3:aY,EllipseCurve:ak,LineCurve:aZ,LineCurve3:a$,QuadraticBezierCurve:aQ,QuadraticBezierCurve3:aK,SplineCurve:a0});class a2 extends aR{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let i=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new a1[i](t,e))}return this}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let e=n[r]-i,s=this.curves[r],a=s.getLength(),o=0===a?0:1-e/a;return s.getPointAt(o,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let i=[];for(let n=0,r=this.curves;n<r.length;n++){let s=r[n],a=s.isEllipseCurve?2*e:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,o=s.getPoints(a);for(let e=0;e<o.length;e++){let n=o[e];t&&t.equals(n)||(i.push(n),t=n)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let i=e.curves[t];this.curves.push(new a1[i.type]().fromJSON(i))}return this}}class a3 extends a2{constructor(e){super(),this.type="Path",this.currentPoint=new rc,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new aZ(this.currentPoint.clone(),new rc(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new aQ(this.currentPoint.clone(),new rc(e,t),new rc(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,s){let a=new aJ(this.currentPoint.clone(),new rc(e,t),new rc(i,n),new rc(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(e){let t=new a0([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,s){let a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,i,n,r,s),this}absarc(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this}ellipse(e,t,i,n,r,s,a,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,n,r,s,a,o),this}absellipse(e,t,i,n,r,s,a,o){let l=new ak(e,t,i,n,r,s,a,o);if(this.curves.length>0){let e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class a5 extends s8{constructor(e=[new rc(0,-.5),new rc(.5,0),new rc(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=ro(n,0,2*Math.PI);let r=[],s=[],a=[],o=[],l=[],h=1/t,c=new rI,d=new rc,u=new rI,p=new rI,f=new rI,m=0,g=0;for(let t=0;t<=e.length-1;t++)switch(t){case 0:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,u.x=1*g,u.y=-m,u.z=0*g,f.copy(u),u.normalize(),o.push(u.x,u.y,u.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,u.x=1*g,u.y=-m,u.z=0*g,p.copy(u),u.x+=f.x,u.y+=f.y,u.z+=f.z,u.normalize(),o.push(u.x,u.y,u.z),f.copy(p)}for(let r=0;r<=t;r++){let u=i+r*h*n,p=Math.sin(u),f=Math.cos(u);for(let i=0;i<=e.length-1;i++){c.x=e[i].x*p,c.y=e[i].y,c.z=e[i].x*f,s.push(c.x,c.y,c.z),d.x=r/t,d.y=i/(e.length-1),a.push(d.x,d.y);let n=o[3*i+0]*p,h=o[3*i+1],u=o[3*i+0]*f;l.push(n,h,u)}}for(let i=0;i<t;i++)for(let t=0;t<e.length-1;t++){let n=t+i*e.length,s=n+e.length,a=n+e.length+1,o=n+1;r.push(n,s,o),r.push(a,o,s)}this.setIndex(r),this.setAttribute("position",new s0(s,3)),this.setAttribute("uv",new s0(a,2)),this.setAttribute("normal",new s0(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a5(e.points,e.segments,e.phiStart,e.phiLength)}}class a4 extends a5{constructor(e=1,t=1,i=4,n=8){let r=new a3;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new a4(e.radius,e.length,e.capSegments,e.radialSegments)}}class a6 extends s8{constructor(e=1,t=32,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],s=[],a=[],o=[],l=new rI,h=new rc;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let r=0,c=3;r<=t;r++,c+=3){let d=i+r/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),s.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(s[c]/e+1)/2,h.y=(s[c+1]/e+1)/2,o.push(h.x,h.y)}for(let e=1;e<=t;e++)r.push(e,e+1,0);this.setIndex(r),this.setAttribute("position",new s0(s,3)),this.setAttribute("normal",new s0(a,3)),this.setAttribute("uv",new s0(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a6(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class a9 extends s8{constructor(e=1,t=1,i=1,n=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let h=[],c=[],d=[],u=[],p=0,f=[],m=i/2,g=0;function v(i){let r=p,s=new rc,f=new rI,v=0,y=!0===i?e:t,x=!0===i?1:-1;for(let e=1;e<=n;e++)c.push(0,m*x,0),d.push(0,x,0),u.push(.5,.5),p++;let _=p;for(let e=0;e<=n;e++){let t=e/n*o+a,i=Math.cos(t),r=Math.sin(t);f.x=y*r,f.y=m*x,f.z=y*i,c.push(f.x,f.y,f.z),d.push(0,x,0),s.x=.5*i+.5,s.y=.5*r*x+.5,u.push(s.x,s.y),p++}for(let e=0;e<n;e++){let t=r+e,n=_+e;!0===i?h.push(n,n+1,t):h.push(n+1,n,t),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}(function(){let s=new rI,v=new rI,y=0,x=(t-e)/i;for(let l=0;l<=r;l++){let h=[],g=l/r,y=g*(t-e)+e;for(let e=0;e<=n;e++){let t=e/n,r=t*o+a,l=Math.sin(r),f=Math.cos(r);v.x=y*l,v.y=-g*i+m,v.z=y*f,c.push(v.x,v.y,v.z),s.set(l,x,f).normalize(),d.push(s.x,s.y,s.z),u.push(t,1-g),h.push(p++)}f.push(h)}for(let i=0;i<n;i++)for(let n=0;n<r;n++){let s=f[n][i],a=f[n+1][i],o=f[n+1][i+1],l=f[n][i+1];(e>0||0!==n)&&(h.push(s,a,l),y+=3),(t>0||n!==r-1)&&(h.push(a,o,l),y+=3)}l.addGroup(g,y,0),g+=y})(),!1===s&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new s0(c,3)),this.setAttribute("normal",new s0(d,3)),this.setAttribute("uv",new s0(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a9(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class a8 extends a9{constructor(e=1,t=1,i=32,n=1,r=!1,s=0,a=2*Math.PI){super(0,e,t,i,n,r,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new a8(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class a7 extends s8{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],s=[];function a(e){r.push(e.x,e.y,e.z)}function o(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function l(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}(function(e){let i=new rI,n=new rI,r=new rI;for(let s=0;s<t.length;s+=3)o(t[s+0],i),o(t[s+1],n),o(t[s+2],r),function(e,t,i,n){let r=n+1,s=[];for(let n=0;n<=r;n++){s[n]=[];let a=e.clone().lerp(i,n/r),o=t.clone().lerp(i,n/r),l=r-n;for(let e=0;e<=l;e++)0===e&&n===r?s[n][e]=a:s[n][e]=a.clone().lerp(o,e/l)}for(let e=0;e<r;e++)for(let t=0;t<2*(r-e)-1;t++){let i=Math.floor(t/2);t%2==0?(a(s[e][i+1]),a(s[e+1][i]),a(s[e][i])):(a(s[e][i+1]),a(s[e+1][i+1]),a(s[e+1][i]))}}(i,n,r,e)})(n),function(e){let t=new rI;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){let e=new rI;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let i=h(e)/2/Math.PI+.5,n=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;s.push(i,1-n)}(function(){let e=new rI,t=new rI,i=new rI,n=new rI,a=new rc,o=new rc,c=new rc;for(let d=0,u=0;d<r.length;d+=9,u+=6){e.set(r[d+0],r[d+1],r[d+2]),t.set(r[d+3],r[d+4],r[d+5]),i.set(r[d+6],r[d+7],r[d+8]),a.set(s[u+0],s[u+1]),o.set(s[u+2],s[u+3]),c.set(s[u+4],s[u+5]),n.copy(e).add(t).add(i).divideScalar(3);let p=h(n);l(a,u+0,e,p),l(o,u+2,t,p),l(c,u+4,i,p)}})(),function(){for(let e=0;e<s.length;e+=6){let t=s[e+0],i=s[e+2],n=s[e+4],r=Math.max(t,i,n),a=Math.min(t,i,n);r>.9&&a<.1&&(t<.2&&(s[e+0]+=1),i<.2&&(s[e+2]+=1),n<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new s0(r,3)),this.setAttribute("normal",new s0(r.slice(),3)),this.setAttribute("uv",new s0(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a7(e.vertices,e.indices,e.radius,e.details)}}class oe extends a7{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oe(e.radius,e.detail)}}class ot extends a3{constructor(e){super(e),this.uuid=ra(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let i=e.holes[t];this.holes.push(new a3().fromJSON(i))}return this}}class oi{static triangulate(e,t,i=2){let n,r,s,a,o,l,h;let c=t&&t.length,d=c?t[0]*i:e.length,u=on(e,0,d,i,!0),p=[];if(!u||u.next===u.prev)return p;if(c&&(u=function(e,t,i,n){let r,s,a,o,l;let h=[];for(r=0,s=t.length;r<s;r++)a=t[r]*n,o=r<s-1?t[r+1]*n:e.length,(l=on(e,a,o,n,!1))===l.next&&(l.steiner=!0),h.push(function(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}(l));for(h.sort(os),r=0;r<h.length;r++)i=function(e,t){let i=function(e,t){let i=t,n=-1/0,r,s=e.x,a=e.y;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){let e=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=s&&e>n&&(n=e,r=i.x<i.next.x?i:i.next,e===s))return r}i=i.next}while(i!==t);if(!r)return null;let o=r,l=r.x,h=r.y,c=1/0,d;i=r;do{var u,p;s>=i.x&&i.x>=l&&s!==i.x&&oo(a<h?s:n,a,l,h,a<h?n:s,a,i.x,i.y)&&(d=Math.abs(a-i.y)/(s-i.x),op(i,e)&&(d<c||d===c&&(i.x>r.x||i.x===r.x&&(u=r,p=i,0>ol(u.prev,u,p.prev)&&0>ol(p.next,u,u.next))))&&(r=i,c=d)),i=i.next}while(i!==o);return r}(e,t);if(!i)return t;let n=of(i,e);return or(n,n.next),or(i,i.next)}(h[r],i);return i}(e,t,u,i)),e.length>80*i){n=s=e[0],r=a=e[1];for(let t=i;t<d;t+=i)o=e[t],l=e[t+1],o<n&&(n=o),l<r&&(r=l),o>s&&(s=o),l>a&&(a=l);h=0!==(h=Math.max(s-n,a-r))?32767/h:0}return function e(t,i,n,r,s,a,o){if(!t)return;!o&&a&&function(e,t,i,n){let r=e;do 0===r.z&&(r.z=oa(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,s,a,o,l,h=1;do{for(i=e,e=null,s=null,a=0;i;){for(a++,n=i,o=0,t=0;t<h&&(o++,n=n.nextZ);t++);for(l=h;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;i=n}s.nextZ=null,h*=2}while(a>1)}(r)}(t,r,s,a);let l=t,h,c;for(;t.prev!==t.next;){if(h=t.prev,c=t.next,a?function(e,t,i,n){let r=e.prev,s=e.next;if(ol(r,e,s)>=0)return!1;let a=r.x,o=e.x,l=s.x,h=r.y,c=e.y,d=s.y,u=a<o?a<l?a:l:o<l?o:l,p=h<c?h<d?h:d:c<d?c:d,f=a>o?a>l?a:l:o>l?o:l,m=h>c?h>d?h:d:c>d?c:d,g=oa(u,p,t,i,n),v=oa(f,m,t,i,n),y=e.prevZ,x=e.nextZ;for(;y&&y.z>=g&&x&&x.z<=v;){if(y.x>=u&&y.x<=f&&y.y>=p&&y.y<=m&&y!==r&&y!==s&&oo(a,h,o,c,l,d,y.x,y.y)&&ol(y.prev,y,y.next)>=0||(y=y.prevZ,x.x>=u&&x.x<=f&&x.y>=p&&x.y<=m&&x!==r&&x!==s&&oo(a,h,o,c,l,d,x.x,x.y)&&ol(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;y&&y.z>=g;){if(y.x>=u&&y.x<=f&&y.y>=p&&y.y<=m&&y!==r&&y!==s&&oo(a,h,o,c,l,d,y.x,y.y)&&ol(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;x&&x.z<=v;){if(x.x>=u&&x.x<=f&&x.y>=p&&x.y<=m&&x!==r&&x!==s&&oo(a,h,o,c,l,d,x.x,x.y)&&ol(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}(t,r,s,a):function(e){let t=e.prev,i=e.next;if(ol(t,e,i)>=0)return!1;let n=t.x,r=e.x,s=i.x,a=t.y,o=e.y,l=i.y,h=n<r?n<s?n:s:r<s?r:s,c=a<o?a<l?a:l:o<l?o:l,d=n>r?n>s?n:s:r>s?r:s,u=a>o?a>l?a:l:o>l?o:l,p=i.next;for(;p!==t;){if(p.x>=h&&p.x<=d&&p.y>=c&&p.y<=u&&oo(n,a,r,o,s,l,p.x,p.y)&&ol(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}(t)){i.push(h.i/n|0),i.push(t.i/n|0),i.push(c.i/n|0),og(t),t=c.next,l=c.next;continue}if((t=c)===l){o?1===o?e(t=function(e,t,i){let n=e;do{let r=n.prev,s=n.next.next;!oh(r,s)&&oc(r,n,n.next,s)&&op(r,s)&&op(s,r)&&(t.push(r.i/i|0),t.push(n.i/i|0),t.push(s.i/i|0),og(n),og(n.next),n=e=s),n=n.next}while(n!==e);return or(n)}(or(t),i,n),i,n,r,s,a,2):2===o&&function(t,i,n,r,s,a){let o=t;do{let t=o.next.next;for(;t!==o.prev;){var l,h;if(o.i!==t.i&&(l=o,h=t,l.next.i!==h.i&&l.prev.i!==h.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&oc(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(l,h)&&(op(l,h)&&op(h,l)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,s=(e.y+t.y)/2;do i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next;while(i!==e);return n}(l,h)&&(ol(l.prev,l,h.prev)||ol(l,h.prev,h))||oh(l,h)&&ol(l.prev,l,l.next)>0&&ol(h.prev,h,h.next)>0))){let l=of(o,t);o=or(o,o.next),l=or(l,l.next),e(o,i,n,r,s,a,0),e(l,i,n,r,s,a,0);return}t=t.next}o=o.next}while(o!==t)}(t,i,n,r,s,a):e(or(t),i,n,r,s,a,1);break}}}(u,p,i,n,r,h,0),p}}function on(e,t,i,n,r){let s,a;if(r===function(e,t,i,n){let r=0;for(let s=t,a=i-n;s<i;s+=n)r+=(e[a]-e[s])*(e[s+1]+e[a+1]),a=s;return r}(e,t,i,n)>0)for(s=t;s<i;s+=n)a=om(s,e[s],e[s+1],a);else for(s=i-n;s>=t;s-=n)a=om(s,e[s],e[s+1],a);return a&&oh(a,a.next)&&(og(a),a=a.next),a}function or(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(oh(i,i.next)||0===ol(i.prev,i,i.next))){if(og(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t);return t}function os(e,t){return e.x-t.x}function oa(e,t,i,n,r){return(e=((e=((e=((e=((e=(e-i)*r|0)|e<<8)&0xff00ff)|e<<4)&0xf0f0f0f)|e<<2)&0x33333333)|e<<1)&0x55555555)|(t=((t=((t=((t=((t=(t-n)*r|0)|t<<8)&0xff00ff)|t<<4)&0xf0f0f0f)|t<<2)&0x33333333)|t<<1)&0x55555555)<<1}function oo(e,t,i,n,r,s,a,o){return(r-a)*(t-o)>=(e-a)*(s-o)&&(e-a)*(n-o)>=(i-a)*(t-o)&&(i-a)*(s-o)>=(r-a)*(n-o)}function ol(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function oh(e,t){return e.x===t.x&&e.y===t.y}function oc(e,t,i,n){let r=ou(ol(e,t,i)),s=ou(ol(e,t,n)),a=ou(ol(i,n,e)),o=ou(ol(i,n,t));return!!(r!==s&&a!==o||0===r&&od(e,i,t)||0===s&&od(e,n,t)||0===a&&od(i,e,n)||0===o&&od(i,t,n))}function od(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function ou(e){return e>0?1:e<0?-1:0}function op(e,t){return 0>ol(e.prev,e,e.next)?ol(e,t,e.next)>=0&&ol(e,e.prev,t)>=0:0>ol(e,t,e.prev)||0>ol(e,e.next,t)}function of(e,t){let i=new ov(e.i,e.x,e.y),n=new ov(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function om(e,t,i,n){let r=new ov(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function og(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ov(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class oy{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>oy.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];ox(e),o_(i,e);let s=e.length;t.forEach(ox);for(let e=0;e<t.length;e++)n.push(s),s+=t[e].length,o_(i,t[e]);let a=oi.triangulate(i,n);for(let e=0;e<a.length;e+=3)r.push(a.slice(e,e+3));return r}}function ox(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function o_(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class ob extends s8{constructor(e=new ot([new rc(.5,.5),new rc(-.5,.5),new rc(-.5,-.5),new rc(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let s=0,a=e.length;s<a;s++)(function(e){let s,a,o,l;let h=[],c=void 0!==t.curveSegments?t.curveSegments:12,d=void 0!==t.steps?t.steps:1,u=void 0!==t.depth?t.depth:1,p=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,m=void 0!==t.bevelSize?t.bevelSize:f-.1,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3,y=t.extrudePath,x=void 0!==t.UVGenerator?t.UVGenerator:ow,_,b=!1;y&&(_=y.getSpacedPoints(d),b=!0,p=!1,s=y.computeFrenetFrames(d,!1),a=new rI,o=new rI,l=new rI),p||(v=0,f=0,m=0,g=0);let w=e.extractPoints(c),S=w.shape,M=w.holes;if(!oy.isClockWise(S)){S=S.reverse();for(let e=0,t=M.length;e<t;e++){let t=M[e];oy.isClockWise(t)&&(M[e]=t.reverse())}}let C=oy.triangulateShape(S,M),T=S;for(let e=0,t=M.length;e<t;e++){let t=M[e];S=S.concat(t)}function A(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,i)}let P=S.length,E=C.length;function z(e,t,i){let n,r,s;let a=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,c=a*a+o*o;if(Math.abs(a*h-o*l)>Number.EPSILON){let d=Math.sqrt(c),u=Math.sqrt(l*l+h*h),p=t.x-o/d,f=t.y+a/d,m=((i.x-h/u-p)*h-(i.y+l/u-f)*l)/(a*h-o*l),g=(n=p+a*m-e.x)*n+(r=f+o*m-e.y)*r;if(g<=2)return new rc(n,r);s=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),e?(n=-o,r=a,s=Math.sqrt(c)):(n=a,r=o,s=Math.sqrt(c/2))}return new rc(n/s,r/s)}let I=[];for(let e=0,t=T.length,i=t-1,n=e+1;e<t;e++,i++,n++)i===t&&(i=0),n===t&&(n=0),I[e]=z(T[e],T[i],T[n]);let L=[],N,D=I.concat();for(let e=0,t=M.length;e<t;e++){let t=M[e];N=[];for(let e=0,i=t.length,n=i-1,r=e+1;e<i;e++,n++,r++)n===i&&(n=0),r===i&&(r=0),N[e]=z(t[e],t[n],t[r]);L.push(N),D=D.concat(N)}for(let e=0;e<v;e++){let t=e/v,i=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=T.length;e<t;e++){let t=A(T[e],I[e],n);k(t.x,t.y,-i)}for(let e=0,t=M.length;e<t;e++){let t=M[e];N=L[e];for(let e=0,r=t.length;e<r;e++){let r=A(t[e],N[e],n);k(r.x,r.y,-i)}}}let O=m+g;for(let e=0;e<P;e++){let t=p?A(S[e],D[e],O):S[e];b?(o.copy(s.normals[0]).multiplyScalar(t.x),a.copy(s.binormals[0]).multiplyScalar(t.y),l.copy(_[0]).add(o).add(a),k(l.x,l.y,l.z)):k(t.x,t.y,0)}for(let e=1;e<=d;e++)for(let t=0;t<P;t++){let i=p?A(S[t],D[t],O):S[t];b?(o.copy(s.normals[e]).multiplyScalar(i.x),a.copy(s.binormals[e]).multiplyScalar(i.y),l.copy(_[e]).add(o).add(a),k(l.x,l.y,l.z)):k(i.x,i.y,u/d*e)}for(let e=v-1;e>=0;e--){let t=e/v,i=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=T.length;e<t;e++){let t=A(T[e],I[e],n);k(t.x,t.y,u+i)}for(let e=0,t=M.length;e<t;e++){let t=M[e];N=L[e];for(let e=0,r=t.length;e<r;e++){let r=A(t[e],N[e],n);b?k(r.x,r.y+_[d-1].y,_[d-1].x+i):k(r.x,r.y,u+i)}}}function R(e,t){let r=e.length;for(;--r>=0;){let s=r,a=r-1;a<0&&(a=e.length-1);for(let e=0,r=d+2*v;e<r;e++){let r=P*e,o=P*(e+1);(function(e,t,r,s){V(e),V(t),V(s),V(t),V(r),V(s);let a=n.length/3,o=x.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);F(o[0]),F(o[1]),F(o[3]),F(o[1]),F(o[2]),F(o[3])})(t+s+r,t+a+r,t+a+o,t+s+o)}}}function k(e,t,i){h.push(e),h.push(t),h.push(i)}function U(e,t,r){V(e),V(t),V(r);let s=n.length/3,a=x.generateTopUV(i,n,s-3,s-2,s-1);F(a[0]),F(a[1]),F(a[2])}function V(e){n.push(h[3*e+0]),n.push(h[3*e+1]),n.push(h[3*e+2])}function F(e){r.push(e.x),r.push(e.y)}(function(){let e=n.length/3;if(p){let e=0*P;for(let t=0;t<E;t++){let i=C[t];U(i[2]+e,i[1]+e,i[0]+e)}e=P*(d+2*v);for(let t=0;t<E;t++){let i=C[t];U(i[0]+e,i[1]+e,i[2]+e)}}else{for(let e=0;e<E;e++){let t=C[e];U(t[2],t[1],t[0])}for(let e=0;e<E;e++){let t=C[e];U(t[0]+P*d,t[1]+P*d,t[2]+P*d)}}i.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;R(T,0),t+=T.length;for(let e=0,i=M.length;e<i;e++){let i=M[e];R(i,t),t+=i.length}i.addGroup(e,n.length/3-e,1)}()})(e[s]);this.setAttribute("position",new s0(n,3)),this.setAttribute("uv",new s0(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){let n=e[t];i.shapes.push(n.uuid)}else i.shapes.push(e.uuid);return i.options=Object.assign({},t),void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let r=t[e.shapes[n]];i.push(r)}let n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=new a1[n.type]().fromJSON(n)),new ob(i,e.options)}}let ow={generateTopUV:function(e,t,i,n,r){let s=t[3*i],a=t[3*i+1],o=t[3*n],l=t[3*n+1],h=t[3*r],c=t[3*r+1];return[new rc(s,a),new rc(o,l),new rc(h,c)]},generateSideWallUV:function(e,t,i,n,r,s){let a=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*n],c=t[3*n+1],d=t[3*n+2],u=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*s],g=t[3*s+1],v=t[3*s+2];return Math.abs(o-c)<Math.abs(a-h)?[new rc(a,1-l),new rc(h,1-d),new rc(u,1-f),new rc(m,1-v)]:[new rc(o,1-l),new rc(c,1-d),new rc(p,1-f),new rc(g,1-v)]}};class oS extends a7{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oS(e.radius,e.detail)}}class oM extends a7{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oM(e.radius,e.detail)}}class oC extends s8{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,s=t/2,a=Math.floor(i),o=Math.floor(n),l=a+1,h=o+1,c=e/a,d=t/o,u=[],p=[],f=[],m=[];for(let e=0;e<h;e++){let t=e*d-s;for(let i=0;i<l;i++){let n=i*c-r;p.push(n,-t,0),f.push(0,0,1),m.push(i/a),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<a;t++){let i=t+l*e,n=t+l*(e+1),r=t+1+l*(e+1),s=t+1+l*e;u.push(i,n,s),u.push(n,r,s)}this.setIndex(u),this.setAttribute("position",new s0(p,3)),this.setAttribute("normal",new s0(f,3)),this.setAttribute("uv",new s0(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oC(e.width,e.height,e.widthSegments,e.heightSegments)}}class oT extends s8{constructor(e=.5,t=1,i=32,n=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},i=Math.max(3,i);let a=[],o=[],l=[],h=[],c=e,d=(t-e)/(n=Math.max(1,n)),u=new rI,p=new rc;for(let e=0;e<=n;e++){for(let e=0;e<=i;e++){let n=r+e/i*s;u.x=c*Math.cos(n),u.y=c*Math.sin(n),o.push(u.x,u.y,u.z),l.push(0,0,1),p.x=(u.x/t+1)/2,p.y=(u.y/t+1)/2,h.push(p.x,p.y)}c+=d}for(let e=0;e<n;e++){let t=e*(i+1);for(let e=0;e<i;e++){let n=e+t,r=n+i+1,s=n+i+2,o=n+1;a.push(n,r,o),a.push(r,s,o)}}this.setIndex(a),this.setAttribute("position",new s0(o,3)),this.setAttribute("normal",new s0(l,3)),this.setAttribute("uv",new s0(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oT(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class oA extends s8{constructor(e=new ot([new rc(0,.5),new rc(-.5,-.5),new rc(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],s=[],a=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(a,o,t),a+=o,o=0;function l(e){let a=n.length/3,l=e.extractPoints(t),h=l.shape,c=l.holes;!1===oy.isClockWise(h)&&(h=h.reverse());for(let e=0,t=c.length;e<t;e++){let t=c[e];!0===oy.isClockWise(t)&&(c[e]=t.reverse())}let d=oy.triangulateShape(h,c);for(let e=0,t=c.length;e<t;e++){let t=c[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){let t=h[e];n.push(t.x,t.y,0),r.push(0,0,1),s.push(t.x,t.y)}for(let e=0,t=d.length;e<t;e++){let t=d[e],n=t[0]+a,r=t[1]+a,s=t[2]+a;i.push(n,r,s),o+=3}}this.setIndex(i),this.setAttribute("position",new s0(n,3)),this.setAttribute("normal",new s0(r,3)),this.setAttribute("uv",new s0(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){let n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let r=t[e.shapes[n]];i.push(r)}return new oA(i,e.curveSegments)}}class oP extends s8{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(s+a,Math.PI),l=0,h=[],c=new rI,d=new rI,u=[],p=[],f=[],m=[];for(let u=0;u<=i;u++){let g=[],v=u/i,y=0;0===u&&0===s?y=.5/t:u===i&&o===Math.PI&&(y=-.5/t);for(let i=0;i<=t;i++){let o=i/t;c.x=-e*Math.cos(n+o*r)*Math.sin(s+v*a),c.y=e*Math.cos(s+v*a),c.z=e*Math.sin(n+o*r)*Math.sin(s+v*a),p.push(c.x,c.y,c.z),d.copy(c).normalize(),f.push(d.x,d.y,d.z),m.push(o+y,1-v),g.push(l++)}h.push(g)}for(let e=0;e<i;e++)for(let n=0;n<t;n++){let t=h[e][n+1],r=h[e][n],a=h[e+1][n],l=h[e+1][n+1];(0!==e||s>0)&&u.push(t,r,l),(e!==i-1||o<Math.PI)&&u.push(r,a,l)}this.setIndex(u),this.setAttribute("position",new s0(p,3)),this.setAttribute("normal",new s0(f,3)),this.setAttribute("uv",new s0(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oP(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class oE extends a7{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oE(e.radius,e.detail)}}class oz extends s8{constructor(e=1,t=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let s=[],a=[],o=[],l=[],h=new rI,c=new rI,d=new rI;for(let s=0;s<=i;s++)for(let u=0;u<=n;u++){let p=u/n*r,f=s/i*Math.PI*2;c.x=(e+t*Math.cos(f))*Math.cos(p),c.y=(e+t*Math.cos(f))*Math.sin(p),c.z=t*Math.sin(f),a.push(c.x,c.y,c.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),d.subVectors(c,h).normalize(),o.push(d.x,d.y,d.z),l.push(u/n),l.push(s/i)}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){let i=(n+1)*e+t-1,r=(n+1)*(e-1)+t-1,a=(n+1)*(e-1)+t,o=(n+1)*e+t;s.push(i,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute("position",new s0(a,3)),this.setAttribute("normal",new s0(o,3)),this.setAttribute("uv",new s0(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oz(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class oI extends s8{constructor(e=1,t=.4,i=64,n=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},i=Math.floor(i),n=Math.floor(n);let a=[],o=[],l=[],h=[],c=new rI,d=new rI,u=new rI,p=new rI,f=new rI,m=new rI,g=new rI;for(let a=0;a<=i;++a){let y=a/i*r*Math.PI*2;v(y,r,s,e,u),v(y+.01,r,s,e,p),m.subVectors(p,u),g.addVectors(p,u),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=n;++e){let r=e/n*Math.PI*2,s=-t*Math.cos(r),p=t*Math.sin(r);c.x=u.x+(s*g.x+p*f.x),c.y=u.y+(s*g.y+p*f.y),c.z=u.z+(s*g.z+p*f.z),o.push(c.x,c.y,c.z),d.subVectors(c,u).normalize(),l.push(d.x,d.y,d.z),h.push(a/i),h.push(e/n)}}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){let i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,o=(n+1)*(e-1)+t;a.push(i,r,o),a.push(r,s,o)}function v(e,t,i,n,r){let s=Math.cos(e),a=Math.sin(e),o=i/t*e,l=Math.cos(o);r.x=n*(2+l)*.5*s,r.y=n*(2+l)*a*.5,r.z=n*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new s0(o,3)),this.setAttribute("normal",new s0(l,3)),this.setAttribute("uv",new s0(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oI(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class oL extends s8{constructor(e=new aK(new rI(-1,-1,0),new rI(-1,1,0),new rI(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;let a=new rI,o=new rI,l=new rc,h=new rI,c=[],d=[],u=[],p=[];function f(r){h=e.getPointAt(r/t,h);let l=s.normals[r],u=s.binormals[r];for(let e=0;e<=n;e++){let t=e/n*Math.PI*2,r=Math.sin(t),s=-Math.cos(t);o.x=s*l.x+r*u.x,o.y=s*l.y+r*u.y,o.z=s*l.z+r*u.z,o.normalize(),d.push(o.x,o.y,o.z),a.x=h.x+i*o.x,a.y=h.y+i*o.y,a.z=h.z+i*o.z,c.push(a.x,a.y,a.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,u.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){let i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,a=(n+1)*(e-1)+t;p.push(i,r,a),p.push(r,s,a)}}()})(),this.setIndex(p),this.setAttribute("position",new s0(c,3)),this.setAttribute("normal",new s0(d,3)),this.setAttribute("uv",new s0(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new oL(new a1[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}function oN(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}class oD{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let s;i:{n:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,e<(n=t[++i]))break t}s=t.length;break i}if(!(e>=r)){let a=t[1];e<a&&(i=2,r=a);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(n=r,e>=(r=t[--i-1]))break t}s=i,i=0;break i}break e}for(;i<s;){let n=i+s>>>1;e<t[n]?s=n:i=n+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let e=0;e!==n;++e)t[e]=i[r+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class oO extends oD{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,s=e+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:r=e,a=2*t-i;break;case 2402:r=n.length-2,a=t+n[r]-n[r+1];break;default:r=e,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=e,o=2*i-t;break;case 2402:s=1,o=i+n[1]-n[0];break;default:s=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=s*h}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,h=this._offsetPrev,c=this._offsetNext,d=this._weightPrev,u=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,g=-d*m+2*d*f-d*p,v=(1+d)*m+(-1.5-2*d)*f+(-.5+d)*p+1,y=(-1-u)*m+(1.5+u)*f+.5*p,x=u*m-u*f;for(let e=0;e!==a;++e)r[e]=g*s[h+e]+v*s[l+e]+y*s[o+e]+x*s[c+e];return r}}class oR extends oD{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,h=(i-t)/(n-t),c=1-h;for(let e=0;e!==a;++e)r[e]=s[l+e]*c+s[o+e]*h;return r}}class ok extends oD{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class oU{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=oN(t,this.TimeBufferType),this.values=oN(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t;let i=e.constructor;if(i.toJSON!==this.toJSON)t=i.toJSON(e);else{t={name:e.name,times:oN(e.times,Array),values:oN(e.values,Array)};let i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new ok(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new oR(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new oO(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(r=(s=Math.max(s,1))-1);let e=this.getValueSize();this.times=i.slice(r,s),this.values=this.values.slice(r*e,s*e)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let t=0;t!==r;t++){let n=i[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,s),e=!1;break}s=n}if(void 0!==n&&ArrayBuffer.isView(n)&&!(n instanceof DataView))for(let t=0,i=n.length;t!==i;++t){let i=n[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=2302===this.getInterpolation(),r=e.length-1,s=1;for(let a=1;a<r;++a){let r=!1,o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0])){if(n)r=!0;else{let e=a*i,n=e-i,s=e+i;for(let a=0;a!==i;++a){let i=t[e+a];if(i!==t[n+a]||i!==t[s+a]){r=!0;break}}}}if(r){if(a!==s){e[s]=e[a];let n=a*i,r=s*i;for(let e=0;e!==i;++e)t[r+e]=t[n+e]}++s}}if(r>0){e[s]=e[r];for(let e=r*i,n=s*i,a=0;a!==i;++a)t[n+a]=t[e+a];++s}return s!==e.length?(this.times=e.slice(0,s),this.values=t.slice(0,s*i)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),i=new this.constructor(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}oU.prototype.TimeBufferType=Float32Array,oU.prototype.ValueBufferType=Float32Array,oU.prototype.DefaultInterpolation=2301;class oV extends oU{constructor(e,t,i){super(e,t,i)}}oV.prototype.ValueTypeName="bool",oV.prototype.ValueBufferType=Array,oV.prototype.DefaultInterpolation=2300,oV.prototype.InterpolantFactoryMethodLinear=void 0,oV.prototype.InterpolantFactoryMethodSmooth=void 0;class oF extends oU{}oF.prototype.ValueTypeName="color";class oB extends oU{}oB.prototype.ValueTypeName="number";class oH extends oD{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-t)/(n-t),l=e*a;for(let e=l+a;l!==e;l+=4)rz.slerpFlat(r,0,s,l-a,s,l,o);return r}}class oG extends oU{InterpolantFactoryMethodLinear(e){return new oH(this.times,this.values,this.getValueSize(),e)}}oG.prototype.ValueTypeName="quaternion",oG.prototype.InterpolantFactoryMethodSmooth=void 0;class oW extends oU{constructor(e,t,i){super(e,t,i)}}oW.prototype.ValueTypeName="string",oW.prototype.ValueBufferType=Array,oW.prototype.DefaultInterpolation=2300,oW.prototype.InterpolantFactoryMethodLinear=void 0,oW.prototype.InterpolantFactoryMethodSmooth=void 0;class oq extends oU{}oq.prototype.ValueTypeName="vector";class oj{constructor(e,t,i){let n;let r=this,s=!1,a=0,o=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){o++,!1===s&&void 0!==r.onStart&&r.onStart(e,a,o),s=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return n?n(e):e},this.setURLModifier=function(e){return n=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let i=l[t],n=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return n}return null}}}let oX=new oj;class oJ{constructor(e){this.manager=void 0!==e?e:oX,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}oJ.DEFAULT_MATERIAL_NAME="__DEFAULT";class oY extends ag{constructor(e=-1,t=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,s=i+e,a=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,s=r+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}let oZ="\\[\\]\\.:\\/",o$=RegExp("["+oZ+"]","g"),oQ="[^"+oZ+"]",oK="[^"+oZ.replace("\\.","")+"]",o0=/((?:WC+[\/:])*)/.source.replace("WC",oQ),o1=RegExp("^"+o0+/(WCOD+)?/.source.replace("WCOD",oK)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",oQ)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",oQ)+"$"),o2=["material","materials","bones","map"];class o3{constructor(e,t,i){let n=i||o5.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class o5{constructor(e,t,i){this.path=t,this.parsedPath=i||o5.parseTrackName(t),this.node=o5.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new o5.Composite(e,t,i):new o5(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(o$,"")}static parseTrackName(e){let t=o1.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let e=i.nodeName.substring(n+1);-1!==o2.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let i=function(e){for(let n=0;n<e.length;n++){let r=e[n];if(r.name===t||r.uuid===t)return r;let s=i(r.children);if(s)return s}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=o5.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let n=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==n){if(void 0===e[n]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[n]}}let s=e[n];if(void 0===s){console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,!0===e.isMaterial?a=this.Versioning.NeedsUpdate:!0===e.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}o5.Composite=o3,o5.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},o5.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},o5.prototype.GetterByBindingType=[o5.prototype._getValue_direct,o5.prototype._getValue_array,o5.prototype._getValue_arrayElement,o5.prototype._getValue_toArray],o5.prototype.SetterByBindingTypeAndVersioning=[[o5.prototype._setValue_direct,o5.prototype._setValue_direct_setNeedsUpdate,o5.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[o5.prototype._setValue_array,o5.prototype._setValue_array_setNeedsUpdate,o5.prototype._setValue_array_setMatrixWorldNeedsUpdate],[o5.prototype._setValue_arrayElement,o5.prototype._setValue_arrayElement_setNeedsUpdate,o5.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[o5.prototype._setValue_fromArray,o5.prototype._setValue_fromArray_setNeedsUpdate,o5.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"174"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="174");let o4={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n	#if ! defined( GL_ANGLE_multi_draw )\n	#define gl_DrawID _gl_DrawID\n	uniform int _gl_DrawID;\n	#endif\n	uniform highp sampler2D batchingTexture;\n	uniform highp usampler2D batchingIdTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n	float getIndirectIndex( const in int i ) {\n		int size = textureSize( batchingIdTexture, 0 ).x;\n		int x = i % size;\n		int y = i / size;\n		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n	}\n#endif\n#ifdef USE_BATCHING_COLOR\n	uniform sampler2D batchingColorTexture;\n	vec3 getBatchingColor( const in float i ) {\n		int size = textureSize( batchingColorTexture, 0 ).x;\n		int j = int( i );\n		int x = j % size;\n		int y = j / size;\n		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n	}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n	vColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n		emissiveColor = sRGBTransferEOTF( emissiveColor );\n	#endif\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform mat3 envMapRotation;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if ( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n	material.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	float dispersion;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	vFragDepth = 1.0 + gl_Position.w;\n	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n	float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n	}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_INSTANCING_MORPH\n		uniform float morphTargetBaseInfluence;\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	#endif\n	uniform sampler2DArray morphTargetsTexture;\n	uniform ivec2 morphTargetsTextureSize;\n	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n		int y = texelIndex / morphTargetsTextureSize.x;\n		int x = texelIndex - y * morphTargetsTextureSize.x;\n		ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n		return texelFetch( morphTargetsTexture, morphUV, 0 );\n	}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n	if( v <= 0.0 )\n		return vec4( 0., 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec4( 1., 1., 1., 1. );\n	float vuf;\n	float af = modf( v * PackFactors.a, vuf );\n	float bf = modf( vuf * ShiftRight8, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n	if( v <= 0.0 )\n		return vec3( 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec3( 1., 1., 1. );\n	float vuf;\n	float bf = modf( v * PackFactors.b, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n	if( v <= 0.0 )\n		return vec2( 0., 0. );\n	if( v >= 1.0 )\n		return vec2( 1., 1. );\n	float vuf;\n	float gf = modf( v * 256., vuf );\n	return vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n	return dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		float shadow = 1.0;\n		vec3 lightToPosition = shadowCoord.xyz;\n		\n		float lightToPositionLength = length( lightToPosition );\n		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;\n			vec3 bd3D = normalize( lightToPosition );\n			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n				shadow = (\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n				) * ( 1.0 / 9.0 );\n			#else\n				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n			#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n	const float StartCompression = 0.8 - 0.04;\n	const float Desaturation = 0.15;\n	color *= toneMappingExposure;\n	float x = min( color.r, min( color.g, color.b ) );\n	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n	color -= offset;\n	float peak = max( color.r, max( color.g, color.b ) );\n	if ( peak < StartCompression ) return color;\n	float d = 1. - StartCompression;\n	float newPeak = 1. - d * d / ( peak + d - StartCompression );\n	color *= newPeak / peak;\n	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n	return mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec4 transmittedLight;\n		vec3 transmittance;\n		#ifdef USE_DISPERSION\n			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n			for ( int i = 0; i < 3; i ++ ) {\n				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n				vec3 refractedRayExit = position + transmissionRay;\n				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n				vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n				refractionCoords += 1.0;\n				refractionCoords /= 2.0;\n				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n				transmittedLight[ i ] = transmissionSample[ i ];\n				transmittedLight.a += transmissionSample.a;\n				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n			}\n			transmittedLight.a /= 3.0;\n		#else\n			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n			vec3 refractedRayExit = position + transmissionRay;\n			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n			vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n			refractionCoords += 1.0;\n			refractionCoords /= 2.0;\n			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		#endif\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#elif DEPTH_PACKING == 3202\n		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n	#elif DEPTH_PACKING == 3203\n		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix[ 3 ];\n	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},o6={common:{diffuse:{value:new sG(0xffffff)},opacity:{value:1},map:{value:null},mapTransform:{value:new rd},alphaMap:{value:null},alphaMapTransform:{value:new rd},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new rd}},envmap:{envMap:{value:null},envMapRotation:{value:new rd},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new rd}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new rd}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new rd},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new rd},normalScale:{value:new rc(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new rd},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new rd}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new rd}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new rd}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new sG(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new sG(0xffffff)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new rd},alphaTest:{value:0},uvTransform:{value:new rd}},sprite:{diffuse:{value:new sG(0xffffff)},opacity:{value:1},center:{value:new rc(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new rd},alphaMap:{value:null},alphaMapTransform:{value:new rd},alphaTest:{value:0}}},o9={basic:{uniforms:af([o6.common,o6.specularmap,o6.envmap,o6.aomap,o6.lightmap,o6.fog]),vertexShader:o4.meshbasic_vert,fragmentShader:o4.meshbasic_frag},lambert:{uniforms:af([o6.common,o6.specularmap,o6.envmap,o6.aomap,o6.lightmap,o6.emissivemap,o6.bumpmap,o6.normalmap,o6.displacementmap,o6.fog,o6.lights,{emissive:{value:new sG(0)}}]),vertexShader:o4.meshlambert_vert,fragmentShader:o4.meshlambert_frag},phong:{uniforms:af([o6.common,o6.specularmap,o6.envmap,o6.aomap,o6.lightmap,o6.emissivemap,o6.bumpmap,o6.normalmap,o6.displacementmap,o6.fog,o6.lights,{emissive:{value:new sG(0)},specular:{value:new sG(1118481)},shininess:{value:30}}]),vertexShader:o4.meshphong_vert,fragmentShader:o4.meshphong_frag},standard:{uniforms:af([o6.common,o6.envmap,o6.aomap,o6.lightmap,o6.emissivemap,o6.bumpmap,o6.normalmap,o6.displacementmap,o6.roughnessmap,o6.metalnessmap,o6.fog,o6.lights,{emissive:{value:new sG(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:o4.meshphysical_vert,fragmentShader:o4.meshphysical_frag},toon:{uniforms:af([o6.common,o6.aomap,o6.lightmap,o6.emissivemap,o6.bumpmap,o6.normalmap,o6.displacementmap,o6.gradientmap,o6.fog,o6.lights,{emissive:{value:new sG(0)}}]),vertexShader:o4.meshtoon_vert,fragmentShader:o4.meshtoon_frag},matcap:{uniforms:af([o6.common,o6.bumpmap,o6.normalmap,o6.displacementmap,o6.fog,{matcap:{value:null}}]),vertexShader:o4.meshmatcap_vert,fragmentShader:o4.meshmatcap_frag},points:{uniforms:af([o6.points,o6.fog]),vertexShader:o4.points_vert,fragmentShader:o4.points_frag},dashed:{uniforms:af([o6.common,o6.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:o4.linedashed_vert,fragmentShader:o4.linedashed_frag},depth:{uniforms:af([o6.common,o6.displacementmap]),vertexShader:o4.depth_vert,fragmentShader:o4.depth_frag},normal:{uniforms:af([o6.common,o6.bumpmap,o6.normalmap,o6.displacementmap,{opacity:{value:1}}]),vertexShader:o4.meshnormal_vert,fragmentShader:o4.meshnormal_frag},sprite:{uniforms:af([o6.sprite,o6.fog]),vertexShader:o4.sprite_vert,fragmentShader:o4.sprite_frag},background:{uniforms:{uvTransform:{value:new rd},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:o4.background_vert,fragmentShader:o4.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new rd}},vertexShader:o4.backgroundCube_vert,fragmentShader:o4.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:o4.cube_vert,fragmentShader:o4.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:o4.equirect_vert,fragmentShader:o4.equirect_frag},distanceRGBA:{uniforms:af([o6.common,o6.displacementmap,{referencePosition:{value:new rI},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:o4.distanceRGBA_vert,fragmentShader:o4.distanceRGBA_frag},shadow:{uniforms:af([o6.lights,o6.fog,{color:{value:new sG(0)},opacity:{value:1}}]),vertexShader:o4.shadow_vert,fragmentShader:o4.shadow_frag}};o9.physical={uniforms:af([o9.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new rd},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new rd},clearcoatNormalScale:{value:new rc(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new rd},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new rd},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new rd},sheen:{value:0},sheenColor:{value:new sG(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new rd},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new rd},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new rd},transmissionSamplerSize:{value:new rc},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new rd},attenuationDistance:{value:0},attenuationColor:{value:new sG(0)},specularColor:{value:new sG(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new rd},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new rd},anisotropyVector:{value:new rc},anisotropyMap:{value:null},anisotropyMapTransform:{value:new rd}}]),vertexShader:o4.meshphysical_vert,fragmentShader:o4.meshphysical_frag};let o8=[.125,.215,.35,.446,.526,.582],o7=new oY,le=new sG,lt=null,li=0,ln=0,lr=!1,ls=(1+Math.sqrt(5))/2,la=1/ls,lo=[new rI(-ls,la,0),new rI(ls,la,0),new rI(-la,0,ls),new rI(la,0,ls),new rI(0,ls,-la),new rI(0,ls,la),new rI(-1,1,-1),new rI(1,1,-1),new rI(-1,1,1),new rI(1,1,1)],ll=new rI;function lh(e,t,i){let n=new rA(e,t,i);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function lc(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function ld(){return new am({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:lp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function lu(){return new am({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:lp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function lp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}let lf=new rM,lm=new aO(1,1),lg=new rP,lv=new rE,ly=new aw,lx=[],l_=[],lb=new Float32Array(16),lw=new Float32Array(9),lS=new Float32Array(4);function lM(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,s=lx[r];if(void 0===s&&(s=new Float32Array(r),lx[r]=s),0!==t){n.toArray(s,0);for(let n=1,r=0;n!==t;++n)r+=i,e[n].toArray(s,r)}return s}function lC(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function lT(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function lA(e,t){let i=l_[t];void 0===i&&(i=new Int32Array(t),l_[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function lP(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function lE(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(lC(i,t))return;e.uniform2fv(this.addr,t),lT(i,t)}}function lz(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(lC(i,t))return;e.uniform3fv(this.addr,t),lT(i,t)}}function lI(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(lC(i,t))return;e.uniform4fv(this.addr,t),lT(i,t)}}function lL(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(lC(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),lT(i,t)}else{if(lC(i,n))return;lS.set(n),e.uniformMatrix2fv(this.addr,!1,lS),lT(i,n)}}function lN(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(lC(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),lT(i,t)}else{if(lC(i,n))return;lw.set(n),e.uniformMatrix3fv(this.addr,!1,lw),lT(i,n)}}function lD(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(lC(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),lT(i,t)}else{if(lC(i,n))return;lb.set(n),e.uniformMatrix4fv(this.addr,!1,lb),lT(i,n)}}function lO(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function lR(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(lC(i,t))return;e.uniform2iv(this.addr,t),lT(i,t)}}function lk(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(lC(i,t))return;e.uniform3iv(this.addr,t),lT(i,t)}}function lU(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(lC(i,t))return;e.uniform4iv(this.addr,t),lT(i,t)}}function lV(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function lF(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(lC(i,t))return;e.uniform2uiv(this.addr,t),lT(i,t)}}function lB(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(lC(i,t))return;e.uniform3uiv(this.addr,t),lT(i,t)}}function lH(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(lC(i,t))return;e.uniform4uiv(this.addr,t),lT(i,t)}}function lG(e,t,i){let n;let r=this.cache,s=i.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),this.type===e.SAMPLER_2D_SHADOW?(lm.compareFunction=515,n=lm):n=lf,i.setTexture2D(t||n,s)}function lW(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||lv,r)}function lq(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||ly,r)}function lj(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||lg,r)}function lX(e,t){e.uniform1fv(this.addr,t)}function lJ(e,t){let i=lM(t,this.size,2);e.uniform2fv(this.addr,i)}function lY(e,t){let i=lM(t,this.size,3);e.uniform3fv(this.addr,i)}function lZ(e,t){let i=lM(t,this.size,4);e.uniform4fv(this.addr,i)}function l$(e,t){let i=lM(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function lQ(e,t){let i=lM(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function lK(e,t){let i=lM(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function l0(e,t){e.uniform1iv(this.addr,t)}function l1(e,t){e.uniform2iv(this.addr,t)}function l2(e,t){e.uniform3iv(this.addr,t)}function l3(e,t){e.uniform4iv(this.addr,t)}function l5(e,t){e.uniform1uiv(this.addr,t)}function l4(e,t){e.uniform2uiv(this.addr,t)}function l6(e,t){e.uniform3uiv(this.addr,t)}function l9(e,t){e.uniform4uiv(this.addr,t)}function l8(e,t,i){let n=this.cache,r=t.length,s=lA(i,r);lC(n,s)||(e.uniform1iv(this.addr,s),lT(n,s));for(let e=0;e!==r;++e)i.setTexture2D(t[e]||lf,s[e])}function l7(e,t,i){let n=this.cache,r=t.length,s=lA(i,r);lC(n,s)||(e.uniform1iv(this.addr,s),lT(n,s));for(let e=0;e!==r;++e)i.setTexture3D(t[e]||lv,s[e])}function he(e,t,i){let n=this.cache,r=t.length,s=lA(i,r);lC(n,s)||(e.uniform1iv(this.addr,s),lT(n,s));for(let e=0;e!==r;++e)i.setTextureCube(t[e]||ly,s[e])}function ht(e,t,i){let n=this.cache,r=t.length,s=lA(i,r);lC(n,s)||(e.uniform1iv(this.addr,s),lT(n,s));for(let e=0;e!==r;++e)i.setTexture2DArray(t[e]||lg,s[e])}class hi{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return lP;case 35664:return lE;case 35665:return lz;case 35666:return lI;case 35674:return lL;case 35675:return lN;case 35676:return lD;case 5124:case 35670:return lO;case 35667:case 35671:return lR;case 35668:case 35672:return lk;case 35669:case 35673:return lU;case 5125:return lV;case 36294:return lF;case 36295:return lB;case 36296:return lH;case 35678:case 36198:case 36298:case 36306:case 35682:return lG;case 35679:case 36299:case 36307:return lW;case 35680:case 36300:case 36308:case 36293:return lq;case 36289:case 36303:case 36311:case 36292:return lj}}(t.type)}}class hn{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return lX;case 35664:return lJ;case 35665:return lY;case 35666:return lZ;case 35674:return l$;case 35675:return lQ;case 35676:return lK;case 5124:case 35670:return l0;case 35667:case 35671:return l1;case 35668:case 35672:return l2;case 35669:case 35673:return l3;case 5125:return l5;case 36294:return l4;case 36295:return l6;case 36296:return l9;case 35678:case 36198:case 36298:case 36306:case 35682:return l8;case 35679:case 36299:case 36307:return l7;case 35680:case 36300:case 36308:case 36293:return he;case 36289:case 36303:case 36311:case 36292:return ht}}(t.type)}}class hr{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let n=this.seq;for(let r=0,s=n.length;r!==s;++r){let s=n[r];s.setValue(e,t[s.id],i)}}}let hs=/(\w+)(\])?(\[|\.)?/g;function ha(e,t){e.seq.push(t),e.map[t.id]=t}class ho{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){let i=e.getActiveUniform(t,n),r=e.getUniformLocation(t,i.name);!function(e,t,i){let n=e.name,r=n.length;for(hs.lastIndex=0;;){let s=hs.exec(n),a=hs.lastIndex,o=s[1],l="]"===s[2],h=s[3];if(l&&(o|=0),void 0===h||"["===h&&a+2===r){ha(i,void 0===h?new hi(o,e,t):new hn(o,e,t));break}{let e=i.map[o];void 0===e&&ha(i,e=new hr(o)),i=e}}}(i,r,this)}}setValue(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){let s=t[r],a=i[s.id];!1!==a.needsUpdate&&s.setValue(e,a.value,n)}}static seqWithValue(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let r=e[n];r.id in t&&i.push(r)}return i}}function hl(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let hh=0,hc=new rd;function hd(e,t,i){let n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";let s=/ERROR: 0:(\d+)/.exec(r);if(!s)return r;{let n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){let i=e.split("\n"),n=[],r=Math.max(t-6,0),s=Math.min(t+6,i.length);for(let e=r;e<s;e++){let r=e+1;n.push(`${r===t?">":" "} ${r}: ${i[e]}`)}return n.join("\n")}(e.getShaderSource(t),n)}}let hu=new rI;function hp(e){return""!==e}function hf(e,t){let i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function hm(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let hg=/^[ \t]*#include +<([\w\d./]+)>/gm;function hv(e){return e.replace(hg,hx)}let hy=new Map;function hx(e,t){let i=o4[t];if(void 0===i){let e=hy.get(t);if(void 0!==e)i=o4[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return hv(i)}let h_=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function hb(e){return e.replace(h_,hw)}function hw(e,t,i,n){let r="";for(let e=parseInt(t);e<parseInt(i);e++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function hS(e){let t=`precision ${e.precision} float;
	precision ${e.precision} int;
	precision ${e.precision} sampler2D;
	precision ${e.precision} samplerCube;
	precision ${e.precision} sampler3D;
	precision ${e.precision} sampler2DArray;
	precision ${e.precision} sampler2DShadow;
	precision ${e.precision} samplerCubeShadow;
	precision ${e.precision} sampler2DArrayShadow;
	precision ${e.precision} isampler2D;
	precision ${e.precision} isampler3D;
	precision ${e.precision} isamplerCube;
	precision ${e.precision} isampler2DArray;
	precision ${e.precision} usampler2D;
	precision ${e.precision} usampler3D;
	precision ${e.precision} usamplerCube;
	precision ${e.precision} usampler2DArray;
	`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}let hM=0;class hC{constructor(e){this.id=hM++,this.code=e,this.usedTimes=0}}function hT(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function hA(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function hP(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":i={direction:new rI,color:new sG};break;case"SpotLight":i={position:new rI,direction:new rI,color:new sG,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new rI,color:new sG,distance:0,decay:0};break;case"HemisphereLight":i={direction:new rI,skyColor:new sG,groundColor:new sG};break;case"RectAreaLight":i={color:new sG,position:new rI,halfWidth:new rI,halfHeight:new rI}}return e[t.id]=i,i}}}let hE=0;function hz(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function hI(e){let t=new hP,i=function(){let e={};return{get:function(t){let i;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rc};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rc,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)n.probe.push(new rI);let r=new rI,s=new r9,a=new r9;return{setup:function(r){let s=0,a=0,o=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let l=0,h=0,c=0,d=0,u=0,p=0,f=0,m=0,g=0,v=0,y=0;r.sort(hz);for(let e=0,x=r.length;e<x;e++){let x=r[e],_=x.color,b=x.intensity,w=x.distance,S=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)s+=_.r*b,a+=_.g*b,o+=_.b*b;else if(x.isLightProbe){for(let e=0;e<9;e++)n.probe[e].addScaledVector(x.sh.coefficients[e],b);y++}else if(x.isDirectionalLight){let e=t.get(x);if(e.color.copy(x.color).multiplyScalar(x.intensity),x.castShadow){let e=x.shadow,t=i.get(x);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,n.directionalShadow[l]=t,n.directionalShadowMap[l]=S,n.directionalShadowMatrix[l]=x.shadow.matrix,p++}n.directional[l]=e,l++}else if(x.isSpotLight){let e=t.get(x);e.position.setFromMatrixPosition(x.matrixWorld),e.color.copy(_).multiplyScalar(b),e.distance=w,e.coneCos=Math.cos(x.angle),e.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),e.decay=x.decay,n.spot[c]=e;let r=x.shadow;if(x.map&&(n.spotLightMap[g]=x.map,g++,r.updateMatrices(x),x.castShadow&&v++),n.spotLightMatrix[c]=r.matrix,x.castShadow){let e=i.get(x);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,n.spotShadow[c]=e,n.spotShadowMap[c]=S,m++}c++}else if(x.isRectAreaLight){let e=t.get(x);e.color.copy(_).multiplyScalar(b),e.halfWidth.set(.5*x.width,0,0),e.halfHeight.set(0,.5*x.height,0),n.rectArea[d]=e,d++}else if(x.isPointLight){let e=t.get(x);if(e.color.copy(x.color).multiplyScalar(x.intensity),e.distance=x.distance,e.decay=x.decay,x.castShadow){let e=x.shadow,t=i.get(x);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,n.pointShadow[h]=t,n.pointShadowMap[h]=S,n.pointShadowMatrix[h]=x.shadow.matrix,f++}n.point[h]=e,h++}else if(x.isHemisphereLight){let e=t.get(x);e.skyColor.copy(x.color).multiplyScalar(b),e.groundColor.copy(x.groundColor).multiplyScalar(b),n.hemi[u]=e,u++}}d>0&&(!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=o6.LTC_FLOAT_1,n.rectAreaLTC2=o6.LTC_FLOAT_2):(n.rectAreaLTC1=o6.LTC_HALF_1,n.rectAreaLTC2=o6.LTC_HALF_2)),n.ambient[0]=s,n.ambient[1]=a,n.ambient[2]=o;let x=n.hash;(x.directionalLength!==l||x.pointLength!==h||x.spotLength!==c||x.rectAreaLength!==d||x.hemiLength!==u||x.numDirectionalShadows!==p||x.numPointShadows!==f||x.numSpotShadows!==m||x.numSpotMaps!==g||x.numLightProbes!==y)&&(n.directional.length=l,n.spot.length=c,n.rectArea.length=d,n.point.length=h,n.hemi.length=u,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=f,n.pointShadowMap.length=f,n.spotShadow.length=m,n.spotShadowMap.length=m,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=f,n.spotLightMatrix.length=m+g-v,n.spotLightMap.length=g,n.numSpotLightShadowsWithMaps=v,n.numLightProbes=y,x.directionalLength=l,x.pointLength=h,x.spotLength=c,x.rectAreaLength=d,x.hemiLength=u,x.numDirectionalShadows=p,x.numPointShadows=f,x.numSpotShadows=m,x.numSpotMaps=g,x.numLightProbes=y,n.version=hE++)},setupView:function(e,t){let i=0,o=0,l=0,h=0,c=0,d=t.matrixWorldInverse;for(let t=0,u=e.length;t<u;t++){let u=e[t];if(u.isDirectionalLight){let e=n.directional[i];e.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(d),i++}else if(u.isSpotLight){let e=n.spot[l];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(d),e.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(d),l++}else if(u.isRectAreaLight){let e=n.rectArea[h];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(d),a.identity(),s.copy(u.matrixWorld),s.premultiply(d),a.extractRotation(s),e.halfWidth.set(.5*u.width,0,0),e.halfHeight.set(0,.5*u.height,0),e.halfWidth.applyMatrix4(a),e.halfHeight.applyMatrix4(a),h++}else if(u.isPointLight){let e=n.point[o];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(d),o++}else if(u.isHemisphereLight){let e=n.hemi[c];e.direction.setFromMatrixPosition(u.matrixWorld),e.direction.transformDirection(d),c++}}},state:n}}let hL=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,hN=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;function hD(){let e=(0,h.useRef)(null),[t,i]=(0,h.useState)({x:0,y:0});return(0,h.useRef)(null),(0,h.useRef)(null),(0,h.useRef)(null),(0,h.useRef)(null),(0,h.useRef)(null),(0,h.useRef)(null),(0,r.jsx)("div",{ref:e,className:"fixed inset-0 z-0 pointer-events-none"})}function hO(){let[e,t]=(0,h.useState)("geometric-mesh"),[i,n]=(0,h.useState)(!1),s=i=>{t(e===i?"none":i),n(!1)};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"fixed bottom-6 right-6 z-50 flex flex-col items-end",children:[i&&(0,r.jsxs)("div",{className:"mb-4 bg-black/80 backdrop-blur-md border border-discord-primary/20 rounded-xl shadow-lg p-3 animate-in fade-in slide-in-from-bottom-5 duration-200",children:[(0,r.jsxs)("div",{className:"flex items-center justify-between mb-2 px-2",children:[(0,r.jsx)("span",{className:"text-xs font-medium text-white/80",children:"Background"}),(0,r.jsx)("button",{onClick:()=>n(!1),className:"text-white/60 hover:text-white",children:(0,r.jsx)(d.A,{className:"h-4 w-4"})})]}),(0,r.jsxs)("div",{className:"flex gap-2 p-1",children:[(0,r.jsx)("button",{onClick:()=>s("geometric-mesh"),className:`flex items-center justify-center w-10 h-10 rounded-lg transition-all ${"geometric-mesh"===e?"bg-discord-primary text-white":"bg-black/50 text-white/70 hover:bg-black/70"}`,title:"3D Mesh",children:(0,r.jsx)(p,{className:"h-5 w-5"})}),(0,r.jsx)("button",{onClick:()=>s("particles"),className:`flex items-center justify-center w-10 h-10 rounded-lg transition-all ${"particles"===e?"bg-discord-primary text-white":"bg-black/50 text-white/70 hover:bg-black/70"}`,title:"Particles",children:(0,r.jsx)(f,{className:"h-5 w-5"})}),(0,r.jsx)("button",{onClick:()=>s("simple-particles"),className:`flex items-center justify-center w-10 h-10 rounded-lg transition-all ${"simple-particles"===e?"bg-discord-primary text-white":"bg-black/50 text-white/70 hover:bg-black/70"}`,title:"Simple Particles",children:(0,r.jsx)(f,{className:"h-4 w-4"})}),(0,r.jsx)("button",{onClick:()=>s("chat-bubbles"),className:`flex items-center justify-center w-10 h-10 rounded-lg transition-all ${"chat-bubbles"===e?"bg-discord-primary text-white":"bg-black/50 text-white/70 hover:bg-black/70"}`,title:"Chat Bubbles",children:(0,r.jsx)(o.A,{className:"h-5 w-5"})})]})]}),(0,r.jsx)("button",{onClick:()=>{n(!i)},className:"flex items-center justify-center w-12 h-12 rounded-full bg-black/80 backdrop-blur-md border border-discord-primary/20 shadow-lg hover:bg-black/90 transition-all",children:(0,r.jsx)(p,{className:`h-6 w-6 ${"none"===e?"text-white/70":"text-discord-primary"}`})})]}),"particles"===e&&(0,r.jsx)(n0,{}),"simple-particles"===e&&(0,r.jsx)(n1,{}),"chat-bubbles"===e&&(0,r.jsx)(n6,{}),"geometric-mesh"===e&&(0,r.jsx)(hD,{})]})}function hR(){let{t:e}=(0,l.B)();return(0,r.jsxs)("section",{className:"w-full h-[calc(100vh-64px)] flex items-center justify-center bg-discord-nightBlue relative overflow-hidden",children:[(0,r.jsx)("div",{className:"absolute inset-0 bg-night-blue-gradient opacity-70 z-[-1]"}),(0,r.jsx)("div",{className:"container px-4 md:px-6 relative z-10",children:(0,r.jsxs)("div",{className:"flex flex-col items-center justify-center space-y-8 text-center",children:[(0,r.jsxs)("div",{className:"space-y-4",children:[(0,r.jsx)("h1",{className:"text-4xl font-bold tracking-tighter sm:text-5xl md:text-6xl text-white",children:e("community.hero.title")}),(0,r.jsx)("p",{className:"max-w-[700px] mx-auto text-white/90 md:text-xl/relaxed",children:e("community.hero.description")})]}),(0,r.jsx)("div",{className:"flex flex-col gap-2 min-[400px]:flex-row",children:(0,r.jsx)("a",{href:"https://discord.com/invite/zYE9ztWfan",target:"_blank",rel:"noopener noreferrer",children:(0,r.jsxs)(a.$,{className:"bg-discord-primary text-white hover:bg-discord-primary/90 group",children:[(0,r.jsx)(o.A,{className:"mr-2 h-4 w-4"}),e("community.hero.joinDiscord")]})})})]})}),(0,r.jsx)(hO,{})]})}function hk(){return(0,r.jsx)(s.$,{children:(0,r.jsx)(hR,{})})}},1575:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});let n=(0,i(1680).A)("MessageCircle",[["path",{d:"M7.9 20A9 9 0 1 0 4 16.1L2 22Z",key:"vv11sd"}]])},617:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});let n=(0,i(1680).A)("Star",[["path",{d:"M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z",key:"r04s7s"}]])},5414:(e,t,i)=>{"use strict";i.d(t,{default:()=>n});let n=(0,i(6760).registerClientReference)(function(){throw Error("Attempted to call the default export of \"/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/community/community-client.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/home/runner/work/clashivfxstoredeploy/clashivfxstoredeploy/app/community/community-client.tsx","default")},8618:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a,metadata:()=>s});var n=i(2740),r=i(5414);let s={title:"Community | Join Our Editors Network",description:"Join our community of video editors to share work, get feedback, and collaborate on projects."};function a(){return(0,n.jsx)(r.default,{})}}};var t=require("../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),n=t.X(0,[638,581,975,922],()=>i(9693));module.exports=n})();